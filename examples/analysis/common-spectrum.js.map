{"version":3,"file":"common-spectrum.js","sources":["../node_modules/is-any-array/src/index.js","../node_modules/median-quickselect/lib/median-quickselect.min.js","../node_modules/ml-array-median/lib-es6/index.js","../node_modules/ml-spectra-processing/src/x/xAdd.js","../node_modules/ml-spectra-processing/src/x/xMultiply.js","../node_modules/ml-spectra-processing/src/x/xDivide.js","../node_modules/ml-spectra-processing/src/x/xFindClosestIndex.js","../node_modules/ml-array-sequential-fill/lib-es6/index.js","../node_modules/ml-spectra-processing/src/x/xIsMonotone.js","../node_modules/ml-array-sum/lib-es6/index.js","../node_modules/ml-array-mean/lib-es6/index.js","../node_modules/ml-array-min/lib-es6/index.js","../node_modules/ml-array-max/lib-es6/index.js","../node_modules/ml-spectra-processing/src/x/xSubtract.js","../node_modules/ml-spectra-processing/src/xy/xyCheck.js","../node_modules/ml-spectra-processing/src/xy/xyEnsureGrowingX.js","../node_modules/ml-spectra-processing/src/xy/xyFilterXPositive.js","../node_modules/ml-spectra-processing/src/xy/xyMaxClosestYPoint.js","../node_modules/ml-spectra-processing/src/xy/xyMinClosestYPoint.js","../node_modules/ml-peak-shape-generator/lib-esm/util/constants.js","../node_modules/ml-peak-shape-generator/lib-esm/util/erfinv.js","../node_modules/ml-peak-shape-generator/lib-esm/shapes/1d/Shape1D.js","../node_modules/ml-peak-shape-generator/lib-esm/shapes/1d/gaussian/Gaussian.js","../node_modules/ml-peak-shape-generator/lib-esm/shapes/1d/lorentzian/Lorentzian.js","../node_modules/ml-peak-shape-generator/lib-esm/shapes/1d/pseudoVoigt/PseudoVoigt.js","../node_modules/ml-peak-shape-generator/lib-esm/util/getShape1D.js","../node_modules/ml-savitzky-golay-generalized/src/index.js","../node_modules/ml-gsd/src/gsd.js","../node_modules/assign-symbols/index.js","../node_modules/assign-deep/index.js","../node_modules/ml-spectra-fitting/node_modules/ml-peak-shape-generator/src/util/constants.js","../node_modules/ml-spectra-fitting/node_modules/ml-peak-shape-generator/src/util/erfinv.js","../node_modules/ml-spectra-fitting/node_modules/ml-peak-shape-generator/src/classes/Gaussian.js","../node_modules/ml-spectra-fitting/node_modules/ml-peak-shape-generator/src/classes/Lorentzian.js","../node_modules/ml-spectra-fitting/node_modules/ml-peak-shape-generator/src/classes/PseudoVoigt.js","../node_modules/ml-spectra-fitting/src/shapes/sumOfGaussianLorentzians.js","../node_modules/ml-spectra-fitting/src/shapes/sumOfGaussians.js","../node_modules/ml-spectra-fitting/src/shapes/sumOfLorentzians.js","../node_modules/ml-spectra-fitting/src/checkInput.js","../node_modules/ml-levenberg-marquardt/src/checkOptions.js","../node_modules/ml-levenberg-marquardt/src/errorCalculation.js","../node_modules/ml-array-rescale/lib-es6/index.js","../node_modules/ml-matrix/src/inspect.js","../node_modules/ml-matrix/src/mathOperations.js","../node_modules/ml-matrix/src/util.js","../node_modules/ml-matrix/src/stat.js","../node_modules/ml-matrix/src/matrix.js","../node_modules/ml-matrix/src/views/base.js","../node_modules/ml-matrix/src/views/transpose.js","../node_modules/ml-matrix/src/wrap/WrapperMatrix2D.js","../node_modules/ml-matrix/src/dc/lu.js","../node_modules/ml-matrix/src/dc/util.js","../node_modules/ml-matrix/src/dc/qr.js","../node_modules/ml-matrix/src/dc/svd.js","../node_modules/ml-matrix/src/decompositions.js","../node_modules/ml-levenberg-marquardt/src/gradientFunction.js","../node_modules/ml-levenberg-marquardt/src/step.js","../node_modules/ml-levenberg-marquardt/src/index.js","../node_modules/ml-spectra-fitting/src/selectMethod.js","../node_modules/ml-spectra-fitting/src/index.js","../lib-esm/jsgraph/addStyle.js","../lib-esm/jsgraph/colors.js","../lib-esm/jsgraph/getJSGraph.js","../lib-esm/jsgraph/getNormalizationAnnotations.js","../lib-esm/util/appendDistinctParameter.js","../lib-esm/util/appendDistinctValue.js","../lib-esm/AnalysesManager.js","../node_modules/ml-airpls/src/choleskySolver.js","../node_modules/cuthill-mckee/cuthill-mckee.js","../node_modules/ml-airpls/src/utils.js","../node_modules/ml-airpls/src/index.js","../node_modules/baselines/src/airPLS.js","../node_modules/ml-regression-base/src/maybeToPrecision.js","../node_modules/ml-regression-base/src/checkArrayLength.js","../node_modules/ml-regression-base/src/index.js","../node_modules/ml-regression-polynomial/src/index.js","../node_modules/ml-baseline-correction-regression/src/index.js","../node_modules/baselines/src/iterativePolynomial.js","../node_modules/baselines/node_modules/ml-spectra-processing/src/x/xCheck.js","../node_modules/baselines/node_modules/ml-spectra-processing/src/x/xPadding.js","../node_modules/baselines/node_modules/ml-spectra-processing/src/x/xRolling.js","../node_modules/baselines/node_modules/ml-spectra-processing/src/x/xRollingAverage.js","../node_modules/baselines/node_modules/ml-spectra-processing/src/x/xRollingMedian.js","../node_modules/baselines/src/rollingAverage.js","../node_modules/ml-rolling-ball-baseline/src/rollingBall.js","../node_modules/baselines/src/rollingBall.js","../node_modules/baselines/src/rollingMedian.js","../node_modules/ml-array-normed/lib-es6/index.js","../node_modules/ml-zones/src/normalize.js","../node_modules/ml-zones/src/invert.js","../node_modules/ml-zones/src/zonesWithPoints.js","../node_modules/ml-array-xy-equally-spaced/src/equallySpacedSlot.js","../node_modules/ml-array-xy-equally-spaced/src/integral.js","../node_modules/ml-array-xy-equally-spaced/src/equallySpacedSmooth.js","../node_modules/ml-array-xy-equally-spaced/src/index.js","../node_modules/ml-array-xy-filter-x/src/getZones.js","../node_modules/ml-array-xy-filter-x/src/index.js","../node_modules/ml-pad-array/src/index.js","../node_modules/ml-savitzky-golay/lib-esm/index.js","../node_modules/ml-stat/array.js","../lib-esm/util/getNormalizedSpectrum.js","../node_modules/js-quantities/build/quantities.js","../lib-esm/util/convertUnit.js","../lib-esm/util/ensureRegexp.js","../lib-esm/util/getConvertedVariable.js","../lib-esm/util/getXYSpectrum.js","../lib-esm/Analysis.js","../node_modules/jcampconverter/node_modules/ensure-string/lib-esm/index.js","../node_modules/dynamic-typing/src/parseString.js","../node_modules/jcampconverter/src/complexChromatogram.js","../node_modules/jcampconverter/src/convertToFloatArray.js","../node_modules/jcampconverter/src/parse/fastParseXYData.js","../node_modules/jcampconverter/src/parse/parsePeakTable.js","../node_modules/jcampconverter/src/parse/parseXYA.js","../node_modules/jcampconverter/src/2d/convertTo3DZ.js","../node_modules/jcampconverter/src/2d/generateContourLines.js","../node_modules/jcampconverter/src/2d/add2D.js","../node_modules/nmr-processing/lib-esm/constants/gyromagneticRatio.js","../node_modules/jcampconverter/src/postProcessingNMR.js","../node_modules/jcampconverter/src/profiling.js","../node_modules/jcampconverter/src/simpleChromatogram.js","../node_modules/jcampconverter/src/postProcessing.js","../node_modules/jcampconverter/src/prepareNtuplesDatatable.js","../node_modules/jcampconverter/src/prepareSpectrum.js","../node_modules/jcampconverter/src/convert.js","../lib-esm/from/fromJcamp.js","../node_modules/ensure-string/src/index.js","../node_modules/ml-arrayxy-uniquex/src/index.js","../node_modules/xy-parser/src/index.js","../lib-esm/from/fromText.js","../node_modules/convert-to-jcamp/src/creatorNtuples.js","../node_modules/convert-to-jcamp/src/utils/getNumber.js","../node_modules/convert-to-jcamp/src/utils/peakTableCreator.js","../node_modules/convert-to-jcamp/src/utils/xyDataCreator.js","../node_modules/convert-to-jcamp/src/fromJSON.js","../node_modules/convert-to-jcamp/src/fromVariables.js","../lib-esm/to/toJcamps.js","../lib-esm/to/toJcamp.js","../lib-esm/to/toText.js","../lib-esm/util/peakPicking.js","../lib-esm/util/autoPeakPicking.js","../lib-esm/reactPlot/getReactPlotJSON.js","../lib-esm/index.js"],"sourcesContent":["const toString = Object.prototype.toString;\n\nexport default function isAnyArray(object) {\n  return toString.call(object).endsWith('Array]');\n}\n","(function(){function a(d){for(var e=0,f=d.length-1,g=void 0,h=void 0,i=void 0,j=c(e,f);!0;){if(f<=e)return d[j];if(f==e+1)return d[e]>d[f]&&b(d,e,f),d[j];for(g=c(e,f),d[g]>d[f]&&b(d,g,f),d[e]>d[f]&&b(d,e,f),d[g]>d[e]&&b(d,g,e),b(d,g,e+1),h=e+1,i=f;!0;){do h++;while(d[e]>d[h]);do i--;while(d[i]>d[e]);if(i<h)break;b(d,h,i)}b(d,e,i),i<=j&&(e=h),i>=j&&(f=i-1)}}var b=function b(d,e,f){var _ref;return _ref=[d[f],d[e]],d[e]=_ref[0],d[f]=_ref[1],_ref},c=function c(d,e){return~~((d+e)/2)};'undefined'!=typeof module&&module.exports?module.exports=a:window.median=a})();\n","import isArray from 'is-any-array';\nimport quickSelectMedian from 'median-quickselect';\n\nfunction median(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  return quickSelectMedian(input.slice());\n}\n\nexport default median;\n","import isAnyArray from 'is-any-array';\n\n/**\n * This function xAdd the first array by the second array or a constant value to each element of the first array\n * @param {Array<Number>} array1 - the array that will be rotated\n * @param {Array|Number} array2\n * @return {Array}\n */\nexport function xAdd(array1, array2) {\n  let isConstant = false;\n  let constant;\n  if (isAnyArray(array2)) {\n    if (array1.length !== array2.length) {\n      throw new Error('sub: size of array1 and array2 must be identical');\n    }\n  } else {\n    isConstant = true;\n    constant = Number(array2);\n  }\n\n  let array3 = new Array(array1.length);\n  if (isConstant) {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] + constant;\n    }\n  } else {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] + array2[i];\n    }\n  }\n\n  return array3;\n}\n","import isAnyArray from 'is-any-array';\n/**\n * This function xMultiply the first array by the second array or a constant value to each element of the first array\n * @param {Array} array1 - the array that will be rotated\n * @param {Array|Number} array2\n * @return {Float64Array}\n */\nexport function xMultiply(array1, array2) {\n  let isConstant = false;\n  let constant;\n  if (isAnyArray(array2)) {\n    if (array1.length !== array2.length) {\n      throw new Error('sub: size of array1 and array2 must be identical');\n    }\n  } else {\n    isConstant = true;\n    constant = Number(array2);\n  }\n\n  let array3 = new Float64Array(array1.length);\n  if (isConstant) {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] * constant;\n    }\n  } else {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] * array2[i];\n    }\n  }\n\n  return array3;\n}\n","import isAnyArray from 'is-any-array';\n\n/**\n * This function divide the first array by the second array or a constant value to each element of the first array\n * @param {Array<Number>} array1 - the array that will be rotated\n * @param {Array<Number>|Number} array2\n * @return {Array}\n */\nexport function xDivide(array1, array2) {\n  let isConstant = false;\n  let constant;\n  if (isAnyArray(array2)) {\n    if (array1.length !== array2.length) {\n      throw new Error('sub: size of array1 and array2 must be identical');\n    }\n  } else {\n    isConstant = true;\n    constant = Number(array2);\n  }\n\n  let array3 = new Array(array1.length);\n  if (isConstant) {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] / constant;\n    }\n  } else {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] / array2[i];\n    }\n  }\n\n  return array3;\n}\n","/**\n * Returns the closest index of a `target` in an ordered array\n * @param {array<Number>} array\n * @param {number} target\n */\n\nexport function xFindClosestIndex(array, target) {\n  let low = 0;\n  let high = array.length - 1;\n  let middle = 0;\n  while (high - low > 1) {\n    middle = low + ((high - low) >> 1);\n    if (array[middle] < target) {\n      low = middle;\n    } else if (array[middle] > target) {\n      high = middle;\n    } else {\n      return middle;\n    }\n  }\n\n  if (low < array.length - 1) {\n    if (Math.abs(target - array[low]) < Math.abs(array[low + 1] - target)) {\n      return low;\n    } else {\n      return low + 1;\n    }\n  } else {\n    return low;\n  }\n}\n","import isArray from 'is-any-array';\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\n/**\n * Fill an array with sequential numbers\n * @param {Array<number>} [input] - optional destination array (if not provided a new array will be created)\n * @param {object} [options={}]\n * @param {number} [options.from=0] - first value in the array\n * @param {number} [options.to=10] - last value in the array\n * @param {number} [options.size=input.length] - size of the array (if not provided calculated from step)\n * @param {number} [options.step] - if not provided calculated from size\n * @return {Array<number>}\n */\n\nfunction sequentialFill() {\n  var input = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (_typeof(input) === 'object' && !isArray(input)) {\n    options = input;\n    input = [];\n  }\n\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  var _options = options,\n      _options$from = _options.from,\n      from = _options$from === void 0 ? 0 : _options$from,\n      _options$to = _options.to,\n      to = _options$to === void 0 ? 10 : _options$to,\n      _options$size = _options.size,\n      size = _options$size === void 0 ? input.length : _options$size,\n      step = _options.step;\n\n  if (size !== 0 && step) {\n    throw new Error('step is defined by the array size');\n  }\n\n  if (!size) {\n    if (step) {\n      size = Math.floor((to - from) / step) + 1;\n    } else {\n      size = to - from + 1;\n    }\n  }\n\n  if (!step && size) {\n    step = (to - from) / (size - 1);\n  }\n\n  if (Array.isArray(input)) {\n    // only works with normal array\n    input.length = 0;\n\n    for (var i = 0; i < size; i++) {\n      input.push(from);\n      from += step;\n    }\n  } else {\n    if (input.length !== size) {\n      throw new Error('sequentialFill typed array must have the correct length');\n    }\n\n    for (var _i = 0; _i < size; _i++) {\n      input[_i] = from;\n      from += step;\n    }\n  }\n\n  return input;\n}\n\nexport { sequentialFill as default };\n","/**\n * Returns true if x is monotone\n * @param {Array} array\n * @return {boolean}\n */\nexport function xIsMonotone(array) {\n  if (array.length <= 2) {\n    return true;\n  }\n  if (array[0] === array[1]) {\n    // maybe a constant series\n    for (let i = 1; i < array.length - 1; i++) {\n      if (array[i] !== array[i + 1]) return false;\n    }\n    return true;\n  }\n\n  if (array[0] < array[array.length - 1]) {\n    for (let i = 0; i < array.length - 1; i++) {\n      if (array[i] >= array[i + 1]) return false;\n    }\n  } else {\n    for (let i = 0; i < array.length - 1; i++) {\n      if (array[i] <= array[i + 1]) return false;\n    }\n  }\n  return true;\n}\n","import isArray from 'is-any-array';\n\nfunction sum(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var sumValue = 0;\n\n  for (var i = 0; i < input.length; i++) {\n    sumValue += input[i];\n  }\n\n  return sumValue;\n}\n\nexport default sum;\n","import sum from 'ml-array-sum';\n\nfunction mean(input) {\n  return sum(input) / input.length;\n}\n\nexport default mean;\n","import isArray from 'is-any-array';\n\nfunction min(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var _options$fromIndex = options.fromIndex,\n      fromIndex = _options$fromIndex === void 0 ? 0 : _options$fromIndex,\n      _options$toIndex = options.toIndex,\n      toIndex = _options$toIndex === void 0 ? input.length : _options$toIndex;\n\n  if (fromIndex < 0 || fromIndex >= input.length || !Number.isInteger(fromIndex)) {\n    throw new Error('fromIndex must be a positive integer smaller than length');\n  }\n\n  if (toIndex <= fromIndex || toIndex > input.length || !Number.isInteger(toIndex)) {\n    throw new Error('toIndex must be an integer greater than fromIndex and at most equal to length');\n  }\n\n  var minValue = input[fromIndex];\n\n  for (var i = fromIndex + 1; i < toIndex; i++) {\n    if (input[i] < minValue) minValue = input[i];\n  }\n\n  return minValue;\n}\n\nexport default min;\n","import isArray from 'is-any-array';\n\nfunction max(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var _options$fromIndex = options.fromIndex,\n      fromIndex = _options$fromIndex === void 0 ? 0 : _options$fromIndex,\n      _options$toIndex = options.toIndex,\n      toIndex = _options$toIndex === void 0 ? input.length : _options$toIndex;\n\n  if (fromIndex < 0 || fromIndex >= input.length || !Number.isInteger(fromIndex)) {\n    throw new Error('fromIndex must be a positive integer smaller than length');\n  }\n\n  if (toIndex <= fromIndex || toIndex > input.length || !Number.isInteger(toIndex)) {\n    throw new Error('toIndex must be an integer greater than fromIndex and at most equal to length');\n  }\n\n  var maxValue = input[fromIndex];\n\n  for (var i = fromIndex + 1; i < toIndex; i++) {\n    if (input[i] > maxValue) maxValue = input[i];\n  }\n\n  return maxValue;\n}\n\nexport default max;\n","import isAnyArray from 'is-any-array';\n/**\n * This function xSubtract the first array by the second array or a constant value from each element of the first array\n * @param {Array} array1 - the array that will be rotated\n * @param {Array|Number} array2\n * @return {Array}\n */\nexport function xSubtract(array1, array2) {\n  let isConstant = false;\n  let constant;\n  if (isAnyArray(array2)) {\n    if (array1.length !== array2.length) {\n      throw new Error('sub: size of array1 and array2 must be identical');\n    }\n  } else {\n    isConstant = true;\n    constant = Number(array2);\n  }\n\n  let array3 = new Array(array1.length);\n  if (isConstant) {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] - constant;\n    }\n  } else {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] - array2[i];\n    }\n  }\n\n  return array3;\n}\n","import isAnyArray from 'is-any-array';\n\n/**\n * Throw an error in no an object of x,y arrays\n * @param {DataXY} [data={}]\n */\nexport function xyCheck(data = {}) {\n  if (!isAnyArray(data.x) || !isAnyArray(data.y)) {\n    throw new Error('Data must be an object of x and y arrays');\n  }\n  if (data.x.length !== data.y.length) {\n    throw new Error('The x and y arrays mush have the same length');\n  }\n}\n","import { xyCheck } from './xyCheck';\n\n/**\n * Filters x,y values to allow strictly growing values in x axis.\n * @param {DataXY} [data={}] - Object that contains property x (an ordered increasing array) and y (an array)\n * @return {DataXY}\n */\nexport function xyEnsureGrowingX(data = {}) {\n  xyCheck(data);\n  const x = Array.from(data.x);\n  const y = Array.from(data.y);\n  let prevX = -Infinity;\n  let ansX = [];\n  let ansY = [];\n\n  for (let index = 0; index < x.length; index++) {\n    if (prevX < x[index]) {\n      ansX.push(x[index]);\n      ansY.push(y[index]);\n      prevX = x[index];\n    }\n  }\n  return { x: ansX, y: ansY };\n}\n","import { xyCheck } from './xyCheck';\n/**\n * Filter out all the points for which x <= 0. Useful to display log scale data\n * @param {DataXY} [data={}]\n * @return {{x:[],y:[]}} An object with the filtered data\n */\n\nexport function xyFilterXPositive(data = {}) {\n  xyCheck(data);\n  const { x, y } = data;\n  const newX = [];\n  const newY = [];\n  for (let i = 0; i < x.length; i++) {\n    if (x[i] > 0) {\n      newX.push(x[i]);\n      newY.push(y[i]);\n    }\n  }\n\n  return { x: newX, y: newY };\n}\n","import { xFindClosestIndex } from '../x/xFindClosestIndex';\n\nimport { xyCheck } from './xyCheck';\n\n/**\n * Find the closest maximum going up hill\n * @param {DataXY} [data={}] - Object that contains property x (an ordered increasing array) and y (an array)\n * @param {object} [options={}]\n * @param {number} [options.target]\n * @param {number} [options.targetIndex=0]\n * @return {{x,y,xIndex}} An object with the x/y value\n */\n\nexport function xyMaxClosestYPoint(data, options = {}) {\n  xyCheck(data);\n  const { x, y } = data;\n\n  let { target, targetIndex } = options;\n\n  if (targetIndex === undefined) {\n    if (target !== undefined) {\n      targetIndex = xFindClosestIndex(x, target);\n    } else {\n      targetIndex = 0;\n    }\n  }\n\n  let previousIndex = Number.MIN_SAFE_INTEGER;\n  let currentIndex = targetIndex;\n\n  let xyMaxY = y[targetIndex];\n\n  while (currentIndex !== previousIndex) {\n    previousIndex = currentIndex;\n    if (currentIndex > 0 && y[currentIndex - 1] > xyMaxY) {\n      currentIndex--;\n    } else if (currentIndex < x.length - 1 && y[currentIndex + 1] > xyMaxY) {\n      currentIndex++;\n    }\n    xyMaxY = y[currentIndex];\n  }\n  return {\n    x: x[currentIndex],\n    y: y[currentIndex],\n    index: currentIndex,\n  };\n}\n","import { xFindClosestIndex } from '../x/xFindClosestIndex';\n\nimport { xyCheck } from './xyCheck';\n\n/**\n * Find the closest minimum going down hill\n * @param {DataXY} [data={}] - Object that contains property x (an ordered increasing array) and y (an array)\n * @param {object} [options={}]\n * @param {number} [options.target]\n * @param {number} [options.targetIndex=0]\n * @return {{x,y,xIndex}} An object with the x/y value\n */\n\nexport function xyMinClosestYPoint(data, options = {}) {\n  xyCheck(data);\n  const { x, y } = data;\n\n  let { target, targetIndex } = options;\n\n  if (targetIndex === undefined) {\n    if (target !== undefined) {\n      targetIndex = xFindClosestIndex(x, target);\n    } else {\n      targetIndex = 0;\n    }\n  }\n\n  let previousIndex = Number.MIN_SAFE_INTEGER;\n  let currentIndex = targetIndex;\n\n  let minY = y[targetIndex];\n\n  while (currentIndex !== previousIndex) {\n    previousIndex = currentIndex;\n    if (currentIndex > 0 && y[currentIndex - 1] < minY) {\n      currentIndex--;\n    } else if (currentIndex < x.length - 1 && y[currentIndex + 1] < minY) {\n      currentIndex++;\n    }\n    minY = y[currentIndex];\n  }\n  return {\n    x: x[currentIndex],\n    y: y[currentIndex],\n    index: currentIndex,\n  };\n}\n","export const GAUSSIAN_EXP_FACTOR = -4 * Math.LN2;\nexport const ROOT_PI_OVER_LN2 = Math.sqrt(Math.PI / Math.LN2);\nexport const ROOT_THREE = Math.sqrt(3);\nexport const ROOT_2LN2 = Math.sqrt(2 * Math.LN2);\nexport const ROOT_2LN2_MINUS_ONE = Math.sqrt(2 * Math.LN2) - 1;\n//# sourceMappingURL=constants.js.map","// https://en.wikipedia.org/wiki/Error_function#Inverse_functions\n// This code yields to a good approximation\n// If needed a better implementation using polynomial can be found on https://en.wikipedia.org/wiki/Error_function#Inverse_functions\nexport default function erfinv(x) {\n    let a = 0.147;\n    if (x === 0)\n        return 0;\n    let ln1MinusXSqrd = Math.log(1 - x * x);\n    let lnEtcBy2Plus2 = ln1MinusXSqrd / 2 + 2 / (Math.PI * a);\n    let firstSqrt = Math.sqrt(lnEtcBy2Plus2 ** 2 - ln1MinusXSqrd / a);\n    let secondSqrt = Math.sqrt(firstSqrt - lnEtcBy2Plus2);\n    return secondSqrt * (x > 0 ? 1 : -1);\n}\n//# sourceMappingURL=erfinv.js.map","export class Shape1D {\n}\n//# sourceMappingURL=Shape1D.js.map","import { ROOT_2LN2, GAUSSIAN_EXP_FACTOR, ROOT_PI_OVER_LN2, } from '../../../util/constants';\nimport erfinv from '../../../util/erfinv';\nimport { Shape1D } from '../Shape1D';\nexport class Gaussian extends Shape1D {\n    constructor(options = {}) {\n        super();\n        const { fwhm = 500, sd, height } = options;\n        this.fwhm = sd ? widthToFWHM(2 * sd) : fwhm;\n        this.height =\n            height === undefined\n                ? Math.sqrt(-GAUSSIAN_EXP_FACTOR / Math.PI) / this.fwhm\n                : height;\n    }\n    fwhmToWidth(fwhm = this.fwhm) {\n        return fwhmToWidth(fwhm);\n    }\n    widthToFWHM(width) {\n        return widthToFWHM(width);\n    }\n    fct(x) {\n        return fct(x, this.fwhm);\n    }\n    getArea() {\n        return getArea({ fwhm: this.fwhm, height: this.height });\n    }\n    getFactor(area) {\n        return getFactor(area);\n    }\n    getData(options = {}) {\n        const { length, factor } = options;\n        return getData({ fwhm: this.fwhm, height: this.height, factor, length });\n    }\n}\n/**\n * Return a parameterized function of a gaussian shape (see README for equation).\n * @returns - the y value of gaussian with the current parameters.\n */\nexport function fct(x, fwhm) {\n    return Math.exp(GAUSSIAN_EXP_FACTOR * Math.pow(x / fwhm, 2));\n}\n/**\n * Compute the value of Full Width at Half Maximum (FWHM) from the width between the inflection points.\n * for more information check the [mathworld page](https://mathworld.wolfram.com/GaussianFunction.html)\n * @returns fwhm\n */\nexport function widthToFWHM(width) {\n    return width * ROOT_2LN2;\n}\n/**\n * Compute the value of width between the inflection points from Full Width at Half Maximum (FWHM).\n * for more information check the [mathworld page](https://mathworld.wolfram.com/GaussianFunction.html)\n * @param fwhm - Full Width at Half Maximum.\n * @returns width\n */\nexport function fwhmToWidth(fwhm) {\n    return fwhm / ROOT_2LN2;\n}\n/**\n * Calculate the area of a specific shape.\n * @returns returns the area of the specific shape and parameters.\n */\nexport function getArea(options) {\n    let { fwhm, sd, height = 1 } = options;\n    if (sd)\n        fwhm = widthToFWHM(2 * sd);\n    if (fwhm === undefined) {\n        throw new Error('should pass fwhm or sd parameters');\n    }\n    return (height * ROOT_PI_OVER_LN2 * fwhm) / 2;\n}\n/**\n * Calculate the number of times FWHM allows to reach a specific area coverage.\n * @param [area=0.9999] Expected area to be covered.\n * @returns\n */\nexport function getFactor(area = 0.9999) {\n    return Math.sqrt(2) * erfinv(area);\n}\n/**\n * Calculate intensity array of a gaussian shape.\n * @returns {Float64Array} Intensity values.\n */\nexport function getData(options = {}) {\n    let { length, factor = getFactor(), fwhm = 500, sd, height } = options;\n    if (sd)\n        fwhm = widthToFWHM(2 * sd);\n    if (!height) {\n        height = Math.sqrt(-GAUSSIAN_EXP_FACTOR / Math.PI) / fwhm;\n    }\n    if (!length) {\n        length = Math.min(Math.ceil(fwhm * factor), Math.pow(2, 25) - 1);\n        if (length % 2 === 0)\n            length++;\n    }\n    const center = (length - 1) / 2;\n    const data = new Float64Array(length);\n    for (let i = 0; i <= center; i++) {\n        data[i] = fct(i - center, fwhm) * height;\n        data[length - 1 - i] = data[i];\n    }\n    return data;\n}\n//# sourceMappingURL=Gaussian.js.map","import { ROOT_THREE } from '../../../util/constants';\nimport { Shape1D } from '../Shape1D';\nexport class Lorentzian extends Shape1D {\n    constructor(options = {}) {\n        super();\n        const { fwhm = 500, height } = options;\n        this.fwhm = fwhm;\n        this.height = height === undefined ? 2 / Math.PI / fwhm : height;\n    }\n    fwhmToWidth(fwhm = this.fwhm) {\n        return fwhmToWidth(fwhm);\n    }\n    widthToFWHM(width) {\n        return widthToFWHM(width);\n    }\n    fct(x) {\n        return fct(x, this.fwhm);\n    }\n    getArea() {\n        return getArea({ fwhm: this.fwhm, height: this.height });\n    }\n    getFactor(area) {\n        return getFactor(area);\n    }\n    getData(options = {}) {\n        const { length, factor } = options;\n        return getData({ fwhm: this.fwhm, height: this.height, factor, length });\n    }\n}\n/**\n * Return a parameterized function of a lorentzian shape (see README for equation).\n * @param x - x value to calculate.\n * @param fwhm - full width half maximum\n * @returns - the y value of lorentzian with the current parameters.\n */\nexport function fct(x, fwhm) {\n    return Math.pow(fwhm, 2) / (4 * Math.pow(x, 2) + Math.pow(fwhm, 2));\n}\n/**\n * Compute the value of Full Width at Half Maximum (FWHM) from the width between the inflection points.\n * for more information check the [mathworld page](https://mathworld.wolfram.com/LorentzianFunction.html)\n * @param width - Width between the inflection points\n * @returns fwhm\n */\nexport function widthToFWHM(width) {\n    return width * ROOT_THREE;\n}\n/**\n * Compute the value of width between the inflection points from Full Width at Half Maximum (FWHM).\n * for more information check the [mathworld page](https://mathworld.wolfram.com/LorentzianFunction.html)\n * @param fwhm - Full Width at Half Maximum.\n * @returns width\n */\nexport function fwhmToWidth(fwhm) {\n    return fwhm / ROOT_THREE;\n}\n/**\n * Calculate the area of a specific shape.\n * @returns returns the area of the specific shape and parameters.\n */\nexport function getArea(options) {\n    const { fwhm, height = 1 } = options;\n    if (fwhm === undefined) {\n        throw new Error('should pass fwhm or sd parameters');\n    }\n    return (height * Math.PI * fwhm) / 2;\n}\n/**\n * Calculate the number of times FWHM allows to reach a specific area coverage.\n * @param [area=0.9999] Expected area to be covered.\n * @returns\n */\nexport function getFactor(area = 0.9999) {\n    return 2 * Math.tan(Math.PI * (area - 0.5));\n}\n/**\n * Calculate intensity array of a lorentzian shape.\n * @returns {Float64Array} y values\n */\nexport function getData(options = {}) {\n    let { length, factor = getFactor(), fwhm = 500, height } = options;\n    if (!height) {\n        height = 2 / Math.PI / fwhm;\n    }\n    if (!length) {\n        length = Math.min(Math.ceil(fwhm * factor), Math.pow(2, 25) - 1);\n        if (length % 2 === 0)\n            length++;\n    }\n    const center = (length - 1) / 2;\n    const data = new Float64Array(length);\n    for (let i = 0; i <= center; i++) {\n        data[i] = fct(i - center, fwhm) * height;\n        data[length - 1 - i] = data[i];\n    }\n    return data;\n}\n//# sourceMappingURL=Lorentzian.js.map","import { GAUSSIAN_EXP_FACTOR, ROOT_2LN2_MINUS_ONE, ROOT_PI_OVER_LN2, } from '../../../util/constants';\nimport { Shape1D } from '../Shape1D';\nimport { fct as gaussian, getFactor as getFactorGaussian, } from '../gaussian/Gaussian';\nimport { fct as lorentzian, getFactor as getFactorLorentzian, } from '../lorentzian/Lorentzian';\nexport class PseudoVoigt extends Shape1D {\n    constructor(options = {}) {\n        super();\n        const { fwhm = 500, height, mu = 0.5 } = options;\n        this.mu = mu;\n        this.fwhm = fwhm;\n        this.height =\n            height === undefined\n                ? 1 /\n                    ((mu / Math.sqrt(-GAUSSIAN_EXP_FACTOR / Math.PI)) * fwhm +\n                        ((1 - mu) * fwhm * Math.PI) / 2)\n                : height;\n    }\n    fwhmToWidth(fwhm = this.fwhm, mu = this.mu) {\n        return fwhmToWidth(fwhm, mu);\n    }\n    widthToFWHM(width, mu = this.mu) {\n        return widthToFWHM(width, mu);\n    }\n    fct(x) {\n        return fct(x, this.fwhm, this.mu);\n    }\n    getArea() {\n        return getArea({ fwhm: this.fwhm, height: this.height, mu: this.mu });\n    }\n    getFactor(area) {\n        return getFactor(area);\n    }\n    getData(options = {}) {\n        const { length, factor } = options;\n        return getData({\n            fwhm: this.fwhm,\n            height: this.height,\n            mu: this.mu,\n            factor,\n            length,\n        });\n    }\n}\n/**\n * Return a parameterized function of a pseudo voigt shape (see README for equation).\n * @param x - x value to calculate.\n * @param fwhm - full width half maximum\n * @returns - the y value of pseudo voigt with the current parameters.\n */\nexport function fct(x, fwhm, mu) {\n    return (1 - mu) * lorentzian(x, fwhm) + mu * gaussian(x, fwhm);\n}\n/**\n * Compute the value of Full Width at Half Maximum (FWHM) from the width between the inflection points.\n * @param width - Width between the inflection points\n * @param [mu=0.5] Ratio of gaussian contribution in the shape\n * @returns fwhm\n */\nexport function widthToFWHM(width, mu = 0.5) {\n    return width * (mu * ROOT_2LN2_MINUS_ONE + 1);\n}\n/**\n * Compute the value of width between the inflection points from Full Width at Half Maximum (FWHM).\n * @param fwhm - Full Width at Half Maximum.\n * @param [mu=0.5] Ratio of gaussian contribution in the shape\n * @returns width\n */\nexport function fwhmToWidth(fwhm, mu = 0.5) {\n    return fwhm / (mu * ROOT_2LN2_MINUS_ONE + 1);\n}\n/**\n * Calculate the area of a specific shape.\n * @returns returns the area of the specific shape and parameters.\n */\nexport function getArea(options) {\n    const { fwhm, height = 1, mu = 0.5 } = options;\n    if (fwhm === undefined) {\n        throw new Error('should pass fwhm or sd parameters');\n    }\n    return (fwhm * height * (mu * ROOT_PI_OVER_LN2 + (1 - mu) * Math.PI)) / 2;\n}\n/**\n * Calculate the number of times FWHM allows to reach a specific area coverage.\n * @param [area=0.9999] Expected area to be covered.\n * @returns\n */\nexport function getFactor(area = 0.9999, mu = 0.5) {\n    return mu < 1 ? getFactorLorentzian(area) : getFactorGaussian(area);\n}\n/**\n * Calculate intensity array of a pseudo voigt shape.\n * @returns {Float64Array} y values\n */\nexport function getData(options = {}) {\n    let { length, factor = getFactor(), fwhm = 500, height, mu = 0.5 } = options;\n    if (!height) {\n        height =\n            1 /\n                ((mu / Math.sqrt(-GAUSSIAN_EXP_FACTOR / Math.PI)) * fwhm +\n                    ((1 - mu) * fwhm * Math.PI) / 2);\n    }\n    if (!length) {\n        length = Math.min(Math.ceil(fwhm * factor), Math.pow(2, 25) - 1);\n        if (length % 2 === 0)\n            length++;\n    }\n    const center = (length - 1) / 2;\n    const data = new Float64Array(length);\n    for (let i = 0; i <= center; i++) {\n        data[i] = fct(i - center, fwhm, mu) * height;\n        data[length - 1 - i] = data[i];\n    }\n    return data;\n}\n//# sourceMappingURL=PseudoVoigt.js.map","import { Gaussian } from '../shapes/1d/gaussian/Gaussian';\nimport { Lorentzian } from '../shapes/1d/lorentzian/Lorentzian';\nimport { PseudoVoigt } from '../shapes/1d/pseudoVoigt/PseudoVoigt';\n/**\n * Generate a instance of a specific kind of shape.\n */\nexport function getShape1D(kind, shapeOptions = {}) {\n    switch (kind) {\n        case 'gaussian':\n            return new Gaussian(shapeOptions);\n        case 'lorentzian':\n            return new Lorentzian(shapeOptions);\n        case 'pseudoVoigt':\n            return new PseudoVoigt(shapeOptions);\n        default: {\n            const unHandled = kind;\n            // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n            throw Error(`Unknown distribution ${unHandled}`);\n        }\n    }\n}\n//# sourceMappingURL=getShape1D.js.map","/**\n * Apply Savitzky Golay algorithm\n * @param {array} [ys] Array of y values\n * @param {array|number} [xs] Array of X or deltaX\n * @param {object} [options={}]\n * @param {number} [options.windowSize=9]\n * @param {number} [options.derivative=0]\n * @param {number} [options.polynomial=3]\n * @return {array} Array containing the new ys (same length)\n */\n\nexport default function SavitzkyGolay(ys, xs, options = {}) {\n  let { windowSize = 9, derivative = 0, polynomial = 3 } = options;\n\n  if (windowSize % 2 === 0 || windowSize < 5 || !Number.isInteger(windowSize)) {\n    throw new RangeError(\n      'Invalid window size (should be odd and at least 5 integer number)',\n    );\n  }\n  if (windowSize > ys.length) {\n    throw new RangeError(\n      `Window size is higher than the data length ${windowSize}>${ys.length}`,\n    );\n  }\n  if (derivative < 0 || !Number.isInteger(derivative)) {\n    throw new RangeError('Derivative should be a positive integer');\n  }\n  if (polynomial < 1 || !Number.isInteger(polynomial)) {\n    throw new RangeError('Polynomial should be a positive integer');\n  }\n  if (polynomial >= 6) {\n    // eslint-disable-next-line no-console\n    console.warn(\n      'You should not use polynomial grade higher than 5 if you are' +\n        ' not sure that your data arises from such a model. Possible polynomial oscillation problems',\n    );\n  }\n\n  let half = Math.floor(windowSize / 2);\n  let np = ys.length;\n  let ans = new Array(np);\n  let weights = fullWeights(windowSize, polynomial, derivative);\n  let hs = 0;\n  let constantH = true;\n  if (Array.isArray(xs)) {\n    constantH = false;\n  } else {\n    hs = Math.pow(xs, derivative);\n  }\n\n  //For the borders\n  for (let i = 0; i < half; i++) {\n    let wg1 = weights[half - i - 1];\n    let wg2 = weights[half + i + 1];\n    let d1 = 0;\n    let d2 = 0;\n    for (let l = 0; l < windowSize; l++) {\n      d1 += wg1[l] * ys[l];\n      d2 += wg2[l] * ys[np - windowSize + l];\n    }\n    if (constantH) {\n      ans[half - i - 1] = d1 / hs;\n      ans[np - half + i] = d2 / hs;\n    } else {\n      hs = getHs(xs, half - i - 1, half, derivative);\n      ans[half - i - 1] = d1 / hs;\n      hs = getHs(xs, np - half + i, half, derivative);\n      ans[np - half + i] = d2 / hs;\n    }\n  }\n\n  //For the internal points\n  let wg = weights[half];\n  for (let i = windowSize; i <= np; i++) {\n    let d = 0;\n    for (let l = 0; l < windowSize; l++) d += wg[l] * ys[l + i - windowSize];\n    if (!constantH) hs = getHs(xs, i - half - 1, half, derivative);\n    ans[i - half - 1] = d / hs;\n  }\n  return ans;\n}\n\nfunction getHs(h, center, half, derivative) {\n  let hs = 0;\n  let count = 0;\n  for (let i = center - half; i < center + half; i++) {\n    if (i >= 0 && i < h.length - 1) {\n      hs += h[i + 1] - h[i];\n      count++;\n    }\n  }\n  return Math.pow(hs / count, derivative);\n}\n\nfunction GramPoly(i, m, k, s) {\n  let Grampoly = 0;\n  if (k > 0) {\n    Grampoly =\n      ((4 * k - 2) / (k * (2 * m - k + 1))) *\n        (i * GramPoly(i, m, k - 1, s) + s * GramPoly(i, m, k - 1, s - 1)) -\n      (((k - 1) * (2 * m + k)) / (k * (2 * m - k + 1))) *\n        GramPoly(i, m, k - 2, s);\n  } else {\n    if (k === 0 && s === 0) {\n      Grampoly = 1;\n    } else {\n      Grampoly = 0;\n    }\n  }\n  return Grampoly;\n}\n\nfunction GenFact(a, b) {\n  let gf = 1;\n  if (a >= b) {\n    for (let j = a - b + 1; j <= a; j++) {\n      gf *= j;\n    }\n  }\n  return gf;\n}\n\nfunction Weight(i, t, m, n, s) {\n  let sum = 0;\n  for (let k = 0; k <= n; k++) {\n    //console.log(k);\n    sum +=\n      (2 * k + 1) *\n      (GenFact(2 * m, k) / GenFact(2 * m + k + 1, k + 1)) *\n      GramPoly(i, m, k, 0) *\n      GramPoly(t, m, k, s);\n  }\n  return sum;\n}\n\n/**\n *\n * @param m  Number of points\n * @param n  Polynomial grade\n * @param s  Derivative\n */\nfunction fullWeights(m, n, s) {\n  let weights = new Array(m);\n  let np = Math.floor(m / 2);\n  for (let t = -np; t <= np; t++) {\n    weights[t + np] = new Array(m);\n    for (let j = -np; j <= np; j++) {\n      weights[t + np][j + np] = Weight(j, t, np, n, s);\n    }\n  }\n  return weights;\n}\n\n/*function entropy(data,h,options){\n    var trend = SavitzkyGolay(data,h,trendOptions);\n    var copy = new Array(data.length);\n    var sum = 0;\n    var max = 0;\n    for(var i=0;i<data.length;i++){\n        copy[i] = data[i]-trend[i];\n    }\n\n    sum/=data.length;\n    console.log(sum+\" \"+max);\n    console.log(stat.array.standardDeviation(copy));\n    console.log(Math.abs(stat.array.mean(copy))/stat.array.standardDeviation(copy));\n    return sum;\n\n}\n\n\n\nfunction guessWindowSize(data, h){\n    console.log(\"entropy \"+entropy(data,h,trendOptions));\n    return 5;\n}\n*/\n","import { getShape1D } from 'ml-peak-shape-generator';\nimport SG from 'ml-savitzky-golay-generalized';\n\n/**\n * Global spectra deconvolution\n * @param {object} data - Object data with x and y arrays\n * @param {Array<number>} [data.x] - Independent variable\n * @param {Array<number>} [data.y] - Dependent variable\n * @param {object} [options={}] - Options object\n * @param {object} [options.shape={}] - Object that specified the kind of shape to calculate the FWHM instead of width between inflection points. see https://mljs.github.io/peak-shape-generator/#inflectionpointswidthtofwhm\n * @param {object} [options.shape.kind='gaussian']\n * @param {object} [options.shape.options={}]\n * @param {object} [options.sgOptions] - Options object for Savitzky-Golay filter. See https://github.com/mljs/savitzky-golay-generalized#options\n * @param {number} [options.sgOptions.windowSize = 9] - points to use in the approximations\n * @param {number} [options.sgOptions.polynomial = 3] - degree of the polynomial to use in the approximations\n * @param {number} [options.minMaxRatio = 0.00025] - Threshold to determine if a given peak should be considered as a noise\n * @param {number} [options.broadRatio = 0.00] - If `broadRatio` is higher than 0, then all the peaks which second derivative\n * smaller than `broadRatio * maxAbsSecondDerivative` will be marked with the soft mask equal to true.\n * @param {number} [options.noiseLevel = 0] - Noise threshold in spectrum units\n * @param {boolean} [options.maxCriteria = true] - Peaks are local maximum(true) or minimum(false)\n * @param {boolean} [options.smoothY = true] - Select the peak intensities from a smoothed version of the independent variables\n * @param {boolean} [options.realTopDetection = false] - Use a quadratic optimizations with the peak and its 3 closest neighbors\n * to determine the true x,y values of the peak?\n * @param {number} [options.heightFactor = 0] - Factor to multiply the calculated height (usually 2)\n * @param {number} [options.derivativeThreshold = -1] - Filters based on the amplitude of the first derivative\n * @return {Array<object>}\n */\nexport function gsd(data, options = {}) {\n  let {\n    noiseLevel,\n    sgOptions = {\n      windowSize: 9,\n      polynomial: 3,\n    },\n    shape = {},\n    smoothY = true,\n    heightFactor = 0,\n    broadRatio = 0.0,\n    maxCriteria = true,\n    minMaxRatio = 0.00025,\n    derivativeThreshold = -1,\n    realTopDetection = false,\n  } = options;\n\n  let { y: yIn, x } = data;\n\n  const y = yIn.slice();\n  let equalSpaced = isEqualSpaced(x);\n\n  if (maxCriteria === false) {\n    for (let i = 0; i < y.length; i++) {\n      y[i] *= -1;\n    }\n  }\n\n  if (noiseLevel === undefined) {\n    noiseLevel = equalSpaced ? getNoiseLevel(y) : 0;\n  }\n  for (let i = 0; i < y.length; i++) {\n    y[i] -= noiseLevel;\n  }\n  for (let i = 0; i < y.length; i++) {\n    if (y[i] < 0) {\n      y[i] = 0;\n    }\n  }\n  // If the max difference between delta x is less than 5%, then,\n  // we can assume it to be equally spaced variable\n  let yData = y;\n  let dY, ddY;\n  const { windowSize, polynomial } = sgOptions;\n\n  if (equalSpaced) {\n    if (smoothY) {\n      yData = SG(y, x[1] - x[0], {\n        windowSize,\n        polynomial,\n        derivative: 0,\n      });\n    }\n    dY = SG(y, x[1] - x[0], {\n      windowSize,\n      polynomial,\n      derivative: 1,\n    });\n    ddY = SG(y, x[1] - x[0], {\n      windowSize,\n      polynomial,\n      derivative: 2,\n    });\n  } else {\n    if (smoothY) {\n      yData = SG(y, x, {\n        windowSize,\n        polynomial,\n        derivative: 0,\n      });\n    }\n    dY = SG(y, x, {\n      windowSize,\n      polynomial,\n      derivative: 1,\n    });\n    ddY = SG(y, x, {\n      windowSize,\n      polynomial,\n      derivative: 2,\n    });\n  }\n\n  const xData = x;\n  const dX = x[1] - x[0];\n  let maxDdy = 0;\n  let maxY = 0;\n  for (let i = 0; i < yData.length; i++) {\n    if (Math.abs(ddY[i]) > maxDdy) {\n      maxDdy = Math.abs(ddY[i]);\n    }\n    if (Math.abs(yData[i]) > maxY) {\n      maxY = Math.abs(yData[i]);\n    }\n  }\n\n  let lastMax = null;\n  let lastMin = null;\n  let minddY = [];\n  let intervalL = [];\n  let intervalR = [];\n  let broadMask = [];\n\n  // By the intermediate value theorem We cannot find 2 consecutive maximum or minimum\n  for (let i = 1; i < yData.length - 1; ++i) {\n    // filter based on derivativeThreshold\n    if (Math.abs(dY[i]) > derivativeThreshold) {\n      // Minimum in first derivative\n      if (\n        (dY[i] < dY[i - 1] && dY[i] <= dY[i + 1]) ||\n        (dY[i] <= dY[i - 1] && dY[i] < dY[i + 1])\n      ) {\n        lastMin = {\n          x: xData[i],\n          index: i,\n        };\n        if (dX > 0 && lastMax !== null) {\n          intervalL.push(lastMax);\n          intervalR.push(lastMin);\n        }\n      }\n\n      // Maximum in first derivative\n      if (\n        (dY[i] >= dY[i - 1] && dY[i] > dY[i + 1]) ||\n        (dY[i] > dY[i - 1] && dY[i] >= dY[i + 1])\n      ) {\n        lastMax = {\n          x: xData[i],\n          index: i,\n        };\n        if (dX < 0 && lastMin !== null) {\n          intervalL.push(lastMax);\n          intervalR.push(lastMin);\n        }\n      }\n    }\n\n    // Minimum in second derivative\n    if (ddY[i] < ddY[i - 1] && ddY[i] < ddY[i + 1]) {\n      minddY.push(i);\n      broadMask.push(Math.abs(ddY[i]) <= broadRatio * maxDdy);\n    }\n  }\n\n  let widthProcessor = shape.kind\n    ? getShape1D(shape.kind, shape.options).widthToFWHM\n    : (x) => x;\n\n  let signals = [];\n  let lastK = -1;\n  let possible, frequency, distanceJ, minDistance, gettingCloser;\n  for (let j = 0; j < minddY.length; ++j) {\n    frequency = xData[minddY[j]];\n    possible = -1;\n    let k = lastK + 1;\n    minDistance = Number.MAX_VALUE;\n    distanceJ = 0;\n    gettingCloser = true;\n    while (possible === -1 && k < intervalL.length && gettingCloser) {\n      distanceJ = Math.abs(frequency - (intervalL[k].x + intervalR[k].x) / 2);\n\n      // Still getting closer?\n      if (distanceJ < minDistance) {\n        minDistance = distanceJ;\n      } else {\n        gettingCloser = false;\n      }\n      if (distanceJ < Math.abs(intervalL[k].x - intervalR[k].x) / 2) {\n        possible = k;\n        lastK = k;\n      }\n      ++k;\n    }\n\n    if (possible !== -1) {\n      if (Math.abs(yData[minddY[j]]) > minMaxRatio * maxY) {\n        let width = Math.abs(intervalR[possible].x - intervalL[possible].x);\n        signals.push({\n          index: minddY[j],\n          x: frequency,\n          y: maxCriteria\n            ? yData[minddY[j]] + noiseLevel\n            : -yData[minddY[j]] - noiseLevel,\n          width: widthProcessor(width),\n          soft: broadMask[j],\n        });\n\n        signals[signals.length - 1].left = intervalL[possible];\n        signals[signals.length - 1].right = intervalR[possible];\n\n        if (heightFactor) {\n          let yLeft = yData[intervalL[possible].index];\n          let yRight = yData[intervalR[possible].index];\n          signals[signals.length - 1].height =\n            heightFactor *\n            (signals[signals.length - 1].y - (yLeft + yRight) / 2);\n        }\n      }\n    }\n  }\n\n  if (realTopDetection) {\n    determineRealTop(signals, xData, yData);\n  }\n\n  // Correct the values to fit the original spectra data\n  for (let j = 0; j < signals.length; j++) {\n    signals[j].base = noiseLevel;\n  }\n\n  signals.sort((a, b) => {\n    return a.x - b.x;\n  });\n\n  return signals;\n}\n\nconst isEqualSpaced = (x) => {\n  let tmp;\n  let maxDx = 0;\n  let minDx = Number.MAX_SAFE_INTEGER;\n  for (let i = 0; i < x.length - 1; ++i) {\n    tmp = Math.abs(x[i + 1] - x[i]);\n    if (tmp < minDx) {\n      minDx = tmp;\n    }\n    if (tmp > maxDx) {\n      maxDx = tmp;\n    }\n  }\n  return (maxDx - minDx) / maxDx < 0.05;\n};\n\nconst getNoiseLevel = (y) => {\n  let mean = 0;\n\n  let stddev = 0;\n  let length = y.length;\n  for (let i = 0; i < length; ++i) {\n    mean += y[i];\n  }\n  mean /= length;\n  let averageDeviations = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    averageDeviations[i] = Math.abs(y[i] - mean);\n  }\n  averageDeviations.sort((a, b) => a - b);\n  if (length % 2 === 1) {\n    stddev = averageDeviations[(length - 1) / 2] / 0.6745;\n  } else {\n    stddev =\n      (0.5 *\n        (averageDeviations[length / 2] + averageDeviations[length / 2 - 1])) /\n      0.6745;\n  }\n\n  return stddev;\n};\n\nconst determineRealTop = (peakList, x, y) => {\n  let alpha, beta, gamma, p, currentPoint;\n  for (let j = 0; j < peakList.length; j++) {\n    currentPoint = peakList[j].index; // peakList[j][2];\n    // The detected peak could be moved 1 or 2 units to left or right.\n    if (\n      y[currentPoint - 1] >= y[currentPoint - 2] &&\n      y[currentPoint - 1] >= y[currentPoint]\n    ) {\n      currentPoint--;\n    } else {\n      if (\n        y[currentPoint + 1] >= y[currentPoint] &&\n        y[currentPoint + 1] >= y[currentPoint + 2]\n      ) {\n        currentPoint++;\n      } else {\n        if (\n          y[currentPoint - 2] >= y[currentPoint - 3] &&\n          y[currentPoint - 2] >= y[currentPoint - 1]\n        ) {\n          currentPoint -= 2;\n        } else {\n          if (\n            y[currentPoint + 2] >= y[currentPoint + 1] &&\n            y[currentPoint + 2] >= y[currentPoint + 3]\n          ) {\n            currentPoint += 2;\n          }\n        }\n      }\n    }\n    // interpolation to a sin() function\n    if (\n      y[currentPoint - 1] > 0 &&\n      y[currentPoint + 1] > 0 &&\n      y[currentPoint] >= y[currentPoint - 1] &&\n      y[currentPoint] >= y[currentPoint + 1] &&\n      (y[currentPoint] !== y[currentPoint - 1] ||\n        y[currentPoint] !== y[currentPoint + 1])\n    ) {\n      alpha = 20 * Math.log10(y[currentPoint - 1]);\n      beta = 20 * Math.log10(y[currentPoint]);\n      gamma = 20 * Math.log10(y[currentPoint + 1]);\n      p = (0.5 * (alpha - gamma)) / (alpha - 2 * beta + gamma);\n      // console.log(alpha, beta, gamma, `p: ${p}`);\n      // console.log(x[currentPoint]+\" \"+tmp+\" \"+currentPoint);\n      peakList[j].x =\n        x[currentPoint] + (x[currentPoint] - x[currentPoint - 1]) * p;\n      peakList[j].y =\n        y[currentPoint] -\n        0.25 * (y[currentPoint - 1] - y[currentPoint + 1]) * p;\n    }\n  }\n};\n","/*!\n * assign-symbols <https://github.com/jonschlinkert/assign-symbols>\n *\n * Copyright (c) 2015-present, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\nconst toString = Object.prototype.toString;\nconst isEnumerable = Object.prototype.propertyIsEnumerable;\nconst getSymbols = Object.getOwnPropertySymbols;\n\nmodule.exports = (target, ...args) => {\n  if (!isObject(target)) {\n    throw new TypeError('expected the first argument to be an object');\n  }\n\n  if (args.length === 0 || typeof Symbol !== 'function' || typeof getSymbols !== 'function') {\n    return target;\n  }\n\n  for (let arg of args) {\n    let names = getSymbols(arg);\n\n    for (let key of names) {\n      if (isEnumerable.call(arg, key)) {\n        target[key] = arg[key];\n      }\n    }\n  }\n  return target;\n};\n\nfunction isObject(val) {\n  return typeof val === 'function' || toString.call(val) === '[object Object]' || Array.isArray(val);\n}\n","/*!\n * assign-deep <https://github.com/jonschlinkert/assign-deep>\n *\n * Copyright (c) 2017-present, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nconst toString = Object.prototype.toString;\nconst assignSymbols = require('assign-symbols');\n\nconst isValidKey = key => {\n  return key !== '__proto__' && key !== 'constructor' && key !== 'prototype';\n};\n\nconst assign = module.exports = (target, ...args) => {\n  let i = 0;\n  if (isPrimitive(target)) target = args[i++];\n  if (!target) target = {};\n  for (; i < args.length; i++) {\n    if (isObject(args[i])) {\n      for (const key of Object.keys(args[i])) {\n        if (isValidKey(key)) {\n          if (isObject(target[key]) && isObject(args[i][key])) {\n            assign(target[key], args[i][key]);\n          } else {\n            target[key] = args[i][key];\n          }\n        }\n      }\n      assignSymbols(target, args[i]);\n    }\n  }\n  return target;\n};\n\nfunction isObject(val) {\n  return typeof val === 'function' || toString.call(val) === '[object Object]';\n}\n\nfunction isPrimitive(val) {\n  return typeof val === 'object' ? val === null : typeof val !== 'function';\n}\n","export const GAUSSIAN_EXP_FACTOR = -4 * Math.LN2;\nexport const ROOT_PI_OVER_LN2 = Math.sqrt(Math.PI / Math.LN2);\nexport const ROOT_THREE = Math.sqrt(3);\nexport const ROOT_2LN2 = Math.sqrt(2 * Math.LN2);\nexport const ROOT_2LN2_MINUS_ONE = Math.sqrt(2 * Math.LN2) - 1;\n","// https://en.wikipedia.org/wiki/Error_function#Inverse_functions\n// This code yields to a good approximation\n\n// If needed a better implementation using polynomial can be found on https://en.wikipedia.org/wiki/Error_function#Inverse_functions\n\nexport default function erfinv(x) {\n  let a = 0.147;\n  if (x === 0) return 0;\n  let ln1MinusXSqrd = Math.log(1 - x * x);\n  let lnEtcBy2Plus2 = ln1MinusXSqrd / 2 + 2 / (Math.PI * a);\n  let firstSqrt = Math.sqrt(lnEtcBy2Plus2 ** 2 - ln1MinusXSqrd / a);\n  let secondSqrt = Math.sqrt(firstSqrt - lnEtcBy2Plus2);\n  return secondSqrt * (x > 0 ? 1 : -1);\n}\n","import {\n  ROOT_2LN2,\n  GAUSSIAN_EXP_FACTOR,\n  ROOT_PI_OVER_LN2,\n} from '../util/constants';\nimport erfinv from '../util/erfinv';\n\nexport class Gaussian {\n  /**\n   * @param {object} [options = {}]\n   * @param {number} [options.height=4*LN2/(PI*FWHM)] Define the height of the peak, by default area=1 (normalized)\n   * @param {number} [options.fwhm = 500] - Full Width at Half Maximum in the number of points in FWHM.\n   * @param {number} [options.sd] - Standard deviation, if it's defined options.fwhm will be ignored and the value will be computed sd * Math.sqrt(8 * Math.LN2);\n   */\n  constructor(options = {}) {\n    this.fwhm = options.sd\n      ? Gaussian.widthToFWHM(2 * options.sd)\n      : options.fwhm\n      ? options.fwhm\n      : 500;\n    this.height =\n      options.height === undefined\n        ? Math.sqrt(-GAUSSIAN_EXP_FACTOR / Math.PI) / this.fwhm\n        : options.height;\n  }\n  /**\n   * Calculate a gaussian shape\n   * @param {object} [options = {}]\n   * @param {number} [options.factor = 6] - Number of time to take fwhm to calculate length. Default covers 99.99 % of area.\n   * @param {number} [options.length = fwhm * factor + 1] - total number of points to calculate\n   * @return {Float64Array} y values\n   */\n\n  getData(options = {}) {\n    let { length, factor = this.getFactor() } = options;\n\n    if (!length) {\n      length = Math.min(Math.ceil(this.fwhm * factor), Math.pow(2, 25) - 1);\n      if (length % 2 === 0) length++;\n    }\n\n    const center = (length - 1) / 2;\n    const data = new Float64Array(length);\n    for (let i = 0; i <= center; i++) {\n      data[i] = this.fct(i - center) * this.height;\n      data[length - 1 - i] = data[i];\n    }\n\n    return data;\n  }\n\n  /**\n   * Return a parameterized function of a gaussian shape (see README for equation).\n   * @param {number} x - x value to calculate.\n   * @returns {number} - the y value of gaussian with the current parameters.\n   */\n  fct(x) {\n    return Gaussian.fct(x, this.fwhm);\n  }\n\n  /**\n   * Calculate the number of times FWHM allows to reach a specific area coverage\n   * @param {number} [area=0.9999]\n   * @returns {number}\n   */\n  getFactor(area = 0.9999) {\n    return Gaussian.getFactor(area);\n  }\n\n  /**\n   * Calculate the area of the shape.\n   * @returns {number} - returns the area.\n   */\n\n  getArea() {\n    return Gaussian.getArea(this.fwhm, { height: this.height });\n  }\n\n  /**\n   * Compute the value of Full Width at Half Maximum (FWHM) from the width between the inflection points.\n   * //https://mathworld.wolfram.com/GaussianFunction.html\n   * @param {number} width - Width between the inflection points\n   * @returns {number} fwhm\n   */\n  widthToFWHM(width) {\n    //https://mathworld.wolfram.com/GaussianFunction.html\n    return Gaussian.widthToFWHM(width);\n  }\n\n  /**\n   * Compute the value of width between the inflection points from Full Width at Half Maximum (FWHM).\n   * //https://mathworld.wolfram.com/GaussianFunction.html\n   * @param {number} fwhm - Full Width at Half Maximum.\n   * @returns {number} width\n   */\n  fwhmToWidth(fwhm = this.fwhm) {\n    return Gaussian.fwhmToWidth(fwhm);\n  }\n\n  /**\n   * set a new full width at half maximum\n   * @param {number} fwhm - full width at half maximum\n   */\n  setFWHM(fwhm) {\n    this.fwhm = fwhm;\n  }\n\n  /**\n   * set a new height\n   * @param {number} height - The maximal intensity of the shape.\n   */\n  setHeight(height) {\n    this.height = height;\n  }\n}\n\n/**\n * Return a parameterized function of a gaussian shape (see README for equation).\n * @param {number} x - x value to calculate.\n * @param {number} fwhm - full width half maximum\n * @returns {number} - the y value of gaussian with the current parameters.\n */\nGaussian.fct = function fct(x, fwhm = 500) {\n  return Math.exp(GAUSSIAN_EXP_FACTOR * Math.pow(x / fwhm, 2));\n};\n\n/**\n * Compute the value of Full Width at Half Maximum (FWHM) from the width between the inflection points.\n * //https://mathworld.wolfram.com/GaussianFunction.html\n * @param {number} width - Width between the inflection points\n * @returns {number} fwhm\n */\nGaussian.widthToFWHM = function widthToFWHM(width) {\n  return width * ROOT_2LN2;\n};\n\n/**\n * Compute the value of width between the inflection points from Full Width at Half Maximum (FWHM).\n * //https://mathworld.wolfram.com/GaussianFunction.html\n * @param {number} fwhm - Full Width at Half Maximum.\n * @returns {number} width\n */\nGaussian.fwhmToWidth = function fwhmToWidth(fwhm) {\n  return fwhm / ROOT_2LN2;\n};\n\n/**\n * Calculate the area of a specific shape.\n * @param {number} fwhm - Full width at half maximum.\n * @param {object} [options = {}] - options.\n * @param {number} [options.height = 1] - Maximum y value of the shape.\n * @returns {number} - returns the area of the specific shape and parameters.\n */\n\nGaussian.getArea = function getArea(fwhm, options = {}) {\n  let { height = 1 } = options;\n  return (height * ROOT_PI_OVER_LN2 * fwhm) / 2;\n};\n\n/**\n * Calculate the number of times FWHM allows to reach a specific area coverage.\n * @param {number} [area=0.9999]\n * @returns {number}\n */\nGaussian.getFactor = function getFactor(area = 0.9999) {\n  return Math.sqrt(2) * erfinv(area);\n};\n","import { ROOT_THREE } from '../util/constants';\n\nexport class Lorentzian {\n  /**\n   * @param {object} [options = {}]\n   * @param {number} [options.height=2/(PI*FWHM)] Define the height of the peak, by default area=1 (normalized)\n   * @param {number} [options.fwhm = 500] - Full Width at Half Maximum in the number of points in FWHM.\n   * @param {number} [options.sd] - Standard deviation, if it's defined options.fwhm will be ignored and the value will be computed sd * Math.sqrt(8 * Math.LN2);\n   */\n  constructor(options = {}) {\n    this.fwhm = options.fwhm === undefined ? 500 : options.fwhm;\n    this.height =\n      options.height === undefined ? 2 / Math.PI / this.fwhm : options.height;\n  }\n  /**\n   * Calculate a lorentzian shape\n   * @param {object} [options = {}]\n   * @param {number} [options.factor = Math.tan(Math.PI * (0.9999 - 0.5))] - Number of time to take fwhm to calculate length. Default covers 99.99 % of area.\n   * @param {number} [options.length = fwhm * factor + 1] - total number of points to calculate\n   * @return {Float64Array} y values\n   */\n  getData(options = {}) {\n    let { length, factor = this.getFactor() } = options;\n\n    if (!length) {\n      length = Math.min(Math.ceil(this.fwhm * factor), Math.pow(2, 25) - 1);\n      if (length % 2 === 0) length++;\n    }\n\n    const center = (length - 1) / 2;\n    const data = new Float64Array(length);\n    for (let i = 0; i <= center; i++) {\n      data[i] = this.fct(i - center) * this.height;\n      data[length - 1 - i] = data[i];\n    }\n    return data;\n  }\n\n  /**\n   * Return a parameterized function of a lorentzian shape (see README for equation).\n   * @param {number} x - x value to calculate.\n   * @returns {number} - the y value of lorentzian with the current parameters.\n   */\n  fct(x) {\n    return Lorentzian.fct(x, this.fwhm);\n  }\n\n  /**\n   * Calculate the number of times FWHM allows to reach a specific area coverage\n   * @param {number} [area=0.9999]\n   * @returns {number}\n   */\n  getFactor(area = 0.9999) {\n    return Lorentzian.getFactor(area);\n  }\n\n  /**\n   * Calculate the area of the shape.\n   * @returns {number} - returns the area.\n   */\n\n  getArea() {\n    return Lorentzian.getArea(this.fwhm, { height: this.height });\n  }\n\n  /**\n   * Compute the value of width between the inflection points of a specific shape from Full Width at Half Maximum (FWHM).\n   * //https://mathworld.wolfram.com/LorentzianFunction.html\n   * @param {number} [fwhm] - Full Width at Half Maximum.\n   * @returns {number} width between the inflection points\n   */\n  fwhmToWidth(fwhm = this.fwhm) {\n    return Lorentzian.fwhmToWidth(fwhm);\n  }\n\n  /**\n   * Compute the value of Full Width at Half Maximum (FWHM) of a specific shape from the width between the inflection points.\n   * //https://mathworld.wolfram.com/LorentzianFunction.html\n   * @param {number} [width] Width between the inflection points\n   * @returns {number} fwhm\n   */\n  widthToFWHM(width) {\n    return Lorentzian.widthToFWHM(width);\n  }\n  /**\n   * set a new full width at half maximum\n   * @param {number} fwhm - full width at half maximum\n   */\n  setFWHM(fwhm) {\n    this.fwhm = fwhm;\n  }\n\n  /**\n   * set a new height\n   * @param {number} height - The maximal intensity of the shape.\n   */\n  setHeight(height) {\n    this.height = height;\n  }\n}\n\n/**\n * Return a parameterized function of a gaussian shape (see README for equation).\n * @param {number} x - x value to calculate.\n * @param {number} fwhm - full width half maximum\n * @returns {number} - the y value of gaussian with the current parameters.\n */\nLorentzian.fct = function fct(x, fwhm) {\n  const squareFWHM = fwhm * fwhm;\n  return squareFWHM / (4 * Math.pow(x, 2) + squareFWHM);\n};\n\n/**\n * Compute the value of width between the inflection points of a specific shape from Full Width at Half Maximum (FWHM).\n * //https://mathworld.wolfram.com/LorentzianFunction.html\n * @param {number} [fwhm] - Full Width at Half Maximum.\n * @returns {number} width between the inflection points\n */\nLorentzian.fwhmToWidth = function fwhmToWidth(fwhm) {\n  return fwhm / ROOT_THREE;\n};\n\n/**\n * Compute the value of Full Width at Half Maximum (FWHM) of a specific shape from the width between the inflection points.\n * //https://mathworld.wolfram.com/LorentzianFunction.html\n * @param {number} [width] Width between the inflection points\n * @returns {number} fwhm\n */\nLorentzian.widthToFWHM = function widthToFWHM(width) {\n  return width * ROOT_THREE;\n};\n\n/**\n * Calculate the area of a specific shape.\n * @param {number} fwhm - Full width at half maximum.\n * @param {*} [options = {}] - options.\n * @param {number} [options.height = 1] - Maximum y value of the shape.\n * @returns {number} - returns the area of the specific shape and parameters.\n */\nLorentzian.getArea = function getArea(fwhm, options = {}) {\n  let { height = 1 } = options;\n\n  return (height * Math.PI * fwhm) / 2;\n};\n\n/**\n * Calculate the number of times FWHM allows to reach a specific area coverage\n * @param {number} [area=0.9999]\n * @returns {number}\n */\nLorentzian.getFactor = function getFactor(area = 0.9999) {\n  return 2 * Math.tan(Math.PI * (area - 0.5));\n};\n","import {\n  GAUSSIAN_EXP_FACTOR,\n  ROOT_2LN2_MINUS_ONE,\n  ROOT_PI_OVER_LN2,\n} from '../util/constants';\n\nimport { Gaussian } from './Gaussian';\nimport { Lorentzian } from './Lorentzian';\n\nexport class PseudoVoigt {\n  /**\n   * @param {object} [options={}]\n   * @param {number} [options.height=1/(mu*FWHM/sqrt(4*LN2/PI)+(1-mu)*fwhm*PI*0.5)] Define the height of the peak, by default area=1 (normalized)\n   * @param {number} [options.fwhm=500] - Full Width at Half Maximum in the number of points in FWHM.\n   * @param {number} [options.mu=0.5] - ratio of gaussian contribution.\n   */\n\n  constructor(options = {}) {\n    this.mu = options.mu === undefined ? 0.5 : options.mu;\n    this.fwhm = options.fwhm === undefined ? 500 : options.fwhm;\n    this.height =\n      options.height === undefined\n        ? 1 /\n          ((this.mu / Math.sqrt(-GAUSSIAN_EXP_FACTOR / Math.PI)) * this.fwhm +\n            ((1 - this.mu) * this.fwhm * Math.PI) / 2)\n        : options.height;\n  }\n\n  /**\n   * Calculate a linear combination of gaussian and lorentzian function width an same full width at half maximum\n   * @param { object } [options = {}]\n   * @param { number } [options.factor = 2 * Math.tan(Math.PI * (0.9999 - 0.5))] - Number of time to take fwhm in the calculation of the length.Default covers 99.99 % of area.\n   * @param { number } [options.length = fwhm * factor + 1] - total number of points to calculate\n   * @return { object } - { fwhm, data<Float64Array>} - An with the number of points at half maximum and the array of y values covering the 99.99 % of the area.\n   */\n\n  getData(options = {}) {\n    let { length, factor = this.getFactor() } = options;\n    if (!length) {\n      length = Math.ceil(this.fwhm * factor);\n      if (length % 2 === 0) length++;\n    }\n\n    const center = (length - 1) / 2;\n\n    let data = new Float64Array(length);\n    for (let i = 0; i <= center; i++) {\n      data[i] = this.fct(i - center) * this.height;\n      data[length - 1 - i] = data[i];\n    }\n\n    return data;\n  }\n\n  /**\n   * Return a parameterized function of a linear combination of Gaussian and Lorentzian shapes where the full width at half maximum are the same for both kind of shapes (see README for equation).\n   * @param {number} [x] x value to calculate.\n   * @returns {number} - the y value of a pseudo voigt with the current parameters.\n   */\n\n  fct(x) {\n    return PseudoVoigt.fct(x, this.fwhm, this.mu);\n  }\n\n  /**\n   * Calculate the number of times FWHM allows to reach a specific area coverage\n   * @param {number} [area=0.9999] - required area to be coverage\n   * @param {number} [mu=this.mu] - ratio of gaussian contribution.\n   * @returns {number}\n   */\n  getFactor(area = 0.9999, mu = this.mu) {\n    return PseudoVoigt.getFactor(area, mu);\n  }\n\n  /**\n   * Calculate the area of the shape.\n   * @returns {number} - returns the area.\n   */\n  getArea() {\n    return PseudoVoigt.getArea(this.fwhm, { height: this.height, mu: this.mu });\n  }\n\n  /**\n   * Compute the value of Full Width at Half Maximum (FMHM) from width between the inflection points.\n   * @param {number} width - width between the inflection points\n   * @param {number} [mu = 0.5] - ratio of gaussian contribution.\n   * @returns {number} Full Width at Half Maximum (FMHM).\n   */\n  widthToFWHM(width, mu) {\n    return PseudoVoigt.widthToFWHM(width, mu);\n  }\n  /**\n   * Compute the value of width between the inflection points from Full Width at Half Maximum (FWHM).\n   * @param {number} fwhm - Full Width at Half Maximum.\n   * @param {number} [mu] - ratio of gaussian contribution.\n   * @returns {number} width between the inflection points.\n   */\n  fwhmToWidth(fwhm = this.fwhm, mu = this.mu) {\n    return PseudoVoigt.fwhmToWidth(fwhm, mu);\n  }\n\n  /**\n   * set a new full width at half maximum\n   * @param {number} fwhm - full width at half maximum\n   */\n  setFWHM(fwhm) {\n    this.fwhm = fwhm;\n  }\n\n  /**\n   * set a new height\n   * @param {number} height - The maximal intensity of the shape.\n   */\n  setHeight(height) {\n    this.height = height;\n  }\n\n  /**\n   * set a new mu\n   * @param {number} mu - ratio of gaussian contribution.\n   */\n  setMu(mu) {\n    this.mu = mu;\n  }\n}\n\n/**\n * Return a parameterized function of a gaussian shape (see README for equation).\n * @param {number} x - x value to calculate.\n * @param {number} fwhm - full width half maximum\n * @param {number} [mu=0.5] - ratio of gaussian contribution.\n * @returns {number} - the y value of gaussian with the current parameters.\n */\nPseudoVoigt.fct = function fct(x, fwhm, mu = 0.5) {\n  return (1 - mu) * Lorentzian.fct(x, fwhm) + mu * Gaussian.fct(x, fwhm);\n};\n\n/**\n * Compute the value of Full Width at Half Maximum (FMHM) from width between the inflection points.\n * @param {number} width - width between the inflection points\n * @param {number} [mu = 0.5] - ratio of gaussian contribution.\n * @returns {number} Full Width at Half Maximum (FMHM).\n */\nPseudoVoigt.widthToFWHM = function widthToFWHM(width, mu = 0.5) {\n  return width * (mu * ROOT_2LN2_MINUS_ONE + 1);\n};\n/**\n * Compute the value of width between the inflection points from Full Width at Half Maximum (FWHM).\n * @param {number} fwhm - Full Width at Half Maximum.\n * @param {number} [mu = 0.5] - ratio of gaussian contribution.\n * @returns {number} width between the inflection points.\n */\nPseudoVoigt.fwhmToWidth = function fwhmToWidth(fwhm, mu = 0.5) {\n  return fwhm / (mu * ROOT_2LN2_MINUS_ONE + 1);\n};\n\n/**\n * Calculate the area of a specific shape.\n * @param {number} fwhm - Full width at half maximum.\n * @param {*} [options = {}] - options.\n * @param {number} [options.height = 1] - Maximum y value of the shape.\n * @param {number} [options.mu = 0.5] - ratio of gaussian contribution.\n * @returns {number} - returns the area of the specific shape and parameters.\n */\nPseudoVoigt.getArea = function getArea(fwhm, options = {}) {\n  let { height = 1, mu = 0.5 } = options;\n  return (fwhm * height * (mu * ROOT_PI_OVER_LN2 + (1 - mu) * Math.PI)) / 2;\n};\n\n/**\n * Calculate the number of times FWHM allows to reach a specific area coverage\n * @param {number} [area=0.9999] - required area to be coverage\n * @param {number} [mu=this.mu] - ratio of gaussian contribution.\n * @returns {number}\n */\nPseudoVoigt.getFactor = function getFactor(area = 0.9999, mu = 0.5) {\n  return mu < 1 ? Lorentzian.getFactor(area) : Gaussian.getFactor(area);\n};\n","import { PseudoVoigt } from 'ml-peak-shape-generator';\n\n/**\n * This function calculates the spectrum as a sum of linear combination of gaussian and lorentzian functions. The pseudo voigt\n * parameters are divided in 4 batches. 1st: centers; 2nd: heights; 3th: widths; 4th: mu's ;\n * @param t Ordinate value\n * @param p Lorentzian parameters\n * @returns {*}\n */\n\nexport function sumOfGaussianLorentzians(p) {\n  return function (t) {\n    let nL = p.length / 4;\n    let result = 0;\n    for (let i = 0; i < nL; i++) {\n      result +=\n        p[i + nL] * PseudoVoigt.fct(t - p[i], p[i + nL * 2], p[i + nL * 3]);\n    }\n    return result;\n  };\n}\n","import { Gaussian } from 'ml-peak-shape-generator';\n/**\n * This function calculates the spectrum as a sum of gaussian functions. The Gaussian\n * parameters are divided in 3 batches. 1st: centers; 2nd: height; 3th: widths;\n * @param t Ordinate values\n * @param p Gaussian parameters\n * @returns {*}\n */\n\nexport function sumOfGaussians(p) {\n  return function (t) {\n    let nL = p.length / 3;\n    let result = 0;\n    for (let i = 0; i < nL; i++) {\n      result += p[i + nL] * Gaussian.fct(t - p[i], p[i + nL * 2]);\n    }\n    return result;\n  };\n}\n","import { Lorentzian } from 'ml-peak-shape-generator';\n\n/**\n * This function calculates the spectrum as a sum of lorentzian functions. The Lorentzian\n * parameters are divided in 3 batches. 1st: centers; 2nd: heights; 3th: widths;\n * @param t Ordinate values\n * @param p Lorentzian parameters\n * @returns {*}\n */\n\nexport function sumOfLorentzians(p) {\n  return function (t) {\n    let nL = p.length / 3;\n    let result = 0;\n    for (let i = 0; i < nL; i++) {\n      result += p[i + nL] * Lorentzian.fct(t - p[i], p[i + nL * 2]);\n    }\n    return result;\n  };\n}\n","import assignDeep from 'assign-deep';\nimport getMaxValue from 'ml-array-max';\n\nimport { sumOfGaussianLorentzians } from './shapes/sumOfGaussianLorentzians';\nimport { sumOfGaussians } from './shapes/sumOfGaussians';\nimport { sumOfLorentzians } from './shapes/sumOfLorentzians';\n\nexport function checkInput(data, peaks, options) {\n  let {\n    shape = { kind: 'gaussian' },\n    optimization = {\n      kind: 'lm',\n    },\n  } = options;\n\n  if (typeof shape.kind !== 'string') {\n    throw new Error('kind should be a string');\n  }\n\n  let kind = shape.kind.toLowerCase().replace(/[^a-z]/g, '');\n\n  let paramsFunc;\n  let defaultParameters;\n  switch (kind) {\n    case 'gaussian':\n      paramsFunc = sumOfGaussians;\n      defaultParameters = {\n        x: {\n          init: (peak) => peak.x,\n          max: (peak) => peak.x + peak.width * 2,\n          min: (peak) => peak.x - peak.width * 2,\n          gradientDifference: (peak) => peak.width * 2e-3,\n        },\n        y: {\n          init: (peak) => peak.y,\n          max: () => 1.5,\n          min: () => 0,\n          gradientDifference: () => 1e-3,\n        },\n        width: {\n          init: (peak) => peak.width,\n          max: (peak) => peak.width * 4,\n          min: (peak) => peak.width * 0.25,\n          gradientDifference: (peak) => peak.width * 2e-3,\n        },\n      };\n      break;\n    case 'lorentzian':\n      paramsFunc = sumOfLorentzians;\n      defaultParameters = {\n        x: {\n          init: (peak) => peak.x,\n          max: (peak) => peak.x + peak.width * 2,\n          min: (peak) => peak.x - peak.width * 2,\n          gradientDifference: (peak) => peak.width * 2e-3,\n        },\n        y: {\n          init: (peak) => peak.y,\n          max: () => 1.5,\n          min: () => 0,\n          gradientDifference: () => 1e-3,\n        },\n        width: {\n          init: (peak) => peak.width,\n          max: (peak) => peak.width * 4,\n          min: (peak) => peak.width * 0.25,\n          gradientDifference: (peak) => peak.width * 2e-3,\n        },\n      };\n      break;\n    case 'pseudovoigt':\n      paramsFunc = sumOfGaussianLorentzians;\n      defaultParameters = {\n        x: {\n          init: (peak) => peak.x,\n          max: (peak) => peak.x + peak.width * 2,\n          min: (peak) => peak.x - peak.width * 2,\n          gradientDifference: (peak) => peak.width * 2e-3,\n        },\n        y: {\n          init: (peak) => peak.y,\n          max: () => 1.5,\n          min: () => 0,\n          gradientDifference: () => 1e-3,\n        },\n        width: {\n          init: (peak) => peak.width,\n          max: (peak) => peak.width * 4,\n          min: (peak) => peak.width * 0.25,\n          gradientDifference: (peak) => peak.width * 2e-3,\n        },\n        mu: {\n          init: (peak) => (peak.mu !== undefined ? peak.mu : 0.5),\n          min: () => 0,\n          max: () => 1,\n          gradientDifference: () => 0.01,\n        },\n      };\n      break;\n    default:\n      throw new Error('kind of shape is not supported');\n  }\n\n  let x = data.x;\n  let maxY = getMaxValue(data.y);\n  let y = new Array(x.length);\n  for (let i = 0; i < x.length; i++) {\n    y[i] = data.y[i] / maxY;\n  }\n\n  for (let i = 0; i < peaks.length; i++) {\n    peaks[i].y /= maxY;\n  }\n\n  let parameters = assignDeep({}, optimization.parameters, defaultParameters);\n\n  for (let key in parameters) {\n    for (let par in parameters[key]) {\n      if (!Array.isArray(parameters[key][par])) {\n        parameters[key][par] = [parameters[key][par]];\n      }\n      if (\n        parameters[key][par].length !== 1 &&\n        parameters[key][par].length !== peaks.length\n      ) {\n        throw new Error(`The length of ${key}-${par} is not correct`);\n      }\n      for (let index = 0; index < parameters[key][par].length; index++) {\n        if (typeof parameters[key][par][index] === 'number') {\n          let value = parameters[key][par][index];\n          parameters[key][par][index] = () => value;\n        }\n      }\n    }\n  }\n\n  optimization.parameters = parameters;\n\n  return {\n    y,\n    x,\n    maxY,\n    peaks,\n    paramsFunc,\n    optimization,\n  };\n}\n","import isArray from 'is-any-array';\n\nexport default function checkOptions(data, parameterizedFunction, options) {\n  let {\n    timeout,\n    minValues,\n    maxValues,\n    initialValues,\n    weights = 1,\n    damping = 1e-2,\n    dampingStepUp = 11,\n    dampingStepDown = 9,\n    maxIterations = 100,\n    errorTolerance = 1e-7,\n    centralDifference = false,\n    gradientDifference = 10e-2,\n    improvementThreshold = 1e-3,\n  } = options;\n\n  if (damping <= 0) {\n    throw new Error('The damping option must be a positive number');\n  } else if (!data.x || !data.y) {\n    throw new Error('The data parameter must have x and y elements');\n  } else if (\n    !isArray(data.x) ||\n    data.x.length < 2 ||\n    !isArray(data.y) ||\n    data.y.length < 2\n  ) {\n    throw new Error(\n      'The data parameter elements must be an array with more than 2 points',\n    );\n  } else if (data.x.length !== data.y.length) {\n    throw new Error('The data parameter elements must have the same size');\n  }\n\n  let parameters =\n    initialValues || new Array(parameterizedFunction.length).fill(1);\n\n  let nbPoints = data.y.length;\n  let parLen = parameters.length;\n  maxValues = maxValues || new Array(parLen).fill(Number.MAX_SAFE_INTEGER);\n  minValues = minValues || new Array(parLen).fill(Number.MIN_SAFE_INTEGER);\n\n  if (maxValues.length !== minValues.length) {\n    throw new Error('minValues and maxValues must be the same size');\n  }\n\n  if (!isArray(parameters)) {\n    throw new Error('initialValues must be an array');\n  }\n\n  if (typeof gradientDifference === 'number') {\n    gradientDifference = new Array(parameters.length).fill(gradientDifference);\n  } else if (isArray(gradientDifference)) {\n    if (gradientDifference.length !== parLen) {\n      gradientDifference = new Array(parLen).fill(gradientDifference[0]);\n    }\n  } else {\n    throw new Error(\n      'gradientDifference should be a number or array with length equal to the number of parameters',\n    );\n  }\n\n  let filler;\n  if (typeof weights === 'number') {\n    let value = 1 / weights ** 2;\n    filler = () => value;\n  } else if (isArray(weights)) {\n    if (weights.length < data.x.length) {\n      let value = 1 / weights[0] ** 2;\n      filler = () => value;\n    } else {\n      filler = (i) => 1 / weights[i] ** 2;\n    }\n  } else {\n    throw new Error(\n      'weights should be a number or array with length equal to the number of data points',\n    );\n  }\n\n  let checkTimeout;\n  if (timeout !== undefined) {\n    if (typeof timeout !== 'number') {\n      throw new Error('timeout should be a number');\n    }\n    let endTime = Date.now() + timeout * 1000;\n    checkTimeout = () => Date.now() > endTime;\n  } else {\n    checkTimeout = () => false;\n  }\n\n  let weightSquare = new Array(data.x.length);\n  for (let i = 0; i < nbPoints; i++) {\n    weightSquare[i] = filler(i);\n  }\n\n  return {\n    checkTimeout,\n    minValues,\n    maxValues,\n    parameters,\n    weightSquare,\n    damping,\n    dampingStepUp,\n    dampingStepDown,\n    maxIterations,\n    errorTolerance,\n    centralDifference,\n    gradientDifference,\n    improvementThreshold,\n  };\n}\n","/**\n * the sum of the weighted squares of the errors (or weighted residuals) between the data.y\n * and the curve-fit function.\n * @ignore\n * @param {{x:Array<number>, y:Array<number>}} data - Array of points to fit in the format [x1, x2, ... ], [y1, y2, ... ]\n * @param {Array<number>} parameters - Array of current parameter values\n * @param {function} parameterizedFunction - The parameters and returns a function with the independent variable as a parameter\n * @param {Array} weightSquare - Square of weights\n * @return {number}\n */\nexport default function errorCalculation(\n  data,\n  parameters,\n  parameterizedFunction,\n  weightSquare,\n) {\n  let error = 0;\n  const func = parameterizedFunction(parameters);\n  for (let i = 0; i < data.x.length; i++) {\n    error += Math.pow(data.y[i] - func(data.x[i]), 2) / weightSquare[i];\n  }\n\n  return error;\n}\n","import isArray from 'is-any-array';\nimport max from 'ml-array-max';\nimport min from 'ml-array-min';\n\nfunction rescale(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  } else if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var output;\n\n  if (options.output !== undefined) {\n    if (!isArray(options.output)) {\n      throw new TypeError('output option must be an array if specified');\n    }\n\n    output = options.output;\n  } else {\n    output = new Array(input.length);\n  }\n\n  var currentMin = min(input);\n  var currentMax = max(input);\n\n  if (currentMin === currentMax) {\n    throw new RangeError('minimum and maximum input values are equal. Cannot rescale a constant array');\n  }\n\n  var _options$min = options.min,\n      minValue = _options$min === void 0 ? options.autoMinMax ? currentMin : 0 : _options$min,\n      _options$max = options.max,\n      maxValue = _options$max === void 0 ? options.autoMinMax ? currentMax : 1 : _options$max;\n\n  if (minValue >= maxValue) {\n    throw new RangeError('min option must be smaller than max option');\n  }\n\n  var factor = (maxValue - minValue) / (currentMax - currentMin);\n\n  for (var i = 0; i < input.length; i++) {\n    output[i] = (input[i] - currentMin) * factor + minValue;\n  }\n\n  return output;\n}\n\nexport { rescale as default };\n","const indent = ' '.repeat(2);\nconst indentData = ' '.repeat(4);\n\nexport function inspectMatrix() {\n  return inspectMatrixWithOptions(this);\n}\n\nexport function inspectMatrixWithOptions(matrix, options = {}) {\n  const { maxRows = 15, maxColumns = 10, maxNumSize = 8 } = options;\n  return `${matrix.constructor.name} {\n${indent}[\n${indentData}${inspectData(matrix, maxRows, maxColumns, maxNumSize)}\n${indent}]\n${indent}rows: ${matrix.rows}\n${indent}columns: ${matrix.columns}\n}`;\n}\n\nfunction inspectData(matrix, maxRows, maxColumns, maxNumSize) {\n  const { rows, columns } = matrix;\n  const maxI = Math.min(rows, maxRows);\n  const maxJ = Math.min(columns, maxColumns);\n  const result = [];\n  for (let i = 0; i < maxI; i++) {\n    let line = [];\n    for (let j = 0; j < maxJ; j++) {\n      line.push(formatNumber(matrix.get(i, j), maxNumSize));\n    }\n    result.push(`${line.join(' ')}`);\n  }\n  if (maxJ !== columns) {\n    result[result.length - 1] += ` ... ${columns - maxColumns} more columns`;\n  }\n  if (maxI !== rows) {\n    result.push(`... ${rows - maxRows} more rows`);\n  }\n  return result.join(`\\n${indentData}`);\n}\n\nfunction formatNumber(num, maxNumSize) {\n  const numStr = String(num);\n  if (numStr.length <= maxNumSize) {\n    return numStr.padEnd(maxNumSize, ' ');\n  }\n  const precise = num.toPrecision(maxNumSize - 2);\n  if (precise.length <= maxNumSize) {\n    return precise;\n  }\n  const exponential = num.toExponential(maxNumSize - 2);\n  const eIndex = exponential.indexOf('e');\n  const e = exponential.slice(eIndex);\n  return exponential.slice(0, maxNumSize - e.length) + e;\n}\n","export function installMathOperations(AbstractMatrix, Matrix) {\n  AbstractMatrix.prototype.add = function add(value) {\n    if (typeof value === 'number') return this.addS(value);\n    return this.addM(value);\n  };\n\n  AbstractMatrix.prototype.addS = function addS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.addM = function addM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.add = function add(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.add(value);\n  };\n\n  AbstractMatrix.prototype.sub = function sub(value) {\n    if (typeof value === 'number') return this.subS(value);\n    return this.subM(value);\n  };\n\n  AbstractMatrix.prototype.subS = function subS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.subM = function subM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sub = function sub(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sub(value);\n  };\n  AbstractMatrix.prototype.subtract = AbstractMatrix.prototype.sub;\n  AbstractMatrix.prototype.subtractS = AbstractMatrix.prototype.subS;\n  AbstractMatrix.prototype.subtractM = AbstractMatrix.prototype.subM;\n  AbstractMatrix.subtract = AbstractMatrix.sub;\n\n  AbstractMatrix.prototype.mul = function mul(value) {\n    if (typeof value === 'number') return this.mulS(value);\n    return this.mulM(value);\n  };\n\n  AbstractMatrix.prototype.mulS = function mulS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.mulM = function mulM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.mul = function mul(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.mul(value);\n  };\n  AbstractMatrix.prototype.multiply = AbstractMatrix.prototype.mul;\n  AbstractMatrix.prototype.multiplyS = AbstractMatrix.prototype.mulS;\n  AbstractMatrix.prototype.multiplyM = AbstractMatrix.prototype.mulM;\n  AbstractMatrix.multiply = AbstractMatrix.mul;\n\n  AbstractMatrix.prototype.div = function div(value) {\n    if (typeof value === 'number') return this.divS(value);\n    return this.divM(value);\n  };\n\n  AbstractMatrix.prototype.divS = function divS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.divM = function divM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.div = function div(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.div(value);\n  };\n  AbstractMatrix.prototype.divide = AbstractMatrix.prototype.div;\n  AbstractMatrix.prototype.divideS = AbstractMatrix.prototype.divS;\n  AbstractMatrix.prototype.divideM = AbstractMatrix.prototype.divM;\n  AbstractMatrix.divide = AbstractMatrix.div;\n\n  AbstractMatrix.prototype.mod = function mod(value) {\n    if (typeof value === 'number') return this.modS(value);\n    return this.modM(value);\n  };\n\n  AbstractMatrix.prototype.modS = function modS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) % value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.modM = function modM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) % matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.mod = function mod(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.mod(value);\n  };\n  AbstractMatrix.prototype.modulus = AbstractMatrix.prototype.mod;\n  AbstractMatrix.prototype.modulusS = AbstractMatrix.prototype.modS;\n  AbstractMatrix.prototype.modulusM = AbstractMatrix.prototype.modM;\n  AbstractMatrix.modulus = AbstractMatrix.mod;\n\n  AbstractMatrix.prototype.and = function and(value) {\n    if (typeof value === 'number') return this.andS(value);\n    return this.andM(value);\n  };\n\n  AbstractMatrix.prototype.andS = function andS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) & value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.andM = function andM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) & matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.and = function and(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.and(value);\n  };\n\n  AbstractMatrix.prototype.or = function or(value) {\n    if (typeof value === 'number') return this.orS(value);\n    return this.orM(value);\n  };\n\n  AbstractMatrix.prototype.orS = function orS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) | value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.orM = function orM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) | matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.or = function or(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.or(value);\n  };\n\n  AbstractMatrix.prototype.xor = function xor(value) {\n    if (typeof value === 'number') return this.xorS(value);\n    return this.xorM(value);\n  };\n\n  AbstractMatrix.prototype.xorS = function xorS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) ^ value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.xorM = function xorM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) ^ matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.xor = function xor(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.xor(value);\n  };\n\n  AbstractMatrix.prototype.leftShift = function leftShift(value) {\n    if (typeof value === 'number') return this.leftShiftS(value);\n    return this.leftShiftM(value);\n  };\n\n  AbstractMatrix.prototype.leftShiftS = function leftShiftS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) << value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.leftShiftM = function leftShiftM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) << matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.leftShift = function leftShift(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.leftShift(value);\n  };\n\n  AbstractMatrix.prototype.signPropagatingRightShift = function signPropagatingRightShift(value) {\n    if (typeof value === 'number') return this.signPropagatingRightShiftS(value);\n    return this.signPropagatingRightShiftM(value);\n  };\n\n  AbstractMatrix.prototype.signPropagatingRightShiftS = function signPropagatingRightShiftS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >> value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.signPropagatingRightShiftM = function signPropagatingRightShiftM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >> matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.signPropagatingRightShift = function signPropagatingRightShift(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.signPropagatingRightShift(value);\n  };\n\n  AbstractMatrix.prototype.rightShift = function rightShift(value) {\n    if (typeof value === 'number') return this.rightShiftS(value);\n    return this.rightShiftM(value);\n  };\n\n  AbstractMatrix.prototype.rightShiftS = function rightShiftS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >>> value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.rightShiftM = function rightShiftM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >>> matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.rightShift = function rightShift(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.rightShift(value);\n  };\n  AbstractMatrix.prototype.zeroFillRightShift = AbstractMatrix.prototype.rightShift;\n  AbstractMatrix.prototype.zeroFillRightShiftS = AbstractMatrix.prototype.rightShiftS;\n  AbstractMatrix.prototype.zeroFillRightShiftM = AbstractMatrix.prototype.rightShiftM;\n  AbstractMatrix.zeroFillRightShift = AbstractMatrix.rightShift;\n\n  AbstractMatrix.prototype.not = function not() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, ~(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.not = function not(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.not();\n  };\n\n  AbstractMatrix.prototype.abs = function abs() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.abs(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.abs = function abs(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.abs();\n  };\n\n  AbstractMatrix.prototype.acos = function acos() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.acos(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.acos = function acos(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.acos();\n  };\n\n  AbstractMatrix.prototype.acosh = function acosh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.acosh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.acosh = function acosh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.acosh();\n  };\n\n  AbstractMatrix.prototype.asin = function asin() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.asin(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.asin = function asin(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.asin();\n  };\n\n  AbstractMatrix.prototype.asinh = function asinh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.asinh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.asinh = function asinh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.asinh();\n  };\n\n  AbstractMatrix.prototype.atan = function atan() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.atan(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.atan = function atan(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.atan();\n  };\n\n  AbstractMatrix.prototype.atanh = function atanh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.atanh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.atanh = function atanh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.atanh();\n  };\n\n  AbstractMatrix.prototype.cbrt = function cbrt() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.cbrt(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.cbrt = function cbrt(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.cbrt();\n  };\n\n  AbstractMatrix.prototype.ceil = function ceil() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.ceil(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.ceil = function ceil(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.ceil();\n  };\n\n  AbstractMatrix.prototype.clz32 = function clz32() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.clz32(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.clz32 = function clz32(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.clz32();\n  };\n\n  AbstractMatrix.prototype.cos = function cos() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.cos(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.cos = function cos(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.cos();\n  };\n\n  AbstractMatrix.prototype.cosh = function cosh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.cosh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.cosh = function cosh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.cosh();\n  };\n\n  AbstractMatrix.prototype.exp = function exp() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.exp(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.exp = function exp(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.exp();\n  };\n\n  AbstractMatrix.prototype.expm1 = function expm1() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.expm1(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.expm1 = function expm1(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.expm1();\n  };\n\n  AbstractMatrix.prototype.floor = function floor() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.floor(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.floor = function floor(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.floor();\n  };\n\n  AbstractMatrix.prototype.fround = function fround() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.fround(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.fround = function fround(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.fround();\n  };\n\n  AbstractMatrix.prototype.log = function log() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log = function log(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log();\n  };\n\n  AbstractMatrix.prototype.log1p = function log1p() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log1p(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log1p = function log1p(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log1p();\n  };\n\n  AbstractMatrix.prototype.log10 = function log10() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log10(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log10 = function log10(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log10();\n  };\n\n  AbstractMatrix.prototype.log2 = function log2() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log2(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log2 = function log2(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log2();\n  };\n\n  AbstractMatrix.prototype.round = function round() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.round(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.round = function round(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.round();\n  };\n\n  AbstractMatrix.prototype.sign = function sign() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sign(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sign = function sign(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sign();\n  };\n\n  AbstractMatrix.prototype.sin = function sin() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sin(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sin = function sin(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sin();\n  };\n\n  AbstractMatrix.prototype.sinh = function sinh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sinh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sinh = function sinh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sinh();\n  };\n\n  AbstractMatrix.prototype.sqrt = function sqrt() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sqrt(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sqrt = function sqrt(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sqrt();\n  };\n\n  AbstractMatrix.prototype.tan = function tan() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.tan(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.tan = function tan(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.tan();\n  };\n\n  AbstractMatrix.prototype.tanh = function tanh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.tanh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.tanh = function tanh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.tanh();\n  };\n\n  AbstractMatrix.prototype.trunc = function trunc() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.trunc(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.trunc = function trunc(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.trunc();\n  };\n\n  AbstractMatrix.pow = function pow(matrix, arg0) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.pow(arg0);\n  };\n\n  AbstractMatrix.prototype.pow = function pow(value) {\n    if (typeof value === 'number') return this.powS(value);\n    return this.powM(value);\n  };\n\n  AbstractMatrix.prototype.powS = function powS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.pow(this.get(i, j), value));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.powM = function powM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.pow(this.get(i, j), matrix.get(i, j)));\n      }\n    }\n    return this;\n  };\n}\n","/**\n * @private\n * Check that a row index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\nexport function checkRowIndex(matrix, index, outer) {\n  let max = outer ? matrix.rows : matrix.rows - 1;\n  if (index < 0 || index > max) {\n    throw new RangeError('Row index out of range');\n  }\n}\n\n/**\n * @private\n * Check that a column index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\nexport function checkColumnIndex(matrix, index, outer) {\n  let max = outer ? matrix.columns : matrix.columns - 1;\n  if (index < 0 || index > max) {\n    throw new RangeError('Column index out of range');\n  }\n}\n\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\nexport function checkRowVector(matrix, vector) {\n  if (vector.to1DArray) {\n    vector = vector.to1DArray();\n  }\n  if (vector.length !== matrix.columns) {\n    throw new RangeError(\n      'vector size must be the same as the number of columns',\n    );\n  }\n  return vector;\n}\n\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\nexport function checkColumnVector(matrix, vector) {\n  if (vector.to1DArray) {\n    vector = vector.to1DArray();\n  }\n  if (vector.length !== matrix.rows) {\n    throw new RangeError('vector size must be the same as the number of rows');\n  }\n  return vector;\n}\n\nexport function checkIndices(matrix, rowIndices, columnIndices) {\n  return {\n    row: checkRowIndices(matrix, rowIndices),\n    column: checkColumnIndices(matrix, columnIndices),\n  };\n}\n\nexport function checkRowIndices(matrix, rowIndices) {\n  if (typeof rowIndices !== 'object') {\n    throw new TypeError('unexpected type for row indices');\n  }\n\n  let rowOut = rowIndices.some((r) => {\n    return r < 0 || r >= matrix.rows;\n  });\n\n  if (rowOut) {\n    throw new RangeError('row indices are out of range');\n  }\n\n  if (!Array.isArray(rowIndices)) rowIndices = Array.from(rowIndices);\n\n  return rowIndices;\n}\n\nexport function checkColumnIndices(matrix, columnIndices) {\n  if (typeof columnIndices !== 'object') {\n    throw new TypeError('unexpected type for column indices');\n  }\n\n  let columnOut = columnIndices.some((c) => {\n    return c < 0 || c >= matrix.columns;\n  });\n\n  if (columnOut) {\n    throw new RangeError('column indices are out of range');\n  }\n  if (!Array.isArray(columnIndices)) columnIndices = Array.from(columnIndices);\n\n  return columnIndices;\n}\n\nexport function checkRange(matrix, startRow, endRow, startColumn, endColumn) {\n  if (arguments.length !== 5) {\n    throw new RangeError('expected 4 arguments');\n  }\n  checkNumber('startRow', startRow);\n  checkNumber('endRow', endRow);\n  checkNumber('startColumn', startColumn);\n  checkNumber('endColumn', endColumn);\n  if (\n    startRow > endRow ||\n    startColumn > endColumn ||\n    startRow < 0 ||\n    startRow >= matrix.rows ||\n    endRow < 0 ||\n    endRow >= matrix.rows ||\n    startColumn < 0 ||\n    startColumn >= matrix.columns ||\n    endColumn < 0 ||\n    endColumn >= matrix.columns\n  ) {\n    throw new RangeError('Submatrix indices are out of range');\n  }\n}\n\nexport function newArray(length, value = 0) {\n  let array = [];\n  for (let i = 0; i < length; i++) {\n    array.push(value);\n  }\n  return array;\n}\n\nfunction checkNumber(name, value) {\n  if (typeof value !== 'number') {\n    throw new TypeError(`${name} must be a number`);\n  }\n}\n\nexport function checkNonEmpty(matrix) {\n  if (matrix.isEmpty()) {\n    throw new Error('Empty matrix has no elements to index');\n  }\n}\n","import { newArray } from './util';\n\nexport function sumByRow(matrix) {\n  let sum = newArray(matrix.rows);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[i] += matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function sumByColumn(matrix) {\n  let sum = newArray(matrix.columns);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[j] += matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function sumAll(matrix) {\n  let v = 0;\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      v += matrix.get(i, j);\n    }\n  }\n  return v;\n}\n\nexport function productByRow(matrix) {\n  let sum = newArray(matrix.rows, 1);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[i] *= matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function productByColumn(matrix) {\n  let sum = newArray(matrix.columns, 1);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[j] *= matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function productAll(matrix) {\n  let v = 1;\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      v *= matrix.get(i, j);\n    }\n  }\n  return v;\n}\n\nexport function varianceByRow(matrix, unbiased, mean) {\n  const rows = matrix.rows;\n  const cols = matrix.columns;\n  const variance = [];\n\n  for (let i = 0; i < rows; i++) {\n    let sum1 = 0;\n    let sum2 = 0;\n    let x = 0;\n    for (let j = 0; j < cols; j++) {\n      x = matrix.get(i, j) - mean[i];\n      sum1 += x;\n      sum2 += x * x;\n    }\n    if (unbiased) {\n      variance.push((sum2 - (sum1 * sum1) / cols) / (cols - 1));\n    } else {\n      variance.push((sum2 - (sum1 * sum1) / cols) / cols);\n    }\n  }\n  return variance;\n}\n\nexport function varianceByColumn(matrix, unbiased, mean) {\n  const rows = matrix.rows;\n  const cols = matrix.columns;\n  const variance = [];\n\n  for (let j = 0; j < cols; j++) {\n    let sum1 = 0;\n    let sum2 = 0;\n    let x = 0;\n    for (let i = 0; i < rows; i++) {\n      x = matrix.get(i, j) - mean[j];\n      sum1 += x;\n      sum2 += x * x;\n    }\n    if (unbiased) {\n      variance.push((sum2 - (sum1 * sum1) / rows) / (rows - 1));\n    } else {\n      variance.push((sum2 - (sum1 * sum1) / rows) / rows);\n    }\n  }\n  return variance;\n}\n\nexport function varianceAll(matrix, unbiased, mean) {\n  const rows = matrix.rows;\n  const cols = matrix.columns;\n  const size = rows * cols;\n\n  let sum1 = 0;\n  let sum2 = 0;\n  let x = 0;\n  for (let i = 0; i < rows; i++) {\n    for (let j = 0; j < cols; j++) {\n      x = matrix.get(i, j) - mean;\n      sum1 += x;\n      sum2 += x * x;\n    }\n  }\n  if (unbiased) {\n    return (sum2 - (sum1 * sum1) / size) / (size - 1);\n  } else {\n    return (sum2 - (sum1 * sum1) / size) / size;\n  }\n}\n\nexport function centerByRow(matrix, mean) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean[i]);\n    }\n  }\n}\n\nexport function centerByColumn(matrix, mean) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean[j]);\n    }\n  }\n}\n\nexport function centerAll(matrix, mean) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean);\n    }\n  }\n}\n\nexport function getScaleByRow(matrix) {\n  const scale = [];\n  for (let i = 0; i < matrix.rows; i++) {\n    let sum = 0;\n    for (let j = 0; j < matrix.columns; j++) {\n      sum += Math.pow(matrix.get(i, j), 2) / (matrix.columns - 1);\n    }\n    scale.push(Math.sqrt(sum));\n  }\n  return scale;\n}\n\nexport function scaleByRow(matrix, scale) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale[i]);\n    }\n  }\n}\n\nexport function getScaleByColumn(matrix) {\n  const scale = [];\n  for (let j = 0; j < matrix.columns; j++) {\n    let sum = 0;\n    for (let i = 0; i < matrix.rows; i++) {\n      sum += Math.pow(matrix.get(i, j), 2) / (matrix.rows - 1);\n    }\n    scale.push(Math.sqrt(sum));\n  }\n  return scale;\n}\n\nexport function scaleByColumn(matrix, scale) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale[j]);\n    }\n  }\n}\n\nexport function getScaleAll(matrix) {\n  const divider = matrix.size - 1;\n  let sum = 0;\n  for (let j = 0; j < matrix.columns; j++) {\n    for (let i = 0; i < matrix.rows; i++) {\n      sum += Math.pow(matrix.get(i, j), 2) / divider;\n    }\n  }\n  return Math.sqrt(sum);\n}\n\nexport function scaleAll(matrix, scale) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale);\n    }\n  }\n}\n","import rescale from 'ml-array-rescale';\n\nimport { inspectMatrix, inspectMatrixWithOptions } from './inspect';\nimport { installMathOperations } from './mathOperations';\nimport {\n  sumByRow,\n  sumByColumn,\n  sumAll,\n  productByRow,\n  productByColumn,\n  productAll,\n  varianceByRow,\n  varianceByColumn,\n  varianceAll,\n  centerByRow,\n  centerByColumn,\n  centerAll,\n  scaleByRow,\n  scaleByColumn,\n  scaleAll,\n  getScaleByRow,\n  getScaleByColumn,\n  getScaleAll,\n} from './stat';\nimport {\n  checkRowVector,\n  checkRowIndex,\n  checkColumnIndex,\n  checkColumnVector,\n  checkRange,\n  checkIndices,\n  checkNonEmpty,\n} from './util';\n\nexport class AbstractMatrix {\n  static from1DArray(newRows, newColumns, newData) {\n    let length = newRows * newColumns;\n    if (length !== newData.length) {\n      throw new RangeError('data length does not match given dimensions');\n    }\n    let newMatrix = new Matrix(newRows, newColumns);\n    for (let row = 0; row < newRows; row++) {\n      for (let column = 0; column < newColumns; column++) {\n        newMatrix.set(row, column, newData[row * newColumns + column]);\n      }\n    }\n    return newMatrix;\n  }\n\n  static rowVector(newData) {\n    let vector = new Matrix(1, newData.length);\n    for (let i = 0; i < newData.length; i++) {\n      vector.set(0, i, newData[i]);\n    }\n    return vector;\n  }\n\n  static columnVector(newData) {\n    let vector = new Matrix(newData.length, 1);\n    for (let i = 0; i < newData.length; i++) {\n      vector.set(i, 0, newData[i]);\n    }\n    return vector;\n  }\n\n  static zeros(rows, columns) {\n    return new Matrix(rows, columns);\n  }\n\n  static ones(rows, columns) {\n    return new Matrix(rows, columns).fill(1);\n  }\n\n  static rand(rows, columns, options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { random = Math.random } = options;\n    let matrix = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        matrix.set(i, j, random());\n      }\n    }\n    return matrix;\n  }\n\n  static randInt(rows, columns, options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { min = 0, max = 1000, random = Math.random } = options;\n    if (!Number.isInteger(min)) throw new TypeError('min must be an integer');\n    if (!Number.isInteger(max)) throw new TypeError('max must be an integer');\n    if (min >= max) throw new RangeError('min must be smaller than max');\n    let interval = max - min;\n    let matrix = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        let value = min + Math.round(random() * interval);\n        matrix.set(i, j, value);\n      }\n    }\n    return matrix;\n  }\n\n  static eye(rows, columns, value) {\n    if (columns === undefined) columns = rows;\n    if (value === undefined) value = 1;\n    let min = Math.min(rows, columns);\n    let matrix = this.zeros(rows, columns);\n    for (let i = 0; i < min; i++) {\n      matrix.set(i, i, value);\n    }\n    return matrix;\n  }\n\n  static diag(data, rows, columns) {\n    let l = data.length;\n    if (rows === undefined) rows = l;\n    if (columns === undefined) columns = rows;\n    let min = Math.min(l, rows, columns);\n    let matrix = this.zeros(rows, columns);\n    for (let i = 0; i < min; i++) {\n      matrix.set(i, i, data[i]);\n    }\n    return matrix;\n  }\n\n  static min(matrix1, matrix2) {\n    matrix1 = this.checkMatrix(matrix1);\n    matrix2 = this.checkMatrix(matrix2);\n    let rows = matrix1.rows;\n    let columns = matrix1.columns;\n    let result = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        result.set(i, j, Math.min(matrix1.get(i, j), matrix2.get(i, j)));\n      }\n    }\n    return result;\n  }\n\n  static max(matrix1, matrix2) {\n    matrix1 = this.checkMatrix(matrix1);\n    matrix2 = this.checkMatrix(matrix2);\n    let rows = matrix1.rows;\n    let columns = matrix1.columns;\n    let result = new this(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        result.set(i, j, Math.max(matrix1.get(i, j), matrix2.get(i, j)));\n      }\n    }\n    return result;\n  }\n\n  static checkMatrix(value) {\n    return AbstractMatrix.isMatrix(value) ? value : new Matrix(value);\n  }\n\n  static isMatrix(value) {\n    return value != null && value.klass === 'Matrix';\n  }\n\n  get size() {\n    return this.rows * this.columns;\n  }\n\n  apply(callback) {\n    if (typeof callback !== 'function') {\n      throw new TypeError('callback must be a function');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        callback.call(this, i, j);\n      }\n    }\n    return this;\n  }\n\n  to1DArray() {\n    let array = [];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        array.push(this.get(i, j));\n      }\n    }\n    return array;\n  }\n\n  to2DArray() {\n    let copy = [];\n    for (let i = 0; i < this.rows; i++) {\n      copy.push([]);\n      for (let j = 0; j < this.columns; j++) {\n        copy[i].push(this.get(i, j));\n      }\n    }\n    return copy;\n  }\n\n  toJSON() {\n    return this.to2DArray();\n  }\n\n  isRowVector() {\n    return this.rows === 1;\n  }\n\n  isColumnVector() {\n    return this.columns === 1;\n  }\n\n  isVector() {\n    return this.rows === 1 || this.columns === 1;\n  }\n\n  isSquare() {\n    return this.rows === this.columns;\n  }\n\n  isEmpty() {\n    return this.rows === 0 || this.columns === 0;\n  }\n\n  isSymmetric() {\n    if (this.isSquare()) {\n      for (let i = 0; i < this.rows; i++) {\n        for (let j = 0; j <= i; j++) {\n          if (this.get(i, j) !== this.get(j, i)) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n    return false;\n  }\n\n  isEchelonForm() {\n    let i = 0;\n    let j = 0;\n    let previousColumn = -1;\n    let isEchelonForm = true;\n    let checked = false;\n    while (i < this.rows && isEchelonForm) {\n      j = 0;\n      checked = false;\n      while (j < this.columns && checked === false) {\n        if (this.get(i, j) === 0) {\n          j++;\n        } else if (this.get(i, j) === 1 && j > previousColumn) {\n          checked = true;\n          previousColumn = j;\n        } else {\n          isEchelonForm = false;\n          checked = true;\n        }\n      }\n      i++;\n    }\n    return isEchelonForm;\n  }\n\n  isReducedEchelonForm() {\n    let i = 0;\n    let j = 0;\n    let previousColumn = -1;\n    let isReducedEchelonForm = true;\n    let checked = false;\n    while (i < this.rows && isReducedEchelonForm) {\n      j = 0;\n      checked = false;\n      while (j < this.columns && checked === false) {\n        if (this.get(i, j) === 0) {\n          j++;\n        } else if (this.get(i, j) === 1 && j > previousColumn) {\n          checked = true;\n          previousColumn = j;\n        } else {\n          isReducedEchelonForm = false;\n          checked = true;\n        }\n      }\n      for (let k = j + 1; k < this.rows; k++) {\n        if (this.get(i, k) !== 0) {\n          isReducedEchelonForm = false;\n        }\n      }\n      i++;\n    }\n    return isReducedEchelonForm;\n  }\n\n  echelonForm() {\n    let result = this.clone();\n    let h = 0;\n    let k = 0;\n    while (h < result.rows && k < result.columns) {\n      let iMax = h;\n      for (let i = h; i < result.rows; i++) {\n        if (result.get(i, k) > result.get(iMax, k)) {\n          iMax = i;\n        }\n      }\n      if (result.get(iMax, k) === 0) {\n        k++;\n      } else {\n        result.swapRows(h, iMax);\n        let tmp = result.get(h, k);\n        for (let j = k; j < result.columns; j++) {\n          result.set(h, j, result.get(h, j) / tmp);\n        }\n        for (let i = h + 1; i < result.rows; i++) {\n          let factor = result.get(i, k) / result.get(h, k);\n          result.set(i, k, 0);\n          for (let j = k + 1; j < result.columns; j++) {\n            result.set(i, j, result.get(i, j) - result.get(h, j) * factor);\n          }\n        }\n        h++;\n        k++;\n      }\n    }\n    return result;\n  }\n\n  reducedEchelonForm() {\n    let result = this.echelonForm();\n    let m = result.columns;\n    let n = result.rows;\n    let h = n - 1;\n    while (h >= 0) {\n      if (result.maxRow(h) === 0) {\n        h--;\n      } else {\n        let p = 0;\n        let pivot = false;\n        while (p < n && pivot === false) {\n          if (result.get(h, p) === 1) {\n            pivot = true;\n          } else {\n            p++;\n          }\n        }\n        for (let i = 0; i < h; i++) {\n          let factor = result.get(i, p);\n          for (let j = p; j < m; j++) {\n            let tmp = result.get(i, j) - factor * result.get(h, j);\n            result.set(i, j, tmp);\n          }\n        }\n        h--;\n      }\n    }\n    return result;\n  }\n\n  set() {\n    throw new Error('set method is unimplemented');\n  }\n\n  get() {\n    throw new Error('get method is unimplemented');\n  }\n\n  repeat(options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { rows = 1, columns = 1 } = options;\n    if (!Number.isInteger(rows) || rows <= 0) {\n      throw new TypeError('rows must be a positive integer');\n    }\n    if (!Number.isInteger(columns) || columns <= 0) {\n      throw new TypeError('columns must be a positive integer');\n    }\n    let matrix = new Matrix(this.rows * rows, this.columns * columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        matrix.setSubMatrix(this, this.rows * i, this.columns * j);\n      }\n    }\n    return matrix;\n  }\n\n  fill(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, value);\n      }\n    }\n    return this;\n  }\n\n  neg() {\n    return this.mulS(-1);\n  }\n\n  getRow(index) {\n    checkRowIndex(this, index);\n    let row = [];\n    for (let i = 0; i < this.columns; i++) {\n      row.push(this.get(index, i));\n    }\n    return row;\n  }\n\n  getRowVector(index) {\n    return Matrix.rowVector(this.getRow(index));\n  }\n\n  setRow(index, array) {\n    checkRowIndex(this, index);\n    array = checkRowVector(this, array);\n    for (let i = 0; i < this.columns; i++) {\n      this.set(index, i, array[i]);\n    }\n    return this;\n  }\n\n  swapRows(row1, row2) {\n    checkRowIndex(this, row1);\n    checkRowIndex(this, row2);\n    for (let i = 0; i < this.columns; i++) {\n      let temp = this.get(row1, i);\n      this.set(row1, i, this.get(row2, i));\n      this.set(row2, i, temp);\n    }\n    return this;\n  }\n\n  getColumn(index) {\n    checkColumnIndex(this, index);\n    let column = [];\n    for (let i = 0; i < this.rows; i++) {\n      column.push(this.get(i, index));\n    }\n    return column;\n  }\n\n  getColumnVector(index) {\n    return Matrix.columnVector(this.getColumn(index));\n  }\n\n  setColumn(index, array) {\n    checkColumnIndex(this, index);\n    array = checkColumnVector(this, array);\n    for (let i = 0; i < this.rows; i++) {\n      this.set(i, index, array[i]);\n    }\n    return this;\n  }\n\n  swapColumns(column1, column2) {\n    checkColumnIndex(this, column1);\n    checkColumnIndex(this, column2);\n    for (let i = 0; i < this.rows; i++) {\n      let temp = this.get(i, column1);\n      this.set(i, column1, this.get(i, column2));\n      this.set(i, column2, temp);\n    }\n    return this;\n  }\n\n  addRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + vector[j]);\n      }\n    }\n    return this;\n  }\n\n  subRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - vector[j]);\n      }\n    }\n    return this;\n  }\n\n  mulRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * vector[j]);\n      }\n    }\n    return this;\n  }\n\n  divRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / vector[j]);\n      }\n    }\n    return this;\n  }\n\n  addColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + vector[i]);\n      }\n    }\n    return this;\n  }\n\n  subColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - vector[i]);\n      }\n    }\n    return this;\n  }\n\n  mulColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * vector[i]);\n      }\n    }\n    return this;\n  }\n\n  divColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / vector[i]);\n      }\n    }\n    return this;\n  }\n\n  mulRow(index, value) {\n    checkRowIndex(this, index);\n    for (let i = 0; i < this.columns; i++) {\n      this.set(index, i, this.get(index, i) * value);\n    }\n    return this;\n  }\n\n  mulColumn(index, value) {\n    checkColumnIndex(this, index);\n    for (let i = 0; i < this.rows; i++) {\n      this.set(i, index, this.get(i, index) * value);\n    }\n    return this;\n  }\n\n  max() {\n    if (this.isEmpty()) {\n      return NaN;\n    }\n    let v = this.get(0, 0);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) > v) {\n          v = this.get(i, j);\n        }\n      }\n    }\n    return v;\n  }\n\n  maxIndex() {\n    checkNonEmpty(this);\n    let v = this.get(0, 0);\n    let idx = [0, 0];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) > v) {\n          v = this.get(i, j);\n          idx[0] = i;\n          idx[1] = j;\n        }\n      }\n    }\n    return idx;\n  }\n\n  min() {\n    if (this.isEmpty()) {\n      return NaN;\n    }\n    let v = this.get(0, 0);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) < v) {\n          v = this.get(i, j);\n        }\n      }\n    }\n    return v;\n  }\n\n  minIndex() {\n    checkNonEmpty(this);\n    let v = this.get(0, 0);\n    let idx = [0, 0];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) < v) {\n          v = this.get(i, j);\n          idx[0] = i;\n          idx[1] = j;\n        }\n      }\n    }\n    return idx;\n  }\n\n  maxRow(row) {\n    checkRowIndex(this, row);\n    if (this.isEmpty()) {\n      return NaN;\n    }\n    let v = this.get(row, 0);\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) > v) {\n        v = this.get(row, i);\n      }\n    }\n    return v;\n  }\n\n  maxRowIndex(row) {\n    checkRowIndex(this, row);\n    checkNonEmpty(this);\n    let v = this.get(row, 0);\n    let idx = [row, 0];\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) > v) {\n        v = this.get(row, i);\n        idx[1] = i;\n      }\n    }\n    return idx;\n  }\n\n  minRow(row) {\n    checkRowIndex(this, row);\n    if (this.isEmpty()) {\n      return NaN;\n    }\n    let v = this.get(row, 0);\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) < v) {\n        v = this.get(row, i);\n      }\n    }\n    return v;\n  }\n\n  minRowIndex(row) {\n    checkRowIndex(this, row);\n    checkNonEmpty(this);\n    let v = this.get(row, 0);\n    let idx = [row, 0];\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) < v) {\n        v = this.get(row, i);\n        idx[1] = i;\n      }\n    }\n    return idx;\n  }\n\n  maxColumn(column) {\n    checkColumnIndex(this, column);\n    if (this.isEmpty()) {\n      return NaN;\n    }\n    let v = this.get(0, column);\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) > v) {\n        v = this.get(i, column);\n      }\n    }\n    return v;\n  }\n\n  maxColumnIndex(column) {\n    checkColumnIndex(this, column);\n    checkNonEmpty(this);\n    let v = this.get(0, column);\n    let idx = [0, column];\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) > v) {\n        v = this.get(i, column);\n        idx[0] = i;\n      }\n    }\n    return idx;\n  }\n\n  minColumn(column) {\n    checkColumnIndex(this, column);\n    if (this.isEmpty()) {\n      return NaN;\n    }\n    let v = this.get(0, column);\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) < v) {\n        v = this.get(i, column);\n      }\n    }\n    return v;\n  }\n\n  minColumnIndex(column) {\n    checkColumnIndex(this, column);\n    checkNonEmpty(this);\n    let v = this.get(0, column);\n    let idx = [0, column];\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) < v) {\n        v = this.get(i, column);\n        idx[0] = i;\n      }\n    }\n    return idx;\n  }\n\n  diag() {\n    let min = Math.min(this.rows, this.columns);\n    let diag = [];\n    for (let i = 0; i < min; i++) {\n      diag.push(this.get(i, i));\n    }\n    return diag;\n  }\n\n  norm(type = 'frobenius') {\n    let result = 0;\n    if (type === 'max') {\n      return this.max();\n    } else if (type === 'frobenius') {\n      for (let i = 0; i < this.rows; i++) {\n        for (let j = 0; j < this.columns; j++) {\n          result = result + this.get(i, j) * this.get(i, j);\n        }\n      }\n      return Math.sqrt(result);\n    } else {\n      throw new RangeError(`unknown norm type: ${type}`);\n    }\n  }\n\n  cumulativeSum() {\n    let sum = 0;\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        sum += this.get(i, j);\n        this.set(i, j, sum);\n      }\n    }\n    return this;\n  }\n\n  dot(vector2) {\n    if (AbstractMatrix.isMatrix(vector2)) vector2 = vector2.to1DArray();\n    let vector1 = this.to1DArray();\n    if (vector1.length !== vector2.length) {\n      throw new RangeError('vectors do not have the same size');\n    }\n    let dot = 0;\n    for (let i = 0; i < vector1.length; i++) {\n      dot += vector1[i] * vector2[i];\n    }\n    return dot;\n  }\n\n  mmul(other) {\n    other = Matrix.checkMatrix(other);\n\n    let m = this.rows;\n    let n = this.columns;\n    let p = other.columns;\n\n    let result = new Matrix(m, p);\n\n    let Bcolj = new Float64Array(n);\n    for (let j = 0; j < p; j++) {\n      for (let k = 0; k < n; k++) {\n        Bcolj[k] = other.get(k, j);\n      }\n\n      for (let i = 0; i < m; i++) {\n        let s = 0;\n        for (let k = 0; k < n; k++) {\n          s += this.get(i, k) * Bcolj[k];\n        }\n\n        result.set(i, j, s);\n      }\n    }\n    return result;\n  }\n\n  strassen2x2(other) {\n    other = Matrix.checkMatrix(other);\n    let result = new Matrix(2, 2);\n    const a11 = this.get(0, 0);\n    const b11 = other.get(0, 0);\n    const a12 = this.get(0, 1);\n    const b12 = other.get(0, 1);\n    const a21 = this.get(1, 0);\n    const b21 = other.get(1, 0);\n    const a22 = this.get(1, 1);\n    const b22 = other.get(1, 1);\n\n    // Compute intermediate values.\n    const m1 = (a11 + a22) * (b11 + b22);\n    const m2 = (a21 + a22) * b11;\n    const m3 = a11 * (b12 - b22);\n    const m4 = a22 * (b21 - b11);\n    const m5 = (a11 + a12) * b22;\n    const m6 = (a21 - a11) * (b11 + b12);\n    const m7 = (a12 - a22) * (b21 + b22);\n\n    // Combine intermediate values into the output.\n    const c00 = m1 + m4 - m5 + m7;\n    const c01 = m3 + m5;\n    const c10 = m2 + m4;\n    const c11 = m1 - m2 + m3 + m6;\n\n    result.set(0, 0, c00);\n    result.set(0, 1, c01);\n    result.set(1, 0, c10);\n    result.set(1, 1, c11);\n    return result;\n  }\n\n  strassen3x3(other) {\n    other = Matrix.checkMatrix(other);\n    let result = new Matrix(3, 3);\n\n    const a00 = this.get(0, 0);\n    const a01 = this.get(0, 1);\n    const a02 = this.get(0, 2);\n    const a10 = this.get(1, 0);\n    const a11 = this.get(1, 1);\n    const a12 = this.get(1, 2);\n    const a20 = this.get(2, 0);\n    const a21 = this.get(2, 1);\n    const a22 = this.get(2, 2);\n\n    const b00 = other.get(0, 0);\n    const b01 = other.get(0, 1);\n    const b02 = other.get(0, 2);\n    const b10 = other.get(1, 0);\n    const b11 = other.get(1, 1);\n    const b12 = other.get(1, 2);\n    const b20 = other.get(2, 0);\n    const b21 = other.get(2, 1);\n    const b22 = other.get(2, 2);\n\n    const m1 = (a00 + a01 + a02 - a10 - a11 - a21 - a22) * b11;\n    const m2 = (a00 - a10) * (-b01 + b11);\n    const m3 = a11 * (-b00 + b01 + b10 - b11 - b12 - b20 + b22);\n    const m4 = (-a00 + a10 + a11) * (b00 - b01 + b11);\n    const m5 = (a10 + a11) * (-b00 + b01);\n    const m6 = a00 * b00;\n    const m7 = (-a00 + a20 + a21) * (b00 - b02 + b12);\n    const m8 = (-a00 + a20) * (b02 - b12);\n    const m9 = (a20 + a21) * (-b00 + b02);\n    const m10 = (a00 + a01 + a02 - a11 - a12 - a20 - a21) * b12;\n    const m11 = a21 * (-b00 + b02 + b10 - b11 - b12 - b20 + b21);\n    const m12 = (-a02 + a21 + a22) * (b11 + b20 - b21);\n    const m13 = (a02 - a22) * (b11 - b21);\n    const m14 = a02 * b20;\n    const m15 = (a21 + a22) * (-b20 + b21);\n    const m16 = (-a02 + a11 + a12) * (b12 + b20 - b22);\n    const m17 = (a02 - a12) * (b12 - b22);\n    const m18 = (a11 + a12) * (-b20 + b22);\n    const m19 = a01 * b10;\n    const m20 = a12 * b21;\n    const m21 = a10 * b02;\n    const m22 = a20 * b01;\n    const m23 = a22 * b22;\n\n    const c00 = m6 + m14 + m19;\n    const c01 = m1 + m4 + m5 + m6 + m12 + m14 + m15;\n    const c02 = m6 + m7 + m9 + m10 + m14 + m16 + m18;\n    const c10 = m2 + m3 + m4 + m6 + m14 + m16 + m17;\n    const c11 = m2 + m4 + m5 + m6 + m20;\n    const c12 = m14 + m16 + m17 + m18 + m21;\n    const c20 = m6 + m7 + m8 + m11 + m12 + m13 + m14;\n    const c21 = m12 + m13 + m14 + m15 + m22;\n    const c22 = m6 + m7 + m8 + m9 + m23;\n\n    result.set(0, 0, c00);\n    result.set(0, 1, c01);\n    result.set(0, 2, c02);\n    result.set(1, 0, c10);\n    result.set(1, 1, c11);\n    result.set(1, 2, c12);\n    result.set(2, 0, c20);\n    result.set(2, 1, c21);\n    result.set(2, 2, c22);\n    return result;\n  }\n\n  mmulStrassen(y) {\n    y = Matrix.checkMatrix(y);\n    let x = this.clone();\n    let r1 = x.rows;\n    let c1 = x.columns;\n    let r2 = y.rows;\n    let c2 = y.columns;\n    if (c1 !== r2) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        `Multiplying ${r1} x ${c1} and ${r2} x ${c2} matrix: dimensions do not match.`,\n      );\n    }\n\n    // Put a matrix into the top left of a matrix of zeros.\n    // `rows` and `cols` are the dimensions of the output matrix.\n    function embed(mat, rows, cols) {\n      let r = mat.rows;\n      let c = mat.columns;\n      if (r === rows && c === cols) {\n        return mat;\n      } else {\n        let resultat = AbstractMatrix.zeros(rows, cols);\n        resultat = resultat.setSubMatrix(mat, 0, 0);\n        return resultat;\n      }\n    }\n\n    // Make sure both matrices are the same size.\n    // This is exclusively for simplicity:\n    // this algorithm can be implemented with matrices of different sizes.\n\n    let r = Math.max(r1, r2);\n    let c = Math.max(c1, c2);\n    x = embed(x, r, c);\n    y = embed(y, r, c);\n\n    // Our recursive multiplication function.\n    function blockMult(a, b, rows, cols) {\n      // For small matrices, resort to naive multiplication.\n      if (rows <= 512 || cols <= 512) {\n        return a.mmul(b); // a is equivalent to this\n      }\n\n      // Apply dynamic padding.\n      if (rows % 2 === 1 && cols % 2 === 1) {\n        a = embed(a, rows + 1, cols + 1);\n        b = embed(b, rows + 1, cols + 1);\n      } else if (rows % 2 === 1) {\n        a = embed(a, rows + 1, cols);\n        b = embed(b, rows + 1, cols);\n      } else if (cols % 2 === 1) {\n        a = embed(a, rows, cols + 1);\n        b = embed(b, rows, cols + 1);\n      }\n\n      let halfRows = parseInt(a.rows / 2, 10);\n      let halfCols = parseInt(a.columns / 2, 10);\n      // Subdivide input matrices.\n      let a11 = a.subMatrix(0, halfRows - 1, 0, halfCols - 1);\n      let b11 = b.subMatrix(0, halfRows - 1, 0, halfCols - 1);\n\n      let a12 = a.subMatrix(0, halfRows - 1, halfCols, a.columns - 1);\n      let b12 = b.subMatrix(0, halfRows - 1, halfCols, b.columns - 1);\n\n      let a21 = a.subMatrix(halfRows, a.rows - 1, 0, halfCols - 1);\n      let b21 = b.subMatrix(halfRows, b.rows - 1, 0, halfCols - 1);\n\n      let a22 = a.subMatrix(halfRows, a.rows - 1, halfCols, a.columns - 1);\n      let b22 = b.subMatrix(halfRows, b.rows - 1, halfCols, b.columns - 1);\n\n      // Compute intermediate values.\n      let m1 = blockMult(\n        AbstractMatrix.add(a11, a22),\n        AbstractMatrix.add(b11, b22),\n        halfRows,\n        halfCols,\n      );\n      let m2 = blockMult(AbstractMatrix.add(a21, a22), b11, halfRows, halfCols);\n      let m3 = blockMult(a11, AbstractMatrix.sub(b12, b22), halfRows, halfCols);\n      let m4 = blockMult(a22, AbstractMatrix.sub(b21, b11), halfRows, halfCols);\n      let m5 = blockMult(AbstractMatrix.add(a11, a12), b22, halfRows, halfCols);\n      let m6 = blockMult(\n        AbstractMatrix.sub(a21, a11),\n        AbstractMatrix.add(b11, b12),\n        halfRows,\n        halfCols,\n      );\n      let m7 = blockMult(\n        AbstractMatrix.sub(a12, a22),\n        AbstractMatrix.add(b21, b22),\n        halfRows,\n        halfCols,\n      );\n\n      // Combine intermediate values into the output.\n      let c11 = AbstractMatrix.add(m1, m4);\n      c11.sub(m5);\n      c11.add(m7);\n      let c12 = AbstractMatrix.add(m3, m5);\n      let c21 = AbstractMatrix.add(m2, m4);\n      let c22 = AbstractMatrix.sub(m1, m2);\n      c22.add(m3);\n      c22.add(m6);\n\n      // Crop output to the desired size (undo dynamic padding).\n      let resultat = AbstractMatrix.zeros(2 * c11.rows, 2 * c11.columns);\n      resultat = resultat.setSubMatrix(c11, 0, 0);\n      resultat = resultat.setSubMatrix(c12, c11.rows, 0);\n      resultat = resultat.setSubMatrix(c21, 0, c11.columns);\n      resultat = resultat.setSubMatrix(c22, c11.rows, c11.columns);\n      return resultat.subMatrix(0, rows - 1, 0, cols - 1);\n    }\n    return blockMult(x, y, r, c);\n  }\n\n  scaleRows(options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { min = 0, max = 1 } = options;\n    if (!Number.isFinite(min)) throw new TypeError('min must be a number');\n    if (!Number.isFinite(max)) throw new TypeError('max must be a number');\n    if (min >= max) throw new RangeError('min must be smaller than max');\n    let newMatrix = new Matrix(this.rows, this.columns);\n    for (let i = 0; i < this.rows; i++) {\n      const row = this.getRow(i);\n      if (row.length > 0) {\n        rescale(row, { min, max, output: row });\n      }\n      newMatrix.setRow(i, row);\n    }\n    return newMatrix;\n  }\n\n  scaleColumns(options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { min = 0, max = 1 } = options;\n    if (!Number.isFinite(min)) throw new TypeError('min must be a number');\n    if (!Number.isFinite(max)) throw new TypeError('max must be a number');\n    if (min >= max) throw new RangeError('min must be smaller than max');\n    let newMatrix = new Matrix(this.rows, this.columns);\n    for (let i = 0; i < this.columns; i++) {\n      const column = this.getColumn(i);\n      if (column.length) {\n        rescale(column, {\n          min: min,\n          max: max,\n          output: column,\n        });\n      }\n      newMatrix.setColumn(i, column);\n    }\n    return newMatrix;\n  }\n\n  flipRows() {\n    const middle = Math.ceil(this.columns / 2);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < middle; j++) {\n        let first = this.get(i, j);\n        let last = this.get(i, this.columns - 1 - j);\n        this.set(i, j, last);\n        this.set(i, this.columns - 1 - j, first);\n      }\n    }\n    return this;\n  }\n\n  flipColumns() {\n    const middle = Math.ceil(this.rows / 2);\n    for (let j = 0; j < this.columns; j++) {\n      for (let i = 0; i < middle; i++) {\n        let first = this.get(i, j);\n        let last = this.get(this.rows - 1 - i, j);\n        this.set(i, j, last);\n        this.set(this.rows - 1 - i, j, first);\n      }\n    }\n    return this;\n  }\n\n  kroneckerProduct(other) {\n    other = Matrix.checkMatrix(other);\n\n    let m = this.rows;\n    let n = this.columns;\n    let p = other.rows;\n    let q = other.columns;\n\n    let result = new Matrix(m * p, n * q);\n    for (let i = 0; i < m; i++) {\n      for (let j = 0; j < n; j++) {\n        for (let k = 0; k < p; k++) {\n          for (let l = 0; l < q; l++) {\n            result.set(p * i + k, q * j + l, this.get(i, j) * other.get(k, l));\n          }\n        }\n      }\n    }\n    return result;\n  }\n\n  kroneckerSum(other) {\n    other = Matrix.checkMatrix(other);\n    if (!this.isSquare() || !other.isSquare()) {\n      throw new Error('Kronecker Sum needs two Square Matrices');\n    }\n    let m = this.rows;\n    let n = other.rows;\n    let AxI = this.kroneckerProduct(Matrix.eye(n, n));\n    let IxB = Matrix.eye(m, m).kroneckerProduct(other);\n    return AxI.add(IxB);\n  }\n\n  transpose() {\n    let result = new Matrix(this.columns, this.rows);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        result.set(j, i, this.get(i, j));\n      }\n    }\n    return result;\n  }\n\n  sortRows(compareFunction = compareNumbers) {\n    for (let i = 0; i < this.rows; i++) {\n      this.setRow(i, this.getRow(i).sort(compareFunction));\n    }\n    return this;\n  }\n\n  sortColumns(compareFunction = compareNumbers) {\n    for (let i = 0; i < this.columns; i++) {\n      this.setColumn(i, this.getColumn(i).sort(compareFunction));\n    }\n    return this;\n  }\n\n  subMatrix(startRow, endRow, startColumn, endColumn) {\n    checkRange(this, startRow, endRow, startColumn, endColumn);\n    let newMatrix = new Matrix(\n      endRow - startRow + 1,\n      endColumn - startColumn + 1,\n    );\n    for (let i = startRow; i <= endRow; i++) {\n      for (let j = startColumn; j <= endColumn; j++) {\n        newMatrix.set(i - startRow, j - startColumn, this.get(i, j));\n      }\n    }\n    return newMatrix;\n  }\n\n  subMatrixRow(indices, startColumn, endColumn) {\n    if (startColumn === undefined) startColumn = 0;\n    if (endColumn === undefined) endColumn = this.columns - 1;\n    if (\n      startColumn > endColumn ||\n      startColumn < 0 ||\n      startColumn >= this.columns ||\n      endColumn < 0 ||\n      endColumn >= this.columns\n    ) {\n      throw new RangeError('Argument out of range');\n    }\n\n    let newMatrix = new Matrix(indices.length, endColumn - startColumn + 1);\n    for (let i = 0; i < indices.length; i++) {\n      for (let j = startColumn; j <= endColumn; j++) {\n        if (indices[i] < 0 || indices[i] >= this.rows) {\n          throw new RangeError(`Row index out of range: ${indices[i]}`);\n        }\n        newMatrix.set(i, j - startColumn, this.get(indices[i], j));\n      }\n    }\n    return newMatrix;\n  }\n\n  subMatrixColumn(indices, startRow, endRow) {\n    if (startRow === undefined) startRow = 0;\n    if (endRow === undefined) endRow = this.rows - 1;\n    if (\n      startRow > endRow ||\n      startRow < 0 ||\n      startRow >= this.rows ||\n      endRow < 0 ||\n      endRow >= this.rows\n    ) {\n      throw new RangeError('Argument out of range');\n    }\n\n    let newMatrix = new Matrix(endRow - startRow + 1, indices.length);\n    for (let i = 0; i < indices.length; i++) {\n      for (let j = startRow; j <= endRow; j++) {\n        if (indices[i] < 0 || indices[i] >= this.columns) {\n          throw new RangeError(`Column index out of range: ${indices[i]}`);\n        }\n        newMatrix.set(j - startRow, i, this.get(j, indices[i]));\n      }\n    }\n    return newMatrix;\n  }\n\n  setSubMatrix(matrix, startRow, startColumn) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (matrix.isEmpty()) {\n      return this;\n    }\n    let endRow = startRow + matrix.rows - 1;\n    let endColumn = startColumn + matrix.columns - 1;\n    checkRange(this, startRow, endRow, startColumn, endColumn);\n    for (let i = 0; i < matrix.rows; i++) {\n      for (let j = 0; j < matrix.columns; j++) {\n        this.set(startRow + i, startColumn + j, matrix.get(i, j));\n      }\n    }\n    return this;\n  }\n\n  selection(rowIndices, columnIndices) {\n    let indices = checkIndices(this, rowIndices, columnIndices);\n    let newMatrix = new Matrix(rowIndices.length, columnIndices.length);\n    for (let i = 0; i < indices.row.length; i++) {\n      let rowIndex = indices.row[i];\n      for (let j = 0; j < indices.column.length; j++) {\n        let columnIndex = indices.column[j];\n        newMatrix.set(i, j, this.get(rowIndex, columnIndex));\n      }\n    }\n    return newMatrix;\n  }\n\n  trace() {\n    let min = Math.min(this.rows, this.columns);\n    let trace = 0;\n    for (let i = 0; i < min; i++) {\n      trace += this.get(i, i);\n    }\n    return trace;\n  }\n\n  clone() {\n    let newMatrix = new Matrix(this.rows, this.columns);\n    for (let row = 0; row < this.rows; row++) {\n      for (let column = 0; column < this.columns; column++) {\n        newMatrix.set(row, column, this.get(row, column));\n      }\n    }\n    return newMatrix;\n  }\n\n  sum(by) {\n    switch (by) {\n      case 'row':\n        return sumByRow(this);\n      case 'column':\n        return sumByColumn(this);\n      case undefined:\n        return sumAll(this);\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  product(by) {\n    switch (by) {\n      case 'row':\n        return productByRow(this);\n      case 'column':\n        return productByColumn(this);\n      case undefined:\n        return productAll(this);\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  mean(by) {\n    const sum = this.sum(by);\n    switch (by) {\n      case 'row': {\n        for (let i = 0; i < this.rows; i++) {\n          sum[i] /= this.columns;\n        }\n        return sum;\n      }\n      case 'column': {\n        for (let i = 0; i < this.columns; i++) {\n          sum[i] /= this.rows;\n        }\n        return sum;\n      }\n      case undefined:\n        return sum / this.size;\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  variance(by, options = {}) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { unbiased = true, mean = this.mean(by) } = options;\n    if (typeof unbiased !== 'boolean') {\n      throw new TypeError('unbiased must be a boolean');\n    }\n    switch (by) {\n      case 'row': {\n        if (!Array.isArray(mean)) {\n          throw new TypeError('mean must be an array');\n        }\n        return varianceByRow(this, unbiased, mean);\n      }\n      case 'column': {\n        if (!Array.isArray(mean)) {\n          throw new TypeError('mean must be an array');\n        }\n        return varianceByColumn(this, unbiased, mean);\n      }\n      case undefined: {\n        if (typeof mean !== 'number') {\n          throw new TypeError('mean must be a number');\n        }\n        return varianceAll(this, unbiased, mean);\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  standardDeviation(by, options) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    const variance = this.variance(by, options);\n    if (by === undefined) {\n      return Math.sqrt(variance);\n    } else {\n      for (let i = 0; i < variance.length; i++) {\n        variance[i] = Math.sqrt(variance[i]);\n      }\n      return variance;\n    }\n  }\n\n  center(by, options = {}) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { center = this.mean(by) } = options;\n    switch (by) {\n      case 'row': {\n        if (!Array.isArray(center)) {\n          throw new TypeError('center must be an array');\n        }\n        centerByRow(this, center);\n        return this;\n      }\n      case 'column': {\n        if (!Array.isArray(center)) {\n          throw new TypeError('center must be an array');\n        }\n        centerByColumn(this, center);\n        return this;\n      }\n      case undefined: {\n        if (typeof center !== 'number') {\n          throw new TypeError('center must be a number');\n        }\n        centerAll(this, center);\n        return this;\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  scale(by, options = {}) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    let scale = options.scale;\n    switch (by) {\n      case 'row': {\n        if (scale === undefined) {\n          scale = getScaleByRow(this);\n        } else if (!Array.isArray(scale)) {\n          throw new TypeError('scale must be an array');\n        }\n        scaleByRow(this, scale);\n        return this;\n      }\n      case 'column': {\n        if (scale === undefined) {\n          scale = getScaleByColumn(this);\n        } else if (!Array.isArray(scale)) {\n          throw new TypeError('scale must be an array');\n        }\n        scaleByColumn(this, scale);\n        return this;\n      }\n      case undefined: {\n        if (scale === undefined) {\n          scale = getScaleAll(this);\n        } else if (typeof scale !== 'number') {\n          throw new TypeError('scale must be a number');\n        }\n        scaleAll(this, scale);\n        return this;\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  toString(options) {\n    return inspectMatrixWithOptions(this, options);\n  }\n}\n\nAbstractMatrix.prototype.klass = 'Matrix';\nif (typeof Symbol !== 'undefined') {\n  AbstractMatrix.prototype[\n    Symbol.for('nodejs.util.inspect.custom')\n  ] = inspectMatrix;\n}\n\nfunction compareNumbers(a, b) {\n  return a - b;\n}\n\n// Synonyms\nAbstractMatrix.random = AbstractMatrix.rand;\nAbstractMatrix.randomInt = AbstractMatrix.randInt;\nAbstractMatrix.diagonal = AbstractMatrix.diag;\nAbstractMatrix.prototype.diagonal = AbstractMatrix.prototype.diag;\nAbstractMatrix.identity = AbstractMatrix.eye;\nAbstractMatrix.prototype.negate = AbstractMatrix.prototype.neg;\nAbstractMatrix.prototype.tensorProduct =\n  AbstractMatrix.prototype.kroneckerProduct;\n\nexport default class Matrix extends AbstractMatrix {\n  constructor(nRows, nColumns) {\n    super();\n    if (Matrix.isMatrix(nRows)) {\n      // eslint-disable-next-line no-constructor-return\n      return nRows.clone();\n    } else if (Number.isInteger(nRows) && nRows >= 0) {\n      // Create an empty matrix\n      this.data = [];\n      if (Number.isInteger(nColumns) && nColumns >= 0) {\n        for (let i = 0; i < nRows; i++) {\n          this.data.push(new Float64Array(nColumns));\n        }\n      } else {\n        throw new TypeError('nColumns must be a positive integer');\n      }\n    } else if (Array.isArray(nRows)) {\n      // Copy the values from the 2D array\n      const arrayData = nRows;\n      nRows = arrayData.length;\n      nColumns = nRows ? arrayData[0].length : 0;\n      if (typeof nColumns !== 'number') {\n        throw new TypeError(\n          'Data must be a 2D array with at least one element',\n        );\n      }\n      this.data = [];\n      for (let i = 0; i < nRows; i++) {\n        if (arrayData[i].length !== nColumns) {\n          throw new RangeError('Inconsistent array dimensions');\n        }\n        this.data.push(Float64Array.from(arrayData[i]));\n      }\n    } else {\n      throw new TypeError(\n        'First argument must be a positive number or an array',\n      );\n    }\n    this.rows = nRows;\n    this.columns = nColumns;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.data[rowIndex][columnIndex] = value;\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.data[rowIndex][columnIndex];\n  }\n\n  removeRow(index) {\n    checkRowIndex(this, index);\n    this.data.splice(index, 1);\n    this.rows -= 1;\n    return this;\n  }\n\n  addRow(index, array) {\n    if (array === undefined) {\n      array = index;\n      index = this.rows;\n    }\n    checkRowIndex(this, index, true);\n    array = Float64Array.from(checkRowVector(this, array));\n    this.data.splice(index, 0, array);\n    this.rows += 1;\n    return this;\n  }\n\n  removeColumn(index) {\n    checkColumnIndex(this, index);\n    for (let i = 0; i < this.rows; i++) {\n      const newRow = new Float64Array(this.columns - 1);\n      for (let j = 0; j < index; j++) {\n        newRow[j] = this.data[i][j];\n      }\n      for (let j = index + 1; j < this.columns; j++) {\n        newRow[j - 1] = this.data[i][j];\n      }\n      this.data[i] = newRow;\n    }\n    this.columns -= 1;\n    return this;\n  }\n\n  addColumn(index, array) {\n    if (typeof array === 'undefined') {\n      array = index;\n      index = this.columns;\n    }\n    checkColumnIndex(this, index, true);\n    array = checkColumnVector(this, array);\n    for (let i = 0; i < this.rows; i++) {\n      const newRow = new Float64Array(this.columns + 1);\n      let j = 0;\n      for (; j < index; j++) {\n        newRow[j] = this.data[i][j];\n      }\n      newRow[j++] = array[i];\n      for (; j < this.columns + 1; j++) {\n        newRow[j] = this.data[i][j - 1];\n      }\n      this.data[i] = newRow;\n    }\n    this.columns += 1;\n    return this;\n  }\n}\n\ninstallMathOperations(AbstractMatrix, Matrix);\n","import { AbstractMatrix } from '../matrix';\n\nexport default class BaseView extends AbstractMatrix {\n  constructor(matrix, rows, columns) {\n    super();\n    this.matrix = matrix;\n    this.rows = rows;\n    this.columns = columns;\n  }\n}\n","import BaseView from './base';\n\nexport default class MatrixTransposeView extends BaseView {\n  constructor(matrix) {\n    super(matrix, matrix.columns, matrix.rows);\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(columnIndex, rowIndex, value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(columnIndex, rowIndex);\n  }\n}\n","import { AbstractMatrix } from '../matrix';\n\nexport default class WrapperMatrix2D extends AbstractMatrix {\n  constructor(data) {\n    super();\n    this.data = data;\n    this.rows = data.length;\n    this.columns = data[0].length;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.data[rowIndex][columnIndex] = value;\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.data[rowIndex][columnIndex];\n  }\n}\n","import Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\n\nexport default class LuDecomposition {\n  constructor(matrix) {\n    matrix = WrapperMatrix2D.checkMatrix(matrix);\n\n    let lu = matrix.clone();\n    let rows = lu.rows;\n    let columns = lu.columns;\n    let pivotVector = new Float64Array(rows);\n    let pivotSign = 1;\n    let i, j, k, p, s, t, v;\n    let LUcolj, kmax;\n\n    for (i = 0; i < rows; i++) {\n      pivotVector[i] = i;\n    }\n\n    LUcolj = new Float64Array(rows);\n\n    for (j = 0; j < columns; j++) {\n      for (i = 0; i < rows; i++) {\n        LUcolj[i] = lu.get(i, j);\n      }\n\n      for (i = 0; i < rows; i++) {\n        kmax = Math.min(i, j);\n        s = 0;\n        for (k = 0; k < kmax; k++) {\n          s += lu.get(i, k) * LUcolj[k];\n        }\n        LUcolj[i] -= s;\n        lu.set(i, j, LUcolj[i]);\n      }\n\n      p = j;\n      for (i = j + 1; i < rows; i++) {\n        if (Math.abs(LUcolj[i]) > Math.abs(LUcolj[p])) {\n          p = i;\n        }\n      }\n\n      if (p !== j) {\n        for (k = 0; k < columns; k++) {\n          t = lu.get(p, k);\n          lu.set(p, k, lu.get(j, k));\n          lu.set(j, k, t);\n        }\n\n        v = pivotVector[p];\n        pivotVector[p] = pivotVector[j];\n        pivotVector[j] = v;\n\n        pivotSign = -pivotSign;\n      }\n\n      if (j < rows && lu.get(j, j) !== 0) {\n        for (i = j + 1; i < rows; i++) {\n          lu.set(i, j, lu.get(i, j) / lu.get(j, j));\n        }\n      }\n    }\n\n    this.LU = lu;\n    this.pivotVector = pivotVector;\n    this.pivotSign = pivotSign;\n  }\n\n  isSingular() {\n    let data = this.LU;\n    let col = data.columns;\n    for (let j = 0; j < col; j++) {\n      if (data.get(j, j) === 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  solve(value) {\n    value = Matrix.checkMatrix(value);\n\n    let lu = this.LU;\n    let rows = lu.rows;\n\n    if (rows !== value.rows) {\n      throw new Error('Invalid matrix dimensions');\n    }\n    if (this.isSingular()) {\n      throw new Error('LU matrix is singular');\n    }\n\n    let count = value.columns;\n    let X = value.subMatrixRow(this.pivotVector, 0, count - 1);\n    let columns = lu.columns;\n    let i, j, k;\n\n    for (k = 0; k < columns; k++) {\n      for (i = k + 1; i < columns; i++) {\n        for (j = 0; j < count; j++) {\n          X.set(i, j, X.get(i, j) - X.get(k, j) * lu.get(i, k));\n        }\n      }\n    }\n    for (k = columns - 1; k >= 0; k--) {\n      for (j = 0; j < count; j++) {\n        X.set(k, j, X.get(k, j) / lu.get(k, k));\n      }\n      for (i = 0; i < k; i++) {\n        for (j = 0; j < count; j++) {\n          X.set(i, j, X.get(i, j) - X.get(k, j) * lu.get(i, k));\n        }\n      }\n    }\n    return X;\n  }\n\n  get determinant() {\n    let data = this.LU;\n    if (!data.isSquare()) {\n      throw new Error('Matrix must be square');\n    }\n    let determinant = this.pivotSign;\n    let col = data.columns;\n    for (let j = 0; j < col; j++) {\n      determinant *= data.get(j, j);\n    }\n    return determinant;\n  }\n\n  get lowerTriangularMatrix() {\n    let data = this.LU;\n    let rows = data.rows;\n    let columns = data.columns;\n    let X = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        if (i > j) {\n          X.set(i, j, data.get(i, j));\n        } else if (i === j) {\n          X.set(i, j, 1);\n        } else {\n          X.set(i, j, 0);\n        }\n      }\n    }\n    return X;\n  }\n\n  get upperTriangularMatrix() {\n    let data = this.LU;\n    let rows = data.rows;\n    let columns = data.columns;\n    let X = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        if (i <= j) {\n          X.set(i, j, data.get(i, j));\n        } else {\n          X.set(i, j, 0);\n        }\n      }\n    }\n    return X;\n  }\n\n  get pivotPermutationVector() {\n    return Array.from(this.pivotVector);\n  }\n}\n","export function hypotenuse(a, b) {\n  let r = 0;\n  if (Math.abs(a) > Math.abs(b)) {\n    r = b / a;\n    return Math.abs(a) * Math.sqrt(1 + r * r);\n  }\n  if (b !== 0) {\n    r = a / b;\n    return Math.abs(b) * Math.sqrt(1 + r * r);\n  }\n  return 0;\n}\n","import Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\n\nimport { hypotenuse } from './util';\n\nexport default class QrDecomposition {\n  constructor(value) {\n    value = WrapperMatrix2D.checkMatrix(value);\n\n    let qr = value.clone();\n    let m = value.rows;\n    let n = value.columns;\n    let rdiag = new Float64Array(n);\n    let i, j, k, s;\n\n    for (k = 0; k < n; k++) {\n      let nrm = 0;\n      for (i = k; i < m; i++) {\n        nrm = hypotenuse(nrm, qr.get(i, k));\n      }\n      if (nrm !== 0) {\n        if (qr.get(k, k) < 0) {\n          nrm = -nrm;\n        }\n        for (i = k; i < m; i++) {\n          qr.set(i, k, qr.get(i, k) / nrm);\n        }\n        qr.set(k, k, qr.get(k, k) + 1);\n        for (j = k + 1; j < n; j++) {\n          s = 0;\n          for (i = k; i < m; i++) {\n            s += qr.get(i, k) * qr.get(i, j);\n          }\n          s = -s / qr.get(k, k);\n          for (i = k; i < m; i++) {\n            qr.set(i, j, qr.get(i, j) + s * qr.get(i, k));\n          }\n        }\n      }\n      rdiag[k] = -nrm;\n    }\n\n    this.QR = qr;\n    this.Rdiag = rdiag;\n  }\n\n  solve(value) {\n    value = Matrix.checkMatrix(value);\n\n    let qr = this.QR;\n    let m = qr.rows;\n\n    if (value.rows !== m) {\n      throw new Error('Matrix row dimensions must agree');\n    }\n    if (!this.isFullRank()) {\n      throw new Error('Matrix is rank deficient');\n    }\n\n    let count = value.columns;\n    let X = value.clone();\n    let n = qr.columns;\n    let i, j, k, s;\n\n    for (k = 0; k < n; k++) {\n      for (j = 0; j < count; j++) {\n        s = 0;\n        for (i = k; i < m; i++) {\n          s += qr.get(i, k) * X.get(i, j);\n        }\n        s = -s / qr.get(k, k);\n        for (i = k; i < m; i++) {\n          X.set(i, j, X.get(i, j) + s * qr.get(i, k));\n        }\n      }\n    }\n    for (k = n - 1; k >= 0; k--) {\n      for (j = 0; j < count; j++) {\n        X.set(k, j, X.get(k, j) / this.Rdiag[k]);\n      }\n      for (i = 0; i < k; i++) {\n        for (j = 0; j < count; j++) {\n          X.set(i, j, X.get(i, j) - X.get(k, j) * qr.get(i, k));\n        }\n      }\n    }\n\n    return X.subMatrix(0, n - 1, 0, count - 1);\n  }\n\n  isFullRank() {\n    let columns = this.QR.columns;\n    for (let i = 0; i < columns; i++) {\n      if (this.Rdiag[i] === 0) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  get upperTriangularMatrix() {\n    let qr = this.QR;\n    let n = qr.columns;\n    let X = new Matrix(n, n);\n    let i, j;\n    for (i = 0; i < n; i++) {\n      for (j = 0; j < n; j++) {\n        if (i < j) {\n          X.set(i, j, qr.get(i, j));\n        } else if (i === j) {\n          X.set(i, j, this.Rdiag[i]);\n        } else {\n          X.set(i, j, 0);\n        }\n      }\n    }\n    return X;\n  }\n\n  get orthogonalMatrix() {\n    let qr = this.QR;\n    let rows = qr.rows;\n    let columns = qr.columns;\n    let X = new Matrix(rows, columns);\n    let i, j, k, s;\n\n    for (k = columns - 1; k >= 0; k--) {\n      for (i = 0; i < rows; i++) {\n        X.set(i, k, 0);\n      }\n      X.set(k, k, 1);\n      for (j = k; j < columns; j++) {\n        if (qr.get(k, k) !== 0) {\n          s = 0;\n          for (i = k; i < rows; i++) {\n            s += qr.get(i, k) * X.get(i, j);\n          }\n\n          s = -s / qr.get(k, k);\n\n          for (i = k; i < rows; i++) {\n            X.set(i, j, X.get(i, j) + s * qr.get(i, k));\n          }\n        }\n      }\n    }\n    return X;\n  }\n}\n","import Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\n\nimport { hypotenuse } from './util';\n\nexport default class SingularValueDecomposition {\n  constructor(value, options = {}) {\n    value = WrapperMatrix2D.checkMatrix(value);\n\n    if (value.isEmpty()) {\n      throw new Error('Matrix must be non-empty');\n    }\n\n    let m = value.rows;\n    let n = value.columns;\n\n    const {\n      computeLeftSingularVectors = true,\n      computeRightSingularVectors = true,\n      autoTranspose = false,\n    } = options;\n\n    let wantu = Boolean(computeLeftSingularVectors);\n    let wantv = Boolean(computeRightSingularVectors);\n\n    let swapped = false;\n    let a;\n    if (m < n) {\n      if (!autoTranspose) {\n        a = value.clone();\n        // eslint-disable-next-line no-console\n        console.warn(\n          'Computing SVD on a matrix with more columns than rows. Consider enabling autoTranspose',\n        );\n      } else {\n        a = value.transpose();\n        m = a.rows;\n        n = a.columns;\n        swapped = true;\n        let aux = wantu;\n        wantu = wantv;\n        wantv = aux;\n      }\n    } else {\n      a = value.clone();\n    }\n\n    let nu = Math.min(m, n);\n    let ni = Math.min(m + 1, n);\n    let s = new Float64Array(ni);\n    let U = new Matrix(m, nu);\n    let V = new Matrix(n, n);\n\n    let e = new Float64Array(n);\n    let work = new Float64Array(m);\n\n    let si = new Float64Array(ni);\n    for (let i = 0; i < ni; i++) si[i] = i;\n\n    let nct = Math.min(m - 1, n);\n    let nrt = Math.max(0, Math.min(n - 2, m));\n    let mrc = Math.max(nct, nrt);\n\n    for (let k = 0; k < mrc; k++) {\n      if (k < nct) {\n        s[k] = 0;\n        for (let i = k; i < m; i++) {\n          s[k] = hypotenuse(s[k], a.get(i, k));\n        }\n        if (s[k] !== 0) {\n          if (a.get(k, k) < 0) {\n            s[k] = -s[k];\n          }\n          for (let i = k; i < m; i++) {\n            a.set(i, k, a.get(i, k) / s[k]);\n          }\n          a.set(k, k, a.get(k, k) + 1);\n        }\n        s[k] = -s[k];\n      }\n\n      for (let j = k + 1; j < n; j++) {\n        if (k < nct && s[k] !== 0) {\n          let t = 0;\n          for (let i = k; i < m; i++) {\n            t += a.get(i, k) * a.get(i, j);\n          }\n          t = -t / a.get(k, k);\n          for (let i = k; i < m; i++) {\n            a.set(i, j, a.get(i, j) + t * a.get(i, k));\n          }\n        }\n        e[j] = a.get(k, j);\n      }\n\n      if (wantu && k < nct) {\n        for (let i = k; i < m; i++) {\n          U.set(i, k, a.get(i, k));\n        }\n      }\n\n      if (k < nrt) {\n        e[k] = 0;\n        for (let i = k + 1; i < n; i++) {\n          e[k] = hypotenuse(e[k], e[i]);\n        }\n        if (e[k] !== 0) {\n          if (e[k + 1] < 0) {\n            e[k] = 0 - e[k];\n          }\n          for (let i = k + 1; i < n; i++) {\n            e[i] /= e[k];\n          }\n          e[k + 1] += 1;\n        }\n        e[k] = -e[k];\n        if (k + 1 < m && e[k] !== 0) {\n          for (let i = k + 1; i < m; i++) {\n            work[i] = 0;\n          }\n          for (let i = k + 1; i < m; i++) {\n            for (let j = k + 1; j < n; j++) {\n              work[i] += e[j] * a.get(i, j);\n            }\n          }\n          for (let j = k + 1; j < n; j++) {\n            let t = -e[j] / e[k + 1];\n            for (let i = k + 1; i < m; i++) {\n              a.set(i, j, a.get(i, j) + t * work[i]);\n            }\n          }\n        }\n        if (wantv) {\n          for (let i = k + 1; i < n; i++) {\n            V.set(i, k, e[i]);\n          }\n        }\n      }\n    }\n\n    let p = Math.min(n, m + 1);\n    if (nct < n) {\n      s[nct] = a.get(nct, nct);\n    }\n    if (m < p) {\n      s[p - 1] = 0;\n    }\n    if (nrt + 1 < p) {\n      e[nrt] = a.get(nrt, p - 1);\n    }\n    e[p - 1] = 0;\n\n    if (wantu) {\n      for (let j = nct; j < nu; j++) {\n        for (let i = 0; i < m; i++) {\n          U.set(i, j, 0);\n        }\n        U.set(j, j, 1);\n      }\n      for (let k = nct - 1; k >= 0; k--) {\n        if (s[k] !== 0) {\n          for (let j = k + 1; j < nu; j++) {\n            let t = 0;\n            for (let i = k; i < m; i++) {\n              t += U.get(i, k) * U.get(i, j);\n            }\n            t = -t / U.get(k, k);\n            for (let i = k; i < m; i++) {\n              U.set(i, j, U.get(i, j) + t * U.get(i, k));\n            }\n          }\n          for (let i = k; i < m; i++) {\n            U.set(i, k, -U.get(i, k));\n          }\n          U.set(k, k, 1 + U.get(k, k));\n          for (let i = 0; i < k - 1; i++) {\n            U.set(i, k, 0);\n          }\n        } else {\n          for (let i = 0; i < m; i++) {\n            U.set(i, k, 0);\n          }\n          U.set(k, k, 1);\n        }\n      }\n    }\n\n    if (wantv) {\n      for (let k = n - 1; k >= 0; k--) {\n        if (k < nrt && e[k] !== 0) {\n          for (let j = k + 1; j < n; j++) {\n            let t = 0;\n            for (let i = k + 1; i < n; i++) {\n              t += V.get(i, k) * V.get(i, j);\n            }\n            t = -t / V.get(k + 1, k);\n            for (let i = k + 1; i < n; i++) {\n              V.set(i, j, V.get(i, j) + t * V.get(i, k));\n            }\n          }\n        }\n        for (let i = 0; i < n; i++) {\n          V.set(i, k, 0);\n        }\n        V.set(k, k, 1);\n      }\n    }\n\n    let pp = p - 1;\n    let iter = 0;\n    let eps = Number.EPSILON;\n    while (p > 0) {\n      let k, kase;\n      for (k = p - 2; k >= -1; k--) {\n        if (k === -1) {\n          break;\n        }\n        const alpha =\n          Number.MIN_VALUE + eps * Math.abs(s[k] + Math.abs(s[k + 1]));\n        if (Math.abs(e[k]) <= alpha || Number.isNaN(e[k])) {\n          e[k] = 0;\n          break;\n        }\n      }\n      if (k === p - 2) {\n        kase = 4;\n      } else {\n        let ks;\n        for (ks = p - 1; ks >= k; ks--) {\n          if (ks === k) {\n            break;\n          }\n          let t =\n            (ks !== p ? Math.abs(e[ks]) : 0) +\n            (ks !== k + 1 ? Math.abs(e[ks - 1]) : 0);\n          if (Math.abs(s[ks]) <= eps * t) {\n            s[ks] = 0;\n            break;\n          }\n        }\n        if (ks === k) {\n          kase = 3;\n        } else if (ks === p - 1) {\n          kase = 1;\n        } else {\n          kase = 2;\n          k = ks;\n        }\n      }\n\n      k++;\n\n      switch (kase) {\n        case 1: {\n          let f = e[p - 2];\n          e[p - 2] = 0;\n          for (let j = p - 2; j >= k; j--) {\n            let t = hypotenuse(s[j], f);\n            let cs = s[j] / t;\n            let sn = f / t;\n            s[j] = t;\n            if (j !== k) {\n              f = -sn * e[j - 1];\n              e[j - 1] = cs * e[j - 1];\n            }\n            if (wantv) {\n              for (let i = 0; i < n; i++) {\n                t = cs * V.get(i, j) + sn * V.get(i, p - 1);\n                V.set(i, p - 1, -sn * V.get(i, j) + cs * V.get(i, p - 1));\n                V.set(i, j, t);\n              }\n            }\n          }\n          break;\n        }\n        case 2: {\n          let f = e[k - 1];\n          e[k - 1] = 0;\n          for (let j = k; j < p; j++) {\n            let t = hypotenuse(s[j], f);\n            let cs = s[j] / t;\n            let sn = f / t;\n            s[j] = t;\n            f = -sn * e[j];\n            e[j] = cs * e[j];\n            if (wantu) {\n              for (let i = 0; i < m; i++) {\n                t = cs * U.get(i, j) + sn * U.get(i, k - 1);\n                U.set(i, k - 1, -sn * U.get(i, j) + cs * U.get(i, k - 1));\n                U.set(i, j, t);\n              }\n            }\n          }\n          break;\n        }\n        case 3: {\n          const scale = Math.max(\n            Math.abs(s[p - 1]),\n            Math.abs(s[p - 2]),\n            Math.abs(e[p - 2]),\n            Math.abs(s[k]),\n            Math.abs(e[k]),\n          );\n          const sp = s[p - 1] / scale;\n          const spm1 = s[p - 2] / scale;\n          const epm1 = e[p - 2] / scale;\n          const sk = s[k] / scale;\n          const ek = e[k] / scale;\n          const b = ((spm1 + sp) * (spm1 - sp) + epm1 * epm1) / 2;\n          const c = sp * epm1 * (sp * epm1);\n          let shift = 0;\n          if (b !== 0 || c !== 0) {\n            if (b < 0) {\n              shift = 0 - Math.sqrt(b * b + c);\n            } else {\n              shift = Math.sqrt(b * b + c);\n            }\n            shift = c / (b + shift);\n          }\n          let f = (sk + sp) * (sk - sp) + shift;\n          let g = sk * ek;\n          for (let j = k; j < p - 1; j++) {\n            let t = hypotenuse(f, g);\n            if (t === 0) t = Number.MIN_VALUE;\n            let cs = f / t;\n            let sn = g / t;\n            if (j !== k) {\n              e[j - 1] = t;\n            }\n            f = cs * s[j] + sn * e[j];\n            e[j] = cs * e[j] - sn * s[j];\n            g = sn * s[j + 1];\n            s[j + 1] = cs * s[j + 1];\n            if (wantv) {\n              for (let i = 0; i < n; i++) {\n                t = cs * V.get(i, j) + sn * V.get(i, j + 1);\n                V.set(i, j + 1, -sn * V.get(i, j) + cs * V.get(i, j + 1));\n                V.set(i, j, t);\n              }\n            }\n            t = hypotenuse(f, g);\n            if (t === 0) t = Number.MIN_VALUE;\n            cs = f / t;\n            sn = g / t;\n            s[j] = t;\n            f = cs * e[j] + sn * s[j + 1];\n            s[j + 1] = -sn * e[j] + cs * s[j + 1];\n            g = sn * e[j + 1];\n            e[j + 1] = cs * e[j + 1];\n            if (wantu && j < m - 1) {\n              for (let i = 0; i < m; i++) {\n                t = cs * U.get(i, j) + sn * U.get(i, j + 1);\n                U.set(i, j + 1, -sn * U.get(i, j) + cs * U.get(i, j + 1));\n                U.set(i, j, t);\n              }\n            }\n          }\n          e[p - 2] = f;\n          iter = iter + 1;\n          break;\n        }\n        case 4: {\n          if (s[k] <= 0) {\n            s[k] = s[k] < 0 ? -s[k] : 0;\n            if (wantv) {\n              for (let i = 0; i <= pp; i++) {\n                V.set(i, k, -V.get(i, k));\n              }\n            }\n          }\n          while (k < pp) {\n            if (s[k] >= s[k + 1]) {\n              break;\n            }\n            let t = s[k];\n            s[k] = s[k + 1];\n            s[k + 1] = t;\n            if (wantv && k < n - 1) {\n              for (let i = 0; i < n; i++) {\n                t = V.get(i, k + 1);\n                V.set(i, k + 1, V.get(i, k));\n                V.set(i, k, t);\n              }\n            }\n            if (wantu && k < m - 1) {\n              for (let i = 0; i < m; i++) {\n                t = U.get(i, k + 1);\n                U.set(i, k + 1, U.get(i, k));\n                U.set(i, k, t);\n              }\n            }\n            k++;\n          }\n          iter = 0;\n          p--;\n          break;\n        }\n        // no default\n      }\n    }\n\n    if (swapped) {\n      let tmp = V;\n      V = U;\n      U = tmp;\n    }\n\n    this.m = m;\n    this.n = n;\n    this.s = s;\n    this.U = U;\n    this.V = V;\n  }\n\n  solve(value) {\n    let Y = value;\n    let e = this.threshold;\n    let scols = this.s.length;\n    let Ls = Matrix.zeros(scols, scols);\n\n    for (let i = 0; i < scols; i++) {\n      if (Math.abs(this.s[i]) <= e) {\n        Ls.set(i, i, 0);\n      } else {\n        Ls.set(i, i, 1 / this.s[i]);\n      }\n    }\n\n    let U = this.U;\n    let V = this.rightSingularVectors;\n\n    let VL = V.mmul(Ls);\n    let vrows = V.rows;\n    let urows = U.rows;\n    let VLU = Matrix.zeros(vrows, urows);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < urows; j++) {\n        let sum = 0;\n        for (let k = 0; k < scols; k++) {\n          sum += VL.get(i, k) * U.get(j, k);\n        }\n        VLU.set(i, j, sum);\n      }\n    }\n\n    return VLU.mmul(Y);\n  }\n\n  solveForDiagonal(value) {\n    return this.solve(Matrix.diag(value));\n  }\n\n  inverse() {\n    let V = this.V;\n    let e = this.threshold;\n    let vrows = V.rows;\n    let vcols = V.columns;\n    let X = new Matrix(vrows, this.s.length);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < vcols; j++) {\n        if (Math.abs(this.s[j]) > e) {\n          X.set(i, j, V.get(i, j) / this.s[j]);\n        }\n      }\n    }\n\n    let U = this.U;\n\n    let urows = U.rows;\n    let ucols = U.columns;\n    let Y = new Matrix(vrows, urows);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < urows; j++) {\n        let sum = 0;\n        for (let k = 0; k < ucols; k++) {\n          sum += X.get(i, k) * U.get(j, k);\n        }\n        Y.set(i, j, sum);\n      }\n    }\n\n    return Y;\n  }\n\n  get condition() {\n    return this.s[0] / this.s[Math.min(this.m, this.n) - 1];\n  }\n\n  get norm2() {\n    return this.s[0];\n  }\n\n  get rank() {\n    let tol = Math.max(this.m, this.n) * this.s[0] * Number.EPSILON;\n    let r = 0;\n    let s = this.s;\n    for (let i = 0, ii = s.length; i < ii; i++) {\n      if (s[i] > tol) {\n        r++;\n      }\n    }\n    return r;\n  }\n\n  get diagonal() {\n    return Array.from(this.s);\n  }\n\n  get threshold() {\n    return (Number.EPSILON / 2) * Math.max(this.m, this.n) * this.s[0];\n  }\n\n  get leftSingularVectors() {\n    return this.U;\n  }\n\n  get rightSingularVectors() {\n    return this.V;\n  }\n\n  get diagonalMatrix() {\n    return Matrix.diag(this.s);\n  }\n}\n","import LuDecomposition from './dc/lu';\nimport QrDecomposition from './dc/qr';\nimport SingularValueDecomposition from './dc/svd';\nimport Matrix from './matrix';\nimport WrapperMatrix2D from './wrap/WrapperMatrix2D';\n\nexport function inverse(matrix, useSVD = false) {\n  matrix = WrapperMatrix2D.checkMatrix(matrix);\n  if (useSVD) {\n    return new SingularValueDecomposition(matrix).inverse();\n  } else {\n    return solve(matrix, Matrix.eye(matrix.rows));\n  }\n}\n\nexport function solve(leftHandSide, rightHandSide, useSVD = false) {\n  leftHandSide = WrapperMatrix2D.checkMatrix(leftHandSide);\n  rightHandSide = WrapperMatrix2D.checkMatrix(rightHandSide);\n  if (useSVD) {\n    return new SingularValueDecomposition(leftHandSide).solve(rightHandSide);\n  } else {\n    return leftHandSide.isSquare()\n      ? new LuDecomposition(leftHandSide).solve(rightHandSide)\n      : new QrDecomposition(leftHandSide).solve(rightHandSide);\n  }\n}\n","import { Matrix } from 'ml-matrix';\n/**\n * Difference of the matrix function over the parameters\n * @ignore\n * @param {{x:Array<number>, y:Array<number>}} data - Array of points to fit in the format [x1, x2, ... ], [y1, y2, ... ]\n * @param {Array<number>} evaluatedData - Array of previous evaluated function values\n * @param {Array<number>} params - Array of previous parameter values\n * @param {number|array} gradientDifference - The step size to approximate the jacobian matrix\n * @param {boolean} centralDifference - If true the jacobian matrix is approximated by central differences otherwise by forward differences\n * @param {function} paramFunction - The parameters and returns a function with the independent variable as a parameter\n * @return {Matrix}\n */\n\nexport default function gradientFunction(\n  data,\n  evaluatedData,\n  params,\n  gradientDifference,\n  paramFunction,\n  centralDifference,\n) {\n  const nbParams = params.length;\n  const nbPoints = data.x.length;\n  let ans = Matrix.zeros(nbParams, nbPoints);\n\n  let rowIndex = 0;\n  for (let param = 0; param < nbParams; param++) {\n    if (gradientDifference[param] === 0) continue;\n    let delta = gradientDifference[param];\n    let auxParams = params.slice();\n    auxParams[param] += delta;\n    let funcParam = paramFunction(auxParams);\n    if (!centralDifference) {\n      for (let point = 0; point < nbPoints; point++) {\n        ans.set(\n          rowIndex,\n          point,\n          (evaluatedData[point] - funcParam(data.x[point])) / delta,\n        );\n      }\n    } else {\n      auxParams = params.slice();\n      auxParams[param] -= delta;\n      delta *= 2;\n      let funcParam2 = paramFunction(auxParams);\n      for (let point = 0; point < nbPoints; point++) {\n        ans.set(\n          rowIndex,\n          point,\n          (funcParam2(data.x[point]) - funcParam(data.x[point])) / delta,\n        );\n      }\n    }\n    rowIndex++;\n  }\n\n  return ans;\n}\n","import { inverse, Matrix } from 'ml-matrix';\n\nimport gradientFunction from './gradientFunction';\n\n/**\n * Matrix function over the samples\n * @ignore\n * @param {{x:Array<number>, y:Array<number>}} data - Array of points to fit in the format [x1, x2, ... ], [y1, y2, ... ]\n * @param {Array<number>} evaluatedData - Array of previous evaluated function values\n * @return {Matrix}\n */\nfunction matrixFunction(data, evaluatedData) {\n  const m = data.x.length;\n\n  let ans = new Matrix(m, 1);\n\n  for (let point = 0; point < m; point++) {\n    ans.set(point, 0, data.y[point] - evaluatedData[point]);\n  }\n  return ans;\n}\n\n/**\n * Iteration for Levenberg-Marquardt\n * @ignore\n * @param {{x:Array<number>, y:Array<number>}} data - Array of points to fit in the format [x1, x2, ... ], [y1, y2, ... ]\n * @param {Array<number>} params - Array of previous parameter values\n * @param {number} damping - Levenberg-Marquardt parameter\n * @param {number|array} gradientDifference - The step size to approximate the jacobian matrix\n * @param {boolean} centralDifference - If true the jacobian matrix is approximated by central differences otherwise by forward differences\n * @param {function} parameterizedFunction - The parameters and returns a function with the independent variable as a parameter\n * @return {Array<number>}\n */\nexport default function step(\n  data,\n  params,\n  damping,\n  gradientDifference,\n  parameterizedFunction,\n  centralDifference,\n  weights,\n) {\n  let value = damping;\n  let identity = Matrix.eye(params.length, params.length, value);\n\n  const func = parameterizedFunction(params);\n\n  let evaluatedData = new Float64Array(data.x.length);\n  for (let i = 0; i < data.x.length; i++) {\n    evaluatedData[i] = func(data.x[i]);\n  }\n\n  let gradientFunc = gradientFunction(\n    data,\n    evaluatedData,\n    params,\n    gradientDifference,\n    parameterizedFunction,\n    centralDifference,\n  );\n  let residualError = matrixFunction(data, evaluatedData);\n\n  let inverseMatrix = inverse(\n    identity.add(\n      gradientFunc.mmul(\n        gradientFunc.transpose().scale('row', { scale: weights }),\n      ),\n    ),\n  );\n\n  let jacobianWeigthResidualError = gradientFunc.mmul(\n    residualError.scale('row', { scale: weights }),\n  );\n\n  let perturbations = inverseMatrix.mmul(jacobianWeigthResidualError);\n\n  return {\n    perturbations,\n    jacobianWeigthResidualError,\n  };\n}\n","import checkOptions from './checkOptions';\nimport errorCalculation from './errorCalculation';\nimport step from './step';\n\n/**\n * Curve fitting algorithm\n * @param {{x:Array<number>, y:Array<number>}} data - Array of points to fit in the format [x1, x2, ... ], [y1, y2, ... ]\n * @param {function} parameterizedFunction - The parameters and returns a function with the independent variable as a parameter\n * @param {object} [options] - Options object\n * @param {number|array} [options.weights = 1] - weighting vector, if the length does not match with the number of data points, the vector is reconstructed with first value.\n * @param {number} [options.damping = 1e-2] - Levenberg-Marquardt parameter, small values of the damping parameter λ result in a Gauss-Newton update and large\nvalues of λ result in a gradient descent update\n * @param {number} [options.dampingStepDown = 9] - factor to reduce the damping (Levenberg-Marquardt parameter) when there is not an improvement when updating parameters.\n * @param {number} [options.dampingStepUp = 11] - factor to increase the damping (Levenberg-Marquardt parameter) when there is an improvement when updating parameters.\n * @param {number} [options.improvementThreshold = 1e-3] - the threshold to define an improvement through an update of parameters\n * @param {number|array} [options.gradientDifference = 10e-2] - The step size to approximate the jacobian matrix\n * @param {boolean} [options.centralDifference = false] - If true the jacobian matrix is approximated by central differences otherwise by forward differences\n * @param {Array<number>} [options.minValues] - Minimum allowed values for parameters\n * @param {Array<number>} [options.maxValues] - Maximum allowed values for parameters\n * @param {Array<number>} [options.initialValues] - Array of initial parameter values\n * @param {number} [options.maxIterations = 100] - Maximum of allowed iterations\n * @param {number} [options.errorTolerance = 10e-3] - Minimum uncertainty allowed for each point.\n * @param {number} [options.timeout] - maximum time running before throw in seconds.\n * @return {{parameterValues: Array<number>, parameterError: number, iterations: number}}\n */\nexport default function levenbergMarquardt(\n  data,\n  parameterizedFunction,\n  options = {},\n) {\n  let {\n    checkTimeout,\n    minValues,\n    maxValues,\n    parameters,\n    weightSquare,\n    damping,\n    dampingStepUp,\n    dampingStepDown,\n    maxIterations,\n    errorTolerance,\n    centralDifference,\n    gradientDifference,\n    improvementThreshold,\n  } = checkOptions(data, parameterizedFunction, options);\n\n  let error = errorCalculation(\n    data,\n    parameters,\n    parameterizedFunction,\n    weightSquare,\n  );\n\n  let converged = error <= errorTolerance;\n\n  let iteration = 0;\n  for (; iteration < maxIterations && !converged; iteration++) {\n    let previousError = error;\n\n    let { perturbations, jacobianWeigthResidualError } = step(\n      data,\n      parameters,\n      damping,\n      gradientDifference,\n      parameterizedFunction,\n      centralDifference,\n      weightSquare,\n    );\n\n    for (let k = 0; k < parameters.length; k++) {\n      parameters[k] = Math.min(\n        Math.max(minValues[k], parameters[k] - perturbations.get(k, 0)),\n        maxValues[k],\n      );\n    }\n\n    error = errorCalculation(\n      data,\n      parameters,\n      parameterizedFunction,\n      weightSquare,\n    );\n\n    if (isNaN(error)) break;\n\n    let improvementMetric =\n      (previousError - error) /\n      perturbations\n        .transpose()\n        .mmul(perturbations.mulS(damping).add(jacobianWeigthResidualError))\n        .get(0, 0);\n\n    if (improvementMetric > improvementThreshold) {\n      damping = Math.max(damping / dampingStepDown, 1e-7);\n    } else {\n      error = previousError;\n      damping = Math.min(damping * dampingStepUp, 1e7);\n    }\n\n    if (checkTimeout()) {\n      throw new Error(\n        `The execution time is over to ${options.timeout} seconds`,\n      );\n    }\n\n    converged = error <= errorTolerance;\n  }\n\n  return {\n    parameterValues: parameters,\n    parameterError: error,\n    iterations: iteration,\n  };\n}\n","import LM from 'ml-levenberg-marquardt';\n\nconst LEVENBERG_MARQUARDT = 1;\n\nexport function selectMethod(optimizationOptions = {}) {\n  let { kind, options } = optimizationOptions;\n  kind = getKind(kind);\n  switch (kind) {\n    case LEVENBERG_MARQUARDT:\n      return {\n        algorithm: LM,\n        optimizationOptions: checkOptions(kind, options),\n      };\n    default:\n      throw new Error(`Unknown kind algorithm`);\n  }\n}\n\nfunction checkOptions(kind, options = {}) {\n  // eslint-disable-next-line default-case\n  switch (kind) {\n    case LEVENBERG_MARQUARDT:\n      return Object.assign({}, lmOptions, options);\n  }\n}\n\nfunction getKind(kind) {\n  if (typeof kind !== 'string') return kind;\n  switch (kind.toLowerCase().replace(/[^a-z]/g, '')) {\n    case 'lm':\n    case 'levenbergmarquardt':\n      return LEVENBERG_MARQUARDT;\n    default:\n      throw new Error(`Unknown kind algorithm`);\n  }\n}\n\nconst lmOptions = {\n  damping: 1.5,\n  maxIterations: 100,\n  errorTolerance: 1e-8,\n};\n","import { checkInput } from './checkInput';\nimport { selectMethod } from './selectMethod';\n\n// const STATE_INIT = 0;\n// const STATE_MIN = 1;\n// const STATE_MAX = 2;\n// const STATE_GRADIENT_DIFFERENCE = 3;\n\n// const X = 0;\n// const Y = 1;\n// const WIDTH = 2;\n// const MU = 3;\n\n// const keys = ['x', 'y', 'width', 'mu'];\n/**\n * Fits a set of points to the sum of a set of bell functions.\n * @param {object} data - An object containing the x and y data to be fitted.\n * @param {array} peaks - A list of initial parameters to be optimized. e.g. coming from a peak picking [{x, y, width}].\n * @param {object} [options = {}]\n * @param {object} [options.shape={}] - it's specify the kind of shape used to fitting.\n * @param {string} [options.shape.kind = 'gaussian'] - kind of shape; lorentzian, gaussian and pseudovoigt are supported.\n * @param {object} [options.optimization = {}] - it's specify the kind and options of the algorithm use to optimize parameters.\n * @param {object} [options.optimization.kind = 'lm'] - kind of algorithm. By default it's levenberg-marquardt.\n * @param {object} [options.optimization.parameters] - options of each parameter to be optimized e.g. For a gaussian shape\n *  it could have x, y and with properties, each of which could contain init, min, max and gradientDifference, those options will define the guess,\n *  the min and max value of the parameter (search space) and the step size to approximate the jacobian matrix respectively. Those options could be a number,\n *  array of numbers, callback, or array of callbacks. Each kind of shape has default parameters so it could be undefined.\n * @param {object} [options.optimization.parameters.x] - options for x parameter.\n * @param {number|callback|array<number|callback>} [options.optimization.parameters.x.init] - definition of the starting point of the parameter (the guess),\n *  if it is a callback the method pass the peak as the unique input, if it is an array the first element define the guess of the first peak and so on.\n * @param {number|callback|array<number|callback>} [options.optimization.parameters.x.min] - definition of the lower limit of the parameter,\n *  if it is a callback the method pass the peak as the unique input, if it is an array the first element define the min of the first peak and so on.\n * @param {number|callback|array<number|callback>} [options.optimization.parameters.x.max] - definition of the upper limit of the parameter,\n *  if it is a callback the method pass the peak as the unique input, if it is an array the first element define the max of the first peak and so on.\n * @param {number|callback|array<number|callback>} [options.optimization.parameters.x.gradientDifference] - definition of  the step size to approximate the jacobian matrix of the parameter,\n *  if it is a callback the method pass the peak as the unique input, if it is an array the first element define the gradientDifference of the first peak and so on.\n * @param {object} [options.optimization.options = {}] - options for the specific kind of algorithm.\n * @param {number} [options.optimization.options.timeout] - maximum time running before break in seconds.\n * @param {number} [options.optimization.options.damping=1.5]\n * @param {number} [options.optimization.options.maxIterations=100]\n * @param {number} [options.optimization.options.errorTolerance=1e-8]\n * @returns {object} - A object with fitting error and the list of optimized parameters { parameters: [ {x, y, width} ], error } if the kind of shape is pseudoVoigt mu parameter is optimized.\n */\nexport function optimize(data, peakList, options = {}) {\n  const { y, x, maxY, peaks, paramsFunc, optimization } = checkInput(\n    data,\n    peakList,\n    options,\n  );\n\n  let parameters = optimization.parameters;\n\n  let nbShapes = peaks.length;\n  let parameterKey = Object.keys(parameters);\n  let nbParams = nbShapes * parameterKey.length;\n  let pMin = new Float64Array(nbParams);\n  let pMax = new Float64Array(nbParams);\n  let pInit = new Float64Array(nbParams);\n  let gradientDifference = new Float64Array(nbParams);\n\n  for (let i = 0; i < nbShapes; i++) {\n    let peak = peaks[i];\n    for (let k = 0; k < parameterKey.length; k++) {\n      let key = parameterKey[k];\n      let init = parameters[key].init;\n      let min = parameters[key].min;\n      let max = parameters[key].max;\n      let gradientDifferenceValue = parameters[key].gradientDifference;\n      pInit[i + k * nbShapes] = init[i % init.length](peak);\n      pMin[i + k * nbShapes] = min[i % min.length](peak);\n      pMax[i + k * nbShapes] = max[i % max.length](peak);\n      gradientDifference[i + k * nbShapes] = gradientDifferenceValue[\n        i % gradientDifferenceValue.length\n      ](peak);\n    }\n  }\n\n  let { algorithm, optimizationOptions } = selectMethod(optimization);\n\n  optimizationOptions.minValues = pMin;\n  optimizationOptions.maxValues = pMax;\n  optimizationOptions.initialValues = pInit;\n  optimizationOptions.gradientDifference = gradientDifference;\n\n  let pFit = algorithm({ x, y }, paramsFunc, optimizationOptions);\n\n  let { parameterError: error, iterations } = pFit;\n  let result = { error, iterations, peaks };\n  for (let i = 0; i < nbShapes; i++) {\n    pFit.parameterValues[i + nbShapes] *= maxY;\n    for (let k = 0; k < parameterKey.length; k++) {\n      // we modify the optimized parameters\n      peaks[i][parameterKey[k]] = pFit.parameterValues[i + k * nbShapes];\n    }\n  }\n\n  return result;\n}\n","export function addStyle(serie, spectrum, options = {}) {\r\n    let { color = '#A9A9A9', opacity = 1, lineWidth = 1 } = options;\r\n    // eslint-disable-next-line @typescript-eslint/prefer-regexp-exec\r\n    if (color.match(/#[0-9A-F]{6}$/i)) {\r\n        color = (color + ((opacity * 255) >> 0).toString(16)).toUpperCase();\r\n    }\r\n    else {\r\n        color = color.replace(/rgb ?\\((.*)\\)/, `rgba($1,${opacity})`);\r\n    }\r\n    serie.style = [\r\n        {\r\n            name: 'unselected',\r\n            style: {\r\n                line: {\r\n                    color,\r\n                    width: lineWidth,\r\n                    dash: 1,\r\n                },\r\n            },\r\n        },\r\n        {\r\n            name: 'selected',\r\n            style: {\r\n                line: {\r\n                    color,\r\n                    width: lineWidth + 2,\r\n                    dash: 1,\r\n                },\r\n            },\r\n        },\r\n    ];\r\n    serie.name = spectrum.label || spectrum.id;\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWRkU3R5bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvanNncmFwaC9hZGRTdHlsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFPQSxNQUFNLFVBQVUsUUFBUSxDQUN0QixLQUE4QixFQUM5QixRQUFrQixFQUNsQixVQUF3QixFQUFFO0lBRTFCLElBQUksRUFBRSxLQUFLLEdBQUcsU0FBUyxFQUFFLE9BQU8sR0FBRyxDQUFDLEVBQUUsU0FBUyxHQUFHLENBQUMsRUFBRSxHQUFHLE9BQU8sQ0FBQztJQUNoRSxpRUFBaUU7SUFDakUsSUFBSSxLQUFLLENBQUMsS0FBSyxDQUFDLGdCQUFnQixDQUFDLEVBQUU7UUFDakMsS0FBSyxHQUFHLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQyxPQUFPLEdBQUcsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsV0FBVyxFQUFFLENBQUM7S0FDckU7U0FBTTtRQUNMLEtBQUssR0FBRyxLQUFLLENBQUMsT0FBTyxDQUFDLGVBQWUsRUFBRSxXQUFXLE9BQU8sR0FBRyxDQUFDLENBQUM7S0FDL0Q7SUFDRCxLQUFLLENBQUMsS0FBSyxHQUFHO1FBQ1o7WUFDRSxJQUFJLEVBQUUsWUFBWTtZQUNsQixLQUFLLEVBQUU7Z0JBQ0wsSUFBSSxFQUFFO29CQUNKLEtBQUs7b0JBQ0wsS0FBSyxFQUFFLFNBQVM7b0JBQ2hCLElBQUksRUFBRSxDQUFDO2lCQUNSO2FBQ0Y7U0FDRjtRQUNEO1lBQ0UsSUFBSSxFQUFFLFVBQVU7WUFDaEIsS0FBSyxFQUFFO2dCQUNMLElBQUksRUFBRTtvQkFDSixLQUFLO29CQUNMLEtBQUssRUFBRSxTQUFTLEdBQUcsQ0FBQztvQkFDcEIsSUFBSSxFQUFFLENBQUM7aUJBQ1I7YUFDRjtTQUNGO0tBQ0YsQ0FBQztJQUNGLEtBQUssQ0FBQyxJQUFJLEdBQUcsUUFBUSxDQUFDLEtBQUssSUFBSSxRQUFRLENBQUMsRUFBRSxDQUFDO0FBQzdDLENBQUMifQ==","export const COLORS = [\r\n    '#FFB300',\r\n    '#803E75',\r\n    '#FF6800',\r\n    '#A6BDD7',\r\n    '#C10020',\r\n    '#CEA262',\r\n    '#817066',\r\n    '#007D34',\r\n    '#F6768E',\r\n    '#00538A',\r\n    '#FF7A5C',\r\n    '#53377A',\r\n    '#FF8E00',\r\n    '#B32851',\r\n    '#F4C800',\r\n    '#7F180D',\r\n    '#93AA00',\r\n    '#593315',\r\n    '#F13A13',\r\n    '#232C16',\r\n];\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29sb3JzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2pzZ3JhcGgvY29sb3JzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE1BQU0sQ0FBQyxNQUFNLE1BQU0sR0FBRztJQUNwQixTQUFTO0lBQ1QsU0FBUztJQUNULFNBQVM7SUFDVCxTQUFTO0lBQ1QsU0FBUztJQUNULFNBQVM7SUFDVCxTQUFTO0lBQ1QsU0FBUztJQUNULFNBQVM7SUFDVCxTQUFTO0lBQ1QsU0FBUztJQUNULFNBQVM7SUFDVCxTQUFTO0lBQ1QsU0FBUztJQUNULFNBQVM7SUFDVCxTQUFTO0lBQ1QsU0FBUztJQUNULFNBQVM7SUFDVCxTQUFTO0lBQ1QsU0FBUztDQUNWLENBQUMifQ==","import { xyFilterXPositive } from 'ml-spectra-processing';\r\nimport { addStyle } from './addStyle';\r\nimport { COLORS } from './colors';\r\n/**\r\n * Generate a jsgraph chart format from an array of Analysis\r\n */\r\nexport function getJSGraph(analyses, options = {}) {\r\n    const { colors = COLORS, opacities = [1], linesWidth = [1], selector = {}, normalization, xAxis = {}, yAxis = {}, } = options;\r\n    let series = [];\r\n    let xLabel = xAxis.label;\r\n    let yLabel = yAxis.label;\r\n    let xUnits = xAxis.units;\r\n    let yUnits = yAxis.units;\r\n    for (let i = 0; i < analyses.length; i++) {\r\n        const analysis = analyses[i];\r\n        let serie = {};\r\n        let currentData = analysis.getNormalizedSpectrum({\r\n            selector,\r\n            normalization,\r\n        });\r\n        if (!currentData)\r\n            continue;\r\n        if (!xLabel)\r\n            xLabel = currentData.variables.x.label;\r\n        if (!yLabel)\r\n            yLabel = currentData.variables.y.label;\r\n        if (!xUnits)\r\n            xUnits = currentData.variables.x.units;\r\n        if (!yUnits)\r\n            yUnits = currentData.variables.y.units;\r\n        addStyle(serie, analysis, {\r\n            color: colors[i % colors.length],\r\n            opacity: opacities[i % opacities.length],\r\n            lineWidth: linesWidth[i % linesWidth.length],\r\n        });\r\n        serie.dataType = currentData.dataType;\r\n        serie.data = {\r\n            x: currentData.variables.x.data,\r\n            y: currentData.variables.y.data,\r\n        };\r\n        if (xAxis.logScale) {\r\n            serie.data = xyFilterXPositive(serie.data);\r\n        }\r\n        series.push(serie);\r\n    }\r\n    return {\r\n        axes: {\r\n            x: {\r\n                label: xLabel,\r\n                unit: xUnits,\r\n                unitWrapperBefore: '(',\r\n                unitWrapperAfter: ')',\r\n                flipped: false,\r\n                display: true,\r\n                ...xAxis,\r\n            },\r\n            y: {\r\n                label: yLabel,\r\n                unit: yUnits,\r\n                unitWrapperBefore: '(',\r\n                unitWrapperAfter: ')',\r\n                flipped: false,\r\n                display: true,\r\n                ...yAxis,\r\n            },\r\n        },\r\n        series,\r\n    };\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0SlNHcmFwaC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9qc2dyYXBoL2dldEpTR3JhcGgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFLMUQsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLFlBQVksQ0FBQztBQUN0QyxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sVUFBVSxDQUFDO0FBdUJsQzs7R0FFRztBQUNILE1BQU0sVUFBVSxVQUFVLENBQUMsUUFBb0IsRUFBRSxVQUEwQixFQUFFO0lBQzNFLE1BQU0sRUFDSixNQUFNLEdBQUcsTUFBTSxFQUNmLFNBQVMsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUNmLFVBQVUsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUNoQixRQUFRLEdBQUcsRUFBRSxFQUNiLGFBQWEsRUFDYixLQUFLLEdBQUcsRUFBRSxFQUNWLEtBQUssR0FBRyxFQUFFLEdBQ1gsR0FBRyxPQUFPLENBQUM7SUFDWixJQUFJLE1BQU0sR0FBRyxFQUFFLENBQUM7SUFFaEIsSUFBSSxNQUFNLEdBQUcsS0FBSyxDQUFDLEtBQUssQ0FBQztJQUN6QixJQUFJLE1BQU0sR0FBRyxLQUFLLENBQUMsS0FBSyxDQUFDO0lBQ3pCLElBQUksTUFBTSxHQUFHLEtBQUssQ0FBQyxLQUFLLENBQUM7SUFDekIsSUFBSSxNQUFNLEdBQUcsS0FBSyxDQUFDLEtBQUssQ0FBQztJQUV6QixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsUUFBUSxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtRQUN4QyxNQUFNLFFBQVEsR0FBRyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDN0IsSUFBSSxLQUFLLEdBQTRCLEVBQUUsQ0FBQztRQUN4QyxJQUFJLFdBQVcsR0FBRyxRQUFRLENBQUMscUJBQXFCLENBQUM7WUFDL0MsUUFBUTtZQUNSLGFBQWE7U0FDZCxDQUFDLENBQUM7UUFDSCxJQUFJLENBQUMsV0FBVztZQUFFLFNBQVM7UUFDM0IsSUFBSSxDQUFDLE1BQU07WUFBRSxNQUFNLEdBQUcsV0FBVyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDO1FBQ3BELElBQUksQ0FBQyxNQUFNO1lBQUUsTUFBTSxHQUFHLFdBQVcsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQztRQUNwRCxJQUFJLENBQUMsTUFBTTtZQUFFLE1BQU0sR0FBRyxXQUFXLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUM7UUFDcEQsSUFBSSxDQUFDLE1BQU07WUFBRSxNQUFNLEdBQUcsV0FBVyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDO1FBQ3BELFFBQVEsQ0FBQyxLQUFLLEVBQUUsUUFBUSxFQUFFO1lBQ3hCLEtBQUssRUFBRSxNQUFNLENBQUMsQ0FBQyxHQUFHLE1BQU0sQ0FBQyxNQUFNLENBQUM7WUFDaEMsT0FBTyxFQUFFLFNBQVMsQ0FBQyxDQUFDLEdBQUcsU0FBUyxDQUFDLE1BQU0sQ0FBQztZQUN4QyxTQUFTLEVBQUUsVUFBVSxDQUFDLENBQUMsR0FBRyxVQUFVLENBQUMsTUFBTSxDQUFDO1NBQzdDLENBQUMsQ0FBQztRQUNILEtBQUssQ0FBQyxRQUFRLEdBQUcsV0FBVyxDQUFDLFFBQVEsQ0FBQztRQUN0QyxLQUFLLENBQUMsSUFBSSxHQUFHO1lBQ1gsQ0FBQyxFQUFFLFdBQVcsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLElBQUk7WUFDL0IsQ0FBQyxFQUFFLFdBQVcsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLElBQUk7U0FDaEMsQ0FBQztRQUVGLElBQUksS0FBSyxDQUFDLFFBQVEsRUFBRTtZQUNsQixLQUFLLENBQUMsSUFBSSxHQUFHLGlCQUFpQixDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQztTQUM1QztRQUVELE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7S0FDcEI7SUFDRCxPQUFPO1FBQ0wsSUFBSSxFQUFFO1lBQ0osQ0FBQyxFQUFFO2dCQUNELEtBQUssRUFBRSxNQUFNO2dCQUNiLElBQUksRUFBRSxNQUFNO2dCQUNaLGlCQUFpQixFQUFFLEdBQUc7Z0JBQ3RCLGdCQUFnQixFQUFFLEdBQUc7Z0JBQ3JCLE9BQU8sRUFBRSxLQUFLO2dCQUNkLE9BQU8sRUFBRSxJQUFJO2dCQUNiLEdBQUcsS0FBSzthQUNUO1lBQ0QsQ0FBQyxFQUFFO2dCQUNELEtBQUssRUFBRSxNQUFNO2dCQUNiLElBQUksRUFBRSxNQUFNO2dCQUNaLGlCQUFpQixFQUFFLEdBQUc7Z0JBQ3RCLGdCQUFnQixFQUFFLEdBQUc7Z0JBQ3JCLE9BQU8sRUFBRSxLQUFLO2dCQUNkLE9BQU8sRUFBRSxJQUFJO2dCQUNiLEdBQUcsS0FBSzthQUNUO1NBQ0Y7UUFDRCxNQUFNO0tBQ1AsQ0FBQztBQUNKLENBQUMifQ==","export function getNormalizationAnnotations(filter = {}, boundary = { y: { min: '0px', max: '2000px' } }) {\r\n    let { exclusions = [] } = filter;\r\n    let annotations = [];\r\n    exclusions = exclusions.filter((exclusion) => !exclusion.ignore);\r\n    annotations = exclusions.map((exclusion) => {\r\n        let annotation = {\r\n            type: 'rect',\r\n            position: [\r\n                { x: exclusion.from, y: boundary.y.min },\r\n                { x: exclusion.to, y: boundary.y.max },\r\n            ],\r\n            strokeWidth: 0,\r\n            fillColor: 'rgba(255,255,224,1)',\r\n        };\r\n        return annotation;\r\n    });\r\n    if (filter.from !== undefined) {\r\n        annotations.push({\r\n            type: 'rect',\r\n            position: [\r\n                { x: Number.MIN_SAFE_INTEGER, y: boundary.y.min },\r\n                { x: filter.from, y: boundary.y.max },\r\n            ],\r\n            strokeWidth: 0,\r\n            fillColor: 'rgba(255,255,224,1)',\r\n        });\r\n    }\r\n    if (filter.to !== undefined) {\r\n        annotations.push({\r\n            type: 'rect',\r\n            position: [\r\n                { x: filter.to, y: boundary.y.min },\r\n                { x: Number.MAX_SAFE_INTEGER, y: boundary.y.max },\r\n            ],\r\n            strokeWidth: 0,\r\n            fillColor: 'rgba(255,255,224,1)',\r\n        });\r\n    }\r\n    return annotations;\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0Tm9ybWFsaXphdGlvbkFubm90YXRpb25zLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2pzZ3JhcGgvZ2V0Tm9ybWFsaXphdGlvbkFubm90YXRpb25zLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQVdBLE1BQU0sVUFBVSwyQkFBMkIsQ0FDekMsU0FBNEIsRUFBRSxFQUM5QixRQUFRLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxHQUFHLEVBQUUsS0FBSyxFQUFFLEdBQUcsRUFBRSxRQUFRLEVBQUUsRUFBRTtJQUUvQyxJQUFJLEVBQUUsVUFBVSxHQUFHLEVBQUUsRUFBRSxHQUFHLE1BQU0sQ0FBQztJQUVqQyxJQUFJLFdBQVcsR0FBRyxFQUFFLENBQUM7SUFDckIsVUFBVSxHQUFHLFVBQVUsQ0FBQyxNQUFNLENBQUMsQ0FBQyxTQUFTLEVBQUUsRUFBRSxDQUFDLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQ2pFLFdBQVcsR0FBRyxVQUFVLENBQUMsR0FBRyxDQUFDLENBQUMsU0FBUyxFQUFFLEVBQUU7UUFDekMsSUFBSSxVQUFVLEdBQUc7WUFDZixJQUFJLEVBQUUsTUFBTTtZQUNaLFFBQVEsRUFBRTtnQkFDUixFQUFFLENBQUMsRUFBRSxTQUFTLENBQUMsSUFBSSxFQUFFLENBQUMsRUFBRSxRQUFRLENBQUMsQ0FBQyxDQUFDLEdBQUcsRUFBRTtnQkFDeEMsRUFBRSxDQUFDLEVBQUUsU0FBUyxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsUUFBUSxDQUFDLENBQUMsQ0FBQyxHQUFHLEVBQUU7YUFDdkM7WUFDRCxXQUFXLEVBQUUsQ0FBQztZQUNkLFNBQVMsRUFBRSxxQkFBcUI7U0FDakMsQ0FBQztRQUNGLE9BQU8sVUFBVSxDQUFDO0lBQ3BCLENBQUMsQ0FBQyxDQUFDO0lBQ0gsSUFBSSxNQUFNLENBQUMsSUFBSSxLQUFLLFNBQVMsRUFBRTtRQUM3QixXQUFXLENBQUMsSUFBSSxDQUFDO1lBQ2YsSUFBSSxFQUFFLE1BQU07WUFDWixRQUFRLEVBQUU7Z0JBQ1IsRUFBRSxDQUFDLEVBQUUsTUFBTSxDQUFDLGdCQUFnQixFQUFFLENBQUMsRUFBRSxRQUFRLENBQUMsQ0FBQyxDQUFDLEdBQUcsRUFBRTtnQkFDakQsRUFBRSxDQUFDLEVBQUUsTUFBTSxDQUFDLElBQUksRUFBRSxDQUFDLEVBQUUsUUFBUSxDQUFDLENBQUMsQ0FBQyxHQUFHLEVBQUU7YUFDdEM7WUFDRCxXQUFXLEVBQUUsQ0FBQztZQUNkLFNBQVMsRUFBRSxxQkFBcUI7U0FDakMsQ0FBQyxDQUFDO0tBQ0o7SUFDRCxJQUFJLE1BQU0sQ0FBQyxFQUFFLEtBQUssU0FBUyxFQUFFO1FBQzNCLFdBQVcsQ0FBQyxJQUFJLENBQUM7WUFDZixJQUFJLEVBQUUsTUFBTTtZQUNaLFFBQVEsRUFBRTtnQkFDUixFQUFFLENBQUMsRUFBRSxNQUFNLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxRQUFRLENBQUMsQ0FBQyxDQUFDLEdBQUcsRUFBRTtnQkFDbkMsRUFBRSxDQUFDLEVBQUUsTUFBTSxDQUFDLGdCQUFnQixFQUFFLENBQUMsRUFBRSxRQUFRLENBQUMsQ0FBQyxDQUFDLEdBQUcsRUFBRTthQUNsRDtZQUNELFdBQVcsRUFBRSxDQUFDO1lBQ2QsU0FBUyxFQUFFLHFCQUFxQjtTQUNqQyxDQUFDLENBQUM7S0FDSjtJQUNELE9BQU8sV0FBVyxDQUFDO0FBQ3JCLENBQUMifQ==","export function appendDistinctParameter(values, key, value) {\r\n    if (!values[key]) {\r\n        values[key] = {\r\n            key,\r\n            values: [],\r\n            count: 0,\r\n        };\r\n    }\r\n    if (!values[key].values.includes(value)) {\r\n        values[key].values.push(value);\r\n    }\r\n    values[key].count++;\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwZW5kRGlzdGluY3RQYXJhbWV0ZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvdXRpbC9hcHBlbmREaXN0aW5jdFBhcmFtZXRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxNQUFNLFVBQVUsdUJBQXVCLENBQ3JDLE1BQXFDLEVBQ3JDLEdBQVcsRUFDWCxLQUFhO0lBRWIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsRUFBRTtRQUNoQixNQUFNLENBQUMsR0FBRyxDQUFDLEdBQUc7WUFDWixHQUFHO1lBQ0gsTUFBTSxFQUFFLEVBQUU7WUFDVixLQUFLLEVBQUUsQ0FBQztTQUNULENBQUM7S0FDSDtJQUNELElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsRUFBRTtRQUN2QyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztLQUNoQztJQUNELE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxLQUFLLEVBQUUsQ0FBQztBQUN0QixDQUFDIn0=","export function appendDistinctValue(values, key) {\r\n    if (!values[key]) {\r\n        values[key] = {\r\n            key,\r\n            count: 0,\r\n        };\r\n    }\r\n    values[key].count++;\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwZW5kRGlzdGluY3RWYWx1ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlsL2FwcGVuZERpc3RpbmN0VmFsdWUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxVQUFVLG1CQUFtQixDQUNqQyxNQUFtQyxFQUNuQyxHQUFXO0lBRVgsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsRUFBRTtRQUNoQixNQUFNLENBQUMsR0FBRyxDQUFDLEdBQUc7WUFDWixHQUFHO1lBQ0gsS0FBSyxFQUFFLENBQUM7U0FDVCxDQUFDO0tBQ0g7SUFDRCxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsS0FBSyxFQUFFLENBQUM7QUFDdEIsQ0FBQyJ9","import { appendDistinctParameter } from './util/appendDistinctParameter';\r\nimport { appendDistinctValue } from './util/appendDistinctValue';\r\nexport class AnalysesManager {\r\n    constructor() {\r\n        this.analyses = [];\r\n    }\r\n    addAnalysis(analysis) {\r\n        let index = this.getAnalysisIndex(analysis.id);\r\n        if (index === undefined) {\r\n            this.analyses.push(analysis);\r\n        }\r\n        else {\r\n            this.analyses[index] = analysis;\r\n        }\r\n    }\r\n    getAnalyses(options = {}) {\r\n        const { ids } = options;\r\n        let analyses = [];\r\n        for (const analysis of this.analyses) {\r\n            if (!ids || ids.includes(analysis.id)) {\r\n                analyses.push(analysis);\r\n            }\r\n        }\r\n        return analyses;\r\n    }\r\n    getSpectra() {\r\n        const spectra = [];\r\n        for (const analysis of this.analyses) {\r\n            spectra.push(...analysis.spectra);\r\n        }\r\n        return spectra;\r\n    }\r\n    /**\r\n     * Get an array of objects (key + count) of all the titles\r\n     */\r\n    getDistinctTitles() {\r\n        let values = {};\r\n        for (let spectrum of this.getSpectra()) {\r\n            if (spectrum.title) {\r\n                appendDistinctValue(values, spectrum.title);\r\n            }\r\n        }\r\n        return Object.keys(values).map((key) => values[key]);\r\n    }\r\n    /**\r\n     * Get an array of objects (key + count) of all the units\r\n     */\r\n    getDistinctUnits() {\r\n        var _a;\r\n        let values = {};\r\n        for (let spectrum of this.getSpectra()) {\r\n            if (spectrum.variables) {\r\n                for (let [, variable] of Object.entries(spectrum.variables)) {\r\n                    const units = (_a = variable.units) === null || _a === void 0 ? void 0 : _a.replace(/\\s+\\[.*/, '');\r\n                    if (units) {\r\n                        appendDistinctValue(values, units);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return Object.keys(values).map((key) => values[key]);\r\n    }\r\n    /**\r\n     * Get an array of objects (key + count) of all the labels\r\n     */\r\n    getDistinctLabels() {\r\n        let values = {};\r\n        for (let spectrum of this.getSpectra()) {\r\n            if (spectrum.variables) {\r\n                for (let [, variable] of Object.entries(spectrum.variables)) {\r\n                    appendDistinctValue(values, variable.label.replace(/\\s+\\[.*/, ''));\r\n                }\r\n            }\r\n        }\r\n        return Object.keys(values).map((key) => values[key]);\r\n    }\r\n    /**\r\n     * Get an array of objects (key + count) of all the dataTypes\r\n     */\r\n    getDistinctDataTypes() {\r\n        let values = {};\r\n        for (let spectrum of this.getSpectra()) {\r\n            if (spectrum.dataType) {\r\n                appendDistinctValue(values, spectrum.dataType);\r\n            }\r\n        }\r\n        return Object.keys(values).map((key) => values[key]);\r\n    }\r\n    /**\r\n     * Get an array of objects (key + count) of all the meta\r\n     */\r\n    getDistinctMeta() {\r\n        let values = {};\r\n        for (let spectrum of this.getSpectra()) {\r\n            if (spectrum.meta) {\r\n                for (let key in spectrum.meta) {\r\n                    appendDistinctParameter(values, key, spectrum.meta[key]);\r\n                }\r\n            }\r\n        }\r\n        return Object.keys(values).map((key) => values[key]);\r\n    }\r\n    removeAllAnalyses() {\r\n        this.analyses.splice(0);\r\n    }\r\n    /**\r\n     * Remove the analysis from the AnalysesManager for the specified id\r\n     */\r\n    removeAnalysis(id) {\r\n        let index = this.getAnalysisIndex(id);\r\n        if (index === undefined)\r\n            return undefined;\r\n        return this.analyses.splice(index, 1);\r\n    }\r\n    /**\r\n     * Returns the index of the analysis in the analyses array\r\n     */\r\n    getAnalysisIndex(id) {\r\n        if (!id)\r\n            return undefined;\r\n        for (let i = 0; i < this.analyses.length; i++) {\r\n            let analysis = this.analyses[i];\r\n            if (analysis.id === id)\r\n                return i;\r\n        }\r\n        return undefined;\r\n    }\r\n    /**\r\n     * Checks if the ID of an analysis exists in the AnalysesManager\r\n     */\r\n    includes(id) {\r\n        const index = this.getAnalysisIndex(id);\r\n        return index === undefined ? false : !isNaN(index);\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQW5hbHlzZXNNYW5hZ2VyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL0FuYWx5c2VzTWFuYWdlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUN6RSxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQU1qRSxNQUFNLE9BQU8sZUFBZTtJQUcxQjtRQUNFLElBQUksQ0FBQyxRQUFRLEdBQUcsRUFBRSxDQUFDO0lBQ3JCLENBQUM7SUFFTSxXQUFXLENBQUMsUUFBa0I7UUFDbkMsSUFBSSxLQUFLLEdBQUcsSUFBSSxDQUFDLGdCQUFnQixDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUMvQyxJQUFJLEtBQUssS0FBSyxTQUFTLEVBQUU7WUFDdkIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7U0FDOUI7YUFBTTtZQUNMLElBQUksQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLEdBQUcsUUFBUSxDQUFDO1NBQ2pDO0lBQ0gsQ0FBQztJQUVNLFdBQVcsQ0FBQyxVQUE4QixFQUFFO1FBQ2pELE1BQU0sRUFBRSxHQUFHLEVBQUUsR0FBRyxPQUFPLENBQUM7UUFDeEIsSUFBSSxRQUFRLEdBQWUsRUFBRSxDQUFDO1FBQzlCLEtBQUssTUFBTSxRQUFRLElBQUksSUFBSSxDQUFDLFFBQVEsRUFBRTtZQUNwQyxJQUFJLENBQUMsR0FBRyxJQUFJLEdBQUcsQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxFQUFFO2dCQUNyQyxRQUFRLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO2FBQ3pCO1NBQ0Y7UUFDRCxPQUFPLFFBQVEsQ0FBQztJQUNsQixDQUFDO0lBRU0sVUFBVTtRQUNmLE1BQU0sT0FBTyxHQUFHLEVBQUUsQ0FBQztRQUNuQixLQUFLLE1BQU0sUUFBUSxJQUFJLElBQUks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","// Based on https://github.com/scijs/cholesky-solve\r\n\r\n/*\r\nThe MIT License (MIT)\r\n\r\nCopyright (c) 2013 Eric Arnebäck\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in\r\nall copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\nTHE SOFTWARE.\r\n*/\r\n\r\nfunction ldlSymbolic(\r\n  n /* A and L are n-by-n, where n >= 0 */,\r\n  Ap /* input of size n + 1, not modified */,\r\n  Ai /* input of size nz=Ap[n], not modified */,\r\n  Lp /* output of size n + 1, not defined on input */,\r\n  Parent /* output of size n, not defined on input */,\r\n  Lnz /* output of size n, not defined on input */,\r\n  Flag /* workspace of size n, not defn. on input or output */,\r\n) {\r\n  let i, k, p, kk, p2;\r\n\r\n  for (k = 0; k < n; k++) {\r\n    /* L(k,:) pattern: all nodes reachable in etree from nz in A(0:k-1,k) */\r\n    Parent[k] = -1; /* parent of k is not yet known */\r\n    Flag[k] = k; /* mark node k as visited */\r\n    Lnz[k] = 0; /* count of nonzeros in column k of L */\r\n    kk = k; /* kth original, or permuted, column */\r\n    p2 = Ap[kk + 1];\r\n    for (p = Ap[kk]; p < p2; p++) {\r\n      /* A (i,k) is nonzero (original or permuted A) */\r\n      i = Ai[p];\r\n\r\n      if (i < k) {\r\n        /* follow path from i to root of etree, stop at flagged node */\r\n        for (; Flag[i] !== k; i = Parent[i]) {\r\n          /* find parent of i if not yet determined */\r\n          if (Parent[i] === -1) Parent[i] = k;\r\n          Lnz[i]++; /* L (k,i) is nonzero */\r\n          Flag[i] = k; /* mark i as visited */\r\n        }\r\n      }\r\n    }\r\n  }\r\n  /* construct Lp index array from Lnz column counts */\r\n  Lp[0] = 0;\r\n  for (k = 0; k < n; k++) {\r\n    Lp[k + 1] = Lp[k] + Lnz[k];\r\n  }\r\n}\r\n\r\nfunction ldlNumeric(\r\n  n /* A and L are n-by-n, where n >= 0 */,\r\n  Ap /* input of size n+1, not modified */,\r\n  Ai /* input of size nz=Ap[n], not modified */,\r\n  Ax /* input of size nz=Ap[n], not modified */,\r\n  Lp /* input of size n+1, not modified */,\r\n  Parent /* input of size n, not modified */,\r\n  Lnz /* output of size n, not defn. on input */,\r\n  Li /* output of size lnz=Lp[n], not defined on input */,\r\n  Lx /* output of size lnz=Lp[n], not defined on input */,\r\n  D /* output of size n, not defined on input */,\r\n  Y /* workspace of size n, not defn. on input or output */,\r\n  Pattern /* workspace of size n, not defn. on input or output */,\r\n  Flag /* workspace of size n, not defn. on input or output */,\r\n) {\r\n  let yi, lKi;\r\n  let i, k, p, kk, p2, len, top;\r\n  for (k = 0; k < n; k++) {\r\n    /* compute nonzero Pattern of kth row of L, in topological order */\r\n    Y[k] = 0.0; /* Y(0:k) is now all zero */\r\n    top = n; /* stack for pattern is empty */\r\n    Flag[k] = k; /* mark node k as visited */\r\n    Lnz[k] = 0; /* count of nonzeros in column k of L */\r\n    kk = k; /* kth original, or permuted, column */\r\n    p2 = Ap[kk + 1];\r\n    for (p = Ap[kk]; p < p2; p++) {\r\n      i = Ai[p]; /* get A(i,k) */\r\n      if (i <= k) {\r\n        Y[i] += Ax[p]; /* scatter A(i,k) into Y (sum duplicates) */\r\n        for (len = 0; Flag[i] !== k; i = Parent[i]) {\r\n          Pattern[len++] = i; /* L(k,i) is nonzero */\r\n          Flag[i] = k; /* mark i as visited */\r\n        }\r\n        while (len > 0) Pattern[--top] = Pattern[--len];\r\n      }\r\n    }\r\n    /* compute numerical values kth row of L (a sparse triangular solve) */\r\n    D[k] = Y[k]; /* get D(k,k) and clear Y(k) */\r\n    Y[k] = 0.0;\r\n    for (; top < n; top++) {\r\n      i = Pattern[top]; /* Pattern[top:n-1] is pattern of L(:,k) */\r\n      yi = Y[i]; /* get and clear Y(i) */\r\n      Y[i] = 0.0;\r\n      p2 = Lp[i] + Lnz[i];\r\n      for (p = Lp[i]; p < p2; p++) {\r\n        Y[Li[p]] -= Lx[p] * yi;\r\n      }\r\n      lKi = yi / D[i]; /* the nonzero entry L(k,i) */\r\n      D[k] -= lKi * yi;\r\n      Li[p] = k; /* store L(k,i) in column form of L */\r\n      Lx[p] = lKi;\r\n      Lnz[i]++; /* increment count of nonzeros in col i */\r\n    }\r\n\r\n    if (D[k] === 0.0) return k; /* failure, D(k,k) is zero */\r\n  }\r\n\r\n  return n; /* success, diagonal of D is all nonzero */\r\n}\r\n\r\nfunction ldlLsolve(\r\n  n /* L is n-by-n, where n >= 0 */,\r\n  X /* size n. right-hand-side on input, soln. on output */,\r\n  Lp /* input of size n+1, not modified */,\r\n  Li /* input of size lnz=Lp[n], not modified */,\r\n  Lx /* input of size lnz=Lp[n], not modified */,\r\n) {\r\n  let j, p, p2;\r\n  for (j = 0; j < n; j++) {\r\n    p2 = Lp[j + 1];\r\n    for (p = Lp[j]; p < p2; p++) {\r\n      X[Li[p]] -= Lx[p] * X[j];\r\n    }\r\n  }\r\n}\r\nfunction ldlDsolve(\r\n  n /* D is n-by-n, where n >= 0 */,\r\n  X /* size n. right-hand-side on input, soln. on output */,\r\n  D /* input of size n, not modified */,\r\n) {\r\n  let j;\r\n  for (j = 0; j < n; j++) {\r\n    X[j] /= D[j];\r\n  }\r\n}\r\nfunction ldlLTsolve(\r\n  n /* L is n-by-n, where n >= 0 */,\r\n  X /* size n. right-hand-side on input, soln. on output */,\r\n  Lp /* input of size n+1, not modified */,\r\n  Li /* input of size lnz=Lp[n], not modified */,\r\n  Lx /* input of size lnz=Lp[n], not modified */,\r\n) {\r\n  let j, p, p2;\r\n  for (j = n - 1; j >= 0; j--) {\r\n    p2 = Lp[j + 1];\r\n    for (p = Lp[j]; p < p2; p++) {\r\n      X[j] -= Lx[p] * X[Li[p]];\r\n    }\r\n  }\r\n}\r\n\r\nfunction ldlPerm(\r\n  n /* size of X, B, and P */,\r\n  X /* output of size n. */,\r\n  B /* input of size n. */,\r\n  P /* input permutation array of size n. */,\r\n) {\r\n  let j;\r\n  for (j = 0; j < n; j++) {\r\n    X[j] = B[P[j]];\r\n  }\r\n}\r\n\r\nfunction ldlPermt(\r\n  n /* size of X, B, and P */,\r\n  X /* output of size n. */,\r\n  B /* input of size n. */,\r\n  P /* input permutation array of size n. */,\r\n) {\r\n  let j;\r\n  for (j = 0; j < n; j++) {\r\n    X[P[j]] = B[j];\r\n  }\r\n}\r\n\r\nfunction prepare(M, n, P) {\r\n  // if a permutation was specified, apply it.\r\n  if (P) {\r\n    let Pinv = new Array(n);\r\n\r\n    for (let k = 0; k < n; k++) {\r\n      Pinv[P[k]] = k;\r\n    }\r\n\r\n    let Mt = []; // scratch memory\r\n    // Apply permutation. We make M into P*M*P^T\r\n    for (let a = 0; a < M.length; ++a) {\r\n      let ar = Pinv[M[a][0]];\r\n      let ac = Pinv[M[a][1]];\r\n\r\n      // we only store the upper-diagonal elements(since we assume matrix is symmetric, we only need to store these)\r\n      // if permuted element is below diagonal, we simply transpose it.\r\n      if (ac < ar) {\r\n        let t = ac;\r\n        ac = ar;\r\n        ar = t;\r\n      }\r\n\r\n      Mt[a] = [];\r\n      Mt[a][0] = ar;\r\n      Mt[a][1] = ac;\r\n      Mt[a][2] = M[a][2];\r\n    }\r\n\r\n    M = Mt; // copy scratch memory.\r\n  } else {\r\n    // if P argument is null, we just use an identity permutation.\r\n    P = [];\r\n    for (let i = 0; i < n; ++i) {\r\n      P[i] = i;\r\n    }\r\n  }\r\n\r\n  // The sparse matrix we are decomposing is A.\r\n  // Now we shall create A from M.\r\n  let Ap = new Array(n + 1);\r\n  let Ai = new Array(M.length);\r\n  let Ax = new Array(M.length);\r\n\r\n  // count number of non-zero elements in columns.\r\n  let LNZ = [];\r\n  for (let i = 0; i < n; ++i) {\r\n    LNZ[i] = 0;\r\n  }\r\n  for (let a = 0; a < M.length; ++a) {\r\n    LNZ[M[a][1]]++;\r\n  }\r\n\r\n  Ap[0] = 0;\r\n  for (let i = 0; i < n; ++i) {\r\n    Ap[i + 1] = Ap[i] + LNZ[i];\r\n  }\r\n\r\n  let coloffset = [];\r\n  for (let a = 0; a < n; ++a) {\r\n    coloffset[a] = 0;\r\n  }\r\n\r\n  // go through all elements in M, and add them to sparse matrix A.\r\n  for (let i = 0; i < M.length; ++i) {\r\n    let e = M[i];\r\n    let col = e[1];\r\n\r\n    let adr = Ap[col] + coloffset[col];\r\n    Ai[adr] = e[0];\r\n    Ax[adr] = e[2];\r\n\r\n    coloffset[col]++;\r\n  }\r\n\r\n  let D = new Array(n);\r\n  let Y = new Array(n);\r\n  let Lp = new Array(n + 1);\r\n  let Parent = new Array(n);\r\n  let Lnz = new Array(n);\r\n  let Flag = new Array(n);\r\n  let Pattern = new Array(n);\r\n  let bp1 = new Array(n);\r\n  let x = new Array(n);\r\n  let d;\r\n\r\n  ldlSymbolic(n, Ap, Ai, Lp, Parent, Lnz, Flag);\r\n\r\n  let Lx = new Array(Lp[n]);\r\n  let Li = new Array(Lp[n]);\r\n\r\n  d = ldlNumeric(n, Ap, Ai, Ax, Lp, Parent, Lnz, Li, Lx, D, Y, Pattern, Flag);\r\n\r\n  if (d === n) {\r\n    return function (b) {\r\n      ldlPerm(n, bp1, b, P);\r\n      ldlLsolve(n, bp1, Lp, Li, Lx);\r\n      ldlDsolve(n, bp1, D);\r\n      ldlLTsolve(n, bp1, Lp, Li, Lx);\r\n      ldlPermt(n, x, bp1, P);\r\n\r\n      return x;\r\n    };\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport { prepare as default };\r\n","'use strict'\n\nmodule.exports = cuthillMckee\n\nfunction compareNum(a, b) { return a - b }\n\nfunction cuthillMckee(list, n) {\n  var adj = new Array(n)\n  var visited = new Array(n)\n  for(var i=0; i<n; ++i) {\n    adj[i]     = []\n    visited[i] = false\n  }\n\n  for(var i=0; i<list.length; ++i) {\n    var l = list[i]\n    adj[l[0]].push(l[1])\n  }\n\n  var toVisit = new Array(n)\n  var eol = 0\n  var ptr = 0\n  for(var i=0; i<n; ++i) {\n    if(visited[i]) {\n      continue\n    }\n    toVisit[eol++] = i\n    visited[i] = true\n    while(ptr < eol) {\n      var v = toVisit[ptr++]\n      var nbhd = adj[v]\n      nbhd.sort(compareNum)\n      for(var j=0; j<nbhd.length; ++j) {\n        var u = nbhd[j]\n        if(visited[u]) {\n          continue\n        }\n        visited[u] = true\n        toVisit[eol++] = u\n      }\n    }\n  }\n\n  var result = new Array(n)\n  for(var i=0; i<n; ++i) {\n    result[toVisit[i]] = i\n  }\n\n  return result\n}\n","import cuthillMckee from 'cuthill-mckee';\r\n\r\nconst getClosestNumber = (array = [], goal = 0) => {\r\n  const closest = array.reduce((prev, curr) => {\r\n    return Math.abs(curr - goal) < Math.abs(prev - goal) ? curr : prev;\r\n  });\r\n  return closest;\r\n};\r\n\r\nconst getCloseIndex = (array = [], goal = 0) => {\r\n  const closest = getClosestNumber(array, goal);\r\n  return array.indexOf(closest);\r\n};\r\n\r\nconst updateSystem = (matrix, y, weights) => {\r\n  let nbPoints = y.length;\r\n  let l = nbPoints - 1;\r\n  let newMatrix = new Array(matrix.length);\r\n  let newVector = new Float64Array(nbPoints);\r\n  for (let i = 0; i < l; i++) {\r\n    let w = weights[i];\r\n    let diag = i * 2;\r\n    let next = diag + 1;\r\n    newMatrix[diag] = matrix[diag].slice();\r\n    newMatrix[next] = matrix[next].slice();\r\n    if (w === 0) {\r\n      newVector[i] = 0;\r\n    } else {\r\n      newVector[i] = y[i] * w;\r\n      newMatrix[diag][2] += w;\r\n    }\r\n  }\r\n  newVector[l] = y[l] * weights[l];\r\n  newMatrix[l * 2] = matrix[l * 2].slice();\r\n  newMatrix[l * 2][2] += weights[l];\r\n\r\n  return [newMatrix, newVector];\r\n};\r\n\r\nconst getDeltaMatrix = (nbPoints, lambda) => {\r\n  let matrix = [];\r\n  let last = nbPoints - 1;\r\n  for (let i = 0; i < last; i++) {\r\n    matrix.push([i, i, lambda * 2]);\r\n    matrix.push([i + 1, i, -1 * lambda]);\r\n  }\r\n  matrix[0][2] = lambda;\r\n  matrix.push([last, last, lambda]);\r\n  return {\r\n    lowerTriangularNonZeros: matrix,\r\n    permutationEncodedArray: cuthillMckee(matrix, nbPoints),\r\n  };\r\n};\r\n\r\nexport { updateSystem, getDeltaMatrix, getCloseIndex, getClosestNumber };\r\n","import Cholesky from './choleskySolver';\r\nimport { updateSystem, getDeltaMatrix, getCloseIndex } from './utils';\r\n\r\n/**\r\n * Fit the baseline drift by iteratively changing weights of sum square error between the fitted baseline and original signals,\r\n * for further information about the parameters you can get the [paper of airPLS](https://github.com/zmzhang/airPLS/blob/master/airPLS_manuscript.pdf)\r\n * @param {Array<number>} x - x axis data useful when control points or zones are submitted\r\n * @param {Array<number>} y - Original data\r\n * @param {object} [options={}] - Options object\r\n * @param {number} [options.maxIterations = 100] - Maximal number of iterations if the method does not reach the stop criterion\r\n * @param {number} [options.factorCriterion = 0.001] - Factor of the sum of absolute value of original data, to compute stop criterion\r\n * @param {Array<number>} [options.weights = [1,1,...]] - Initial weights vector, default each point has the same weight\r\n * @param {number} [options.lambda = 100] - Factor of weights matrix in -> [I + lambda D'D]z = x\r\n * @param {Array<number>} [options.controlPoints = []] - Array of x axis values to force that baseline cross those points.\r\n * @param {Array<number>} [options.baseLineZones = []] - Array of x axis values (as from - to), to force that baseline cross those zones.\r\n * @returns {{corrected: Array<number>, error: number, iteration: number, baseline: Array<number>}}\r\n */\r\nfunction airPLS(x, y, options = {}) {\r\n  let {\r\n    maxIterations = 100,\r\n    lambda = 100,\r\n    factorCriterion = 0.001,\r\n    weights = new Array(y.length).fill(1),\r\n    controlPoints = [],\r\n    baseLineZones = [],\r\n  } = options;\r\n\r\n  if (controlPoints.length > 0) {\r\n    controlPoints.forEach((e, i, arr) => (arr[i] = getCloseIndex(x, e)));\r\n  }\r\n  if (baseLineZones.length > 0) {\r\n    baseLineZones.forEach((range) => {\r\n      let indexFrom = getCloseIndex(x, range.from);\r\n      let indexTo = getCloseIndex(x, range.to);\r\n      if (indexFrom > indexTo) [indexFrom, indexTo] = [indexTo, indexFrom];\r\n      for (let i = indexFrom; i < indexTo; i++) {\r\n        controlPoints.push(i);\r\n      }\r\n    });\r\n  }\r\n\r\n  let baseline, iteration;\r\n  let nbPoints = y.length;\r\n  let l = nbPoints - 1;\r\n  let sumNegDifferences = Number.MAX_SAFE_INTEGER;\r\n  let stopCriterion =\r\n    factorCriterion * y.reduce((sum, e) => Math.abs(e) + sum, 0);\r\n\r\n  let { lowerTriangularNonZeros, permutationEncodedArray } = getDeltaMatrix(\r\n    nbPoints,\r\n    lambda,\r\n  );\r\n\r\n  for (\r\n    iteration = 0;\r\n    iteration < maxIterations && Math.abs(sumNegDifferences) > stopCriterion;\r\n    iteration++\r\n  ) {\r\n    let [leftHandSide, rightHandSide] = updateSystem(\r\n      lowerTriangularNonZeros,\r\n      y,\r\n      weights,\r\n    );\r\n\r\n    let cho = Cholesky(leftHandSide, nbPoints, permutationEncodedArray);\r\n\r\n    baseline = cho(rightHandSide);\r\n\r\n    sumNegDifferences = 0;\r\n\r\n    let difference = y.map(calculateError);\r\n\r\n    let maxNegativeDiff = -1 * Number.MAX_SAFE_INTEGER;\r\n    for (let i = 1; i < l; i++) {\r\n      let diff = difference[i];\r\n      if (diff >= 0) {\r\n        weights[i] = 0;\r\n      } else {\r\n        weights[i] = Math.exp((iteration * diff) / sumNegDifferences);\r\n        if (maxNegativeDiff < diff) maxNegativeDiff = diff;\r\n      }\r\n    }\r\n\r\n    let value = Math.exp((iteration * maxNegativeDiff) / sumNegDifferences);\r\n    weights[0] = value;\r\n    weights[l] = value;\r\n    controlPoints.forEach((i) => (weights[i] = value));\r\n  }\r\n\r\n  return {\r\n    corrected: y.map((e, i) => e - baseline[i]),\r\n    baseline,\r\n    iteration,\r\n    error: sumNegDifferences,\r\n  };\r\n\r\n  function calculateError(e, i) {\r\n    let diff = e - baseline[i];\r\n    if (diff < 0) sumNegDifferences += diff;\r\n    return diff;\r\n  }\r\n}\r\n\r\nexport { airPLS as default };\r\n","import airpls from 'ml-airpls';\nimport sequentialFill from 'ml-array-sequential-fill';\n/**\n * Adaptive iteratively reweighted penalized least squares [1]\n *\n * This function calls ml-airpls\n *\n * References:\n * [1] Zhang, Z.-M.; Chen, S.; Liang, Y.-Z.\n * Baseline Correction Using Adaptive Iteratively Reweighted Penalized Least Squares.\n * Analyst 2010, 135 (5), 1138–1146. https://doi.org/10.1039/B922045C.\n * @export\n * @param {Array<number>} ys\n * @param {object} [options] - Options object\n * @param {Array<number>} [options.x] Optional, Independent axis variable. If not specified, we use a linear grid\n * @param {object} [options.regression] - Options for the regression\n * @param {number} [options.regression.maxIterations = 100] - Maximum number of allowed iterations\n * @param {function} [options.regression.§Regression = PolynomialRegression] - Regression class with a predict method\n * @param {*} [options.regression.regressionOptions] - Options for regressionFunction\n * @param {number} [options.regression.tolerance = 0.001] - Convergence error tolerance\n * @returns {BaselineOutput}\n */\nexport function airPLSBaseline(ys, options = {}) {\n  const numberPoints = ys.length;\n  let { x, regressionOptions } = options;\n  if (!x) {\n    x = sequentialFill({ from: 0, to: numberPoints - 1, size: numberPoints });\n  }\n  let output = airpls(x, ys, regressionOptions);\n\n  return { baseline: output.baseline, correctedSpectrum: output.corrected };\n}\n","export default function maybeToPrecision(value, digits) {\n  if (value < 0) {\n    value = 0 - value;\n    if (typeof digits === 'number') {\n      return `- ${value.toPrecision(digits)}`;\n    } else {\n      return `- ${value.toString()}`;\n    }\n  } else {\n    if (typeof digits === 'number') {\n      return value.toPrecision(digits);\n    } else {\n      return value.toString();\n    }\n  }\n}\n","import isAnyArray from 'is-any-array';\n\nexport default function checkArraySize(x, y) {\n  if (!isAnyArray(x) || !isAnyArray(y)) {\n    throw new TypeError('x and y must be arrays');\n  }\n  if (x.length !== y.length) {\n    throw new RangeError('x and y arrays must have the same length');\n  }\n}\n","import isAnyArray from 'is-any-array';\n\nexport { default as maybeToPrecision } from './maybeToPrecision';\nexport { default as checkArrayLength } from './checkArrayLength';\nexport default class BaseRegression {\n  constructor() {\n    if (new.target === BaseRegression) {\n      throw new Error('BaseRegression must be subclassed');\n    }\n  }\n\n  predict(x) {\n    if (typeof x === 'number') {\n      return this._predict(x);\n    } else if (isAnyArray(x)) {\n      const y = [];\n      for (let i = 0; i < x.length; i++) {\n        y.push(this._predict(x[i]));\n      }\n      return y;\n    } else {\n      throw new TypeError('x must be a number or array');\n    }\n  }\n\n  _predict() {\n    throw new Error('_predict must be implemented');\n  }\n\n  train() {\n    // Do nothing for this package\n  }\n\n  toString() {\n    return '';\n  }\n\n  toLaTeX() {\n    return '';\n  }\n\n  /**\n   * Return the correlation coefficient of determination (r) and chi-square.\n   * @param {Array<number>} x\n   * @param {Array<number>} y\n   * @return {object}\n   */\n  score(x, y) {\n    if (!isAnyArray(x) || !isAnyArray(y) || x.length !== y.length) {\n      throw new Error('x and y must be arrays of the same length');\n    }\n\n    const n = x.length;\n    const y2 = new Array(n);\n    for (let i = 0; i < n; i++) {\n      y2[i] = this._predict(x[i]);\n    }\n\n    let xSum = 0;\n    let ySum = 0;\n    let chi2 = 0;\n    let rmsd = 0;\n    let xSquared = 0;\n    let ySquared = 0;\n    let xY = 0;\n    for (let i = 0; i < n; i++) {\n      xSum += y2[i];\n      ySum += y[i];\n      xSquared += y2[i] * y2[i];\n      ySquared += y[i] * y[i];\n      xY += y2[i] * y[i];\n      if (y[i] !== 0) {\n        chi2 += ((y[i] - y2[i]) * (y[i] - y2[i])) / y[i];\n      }\n      rmsd += (y[i] - y2[i]) * (y[i] - y2[i]);\n    }\n\n    const r =\n      (n * xY - xSum * ySum) /\n      Math.sqrt((n * xSquared - xSum * xSum) * (n * ySquared - ySum * ySum));\n\n    return {\n      r: r,\n      r2: r * r,\n      chi2: chi2,\n      rmsd: Math.sqrt(rmsd / n),\n    };\n  }\n}\n","import { Matrix, MatrixTransposeView, solve } from 'ml-matrix';\nimport BaseRegression, {\n  checkArrayLength,\n  maybeToPrecision,\n} from 'ml-regression-base';\n\nexport default class PolynomialRegression extends BaseRegression {\n  constructor(x, y, degree) {\n    super();\n    if (x === true) {\n      this.degree = y.degree;\n      this.powers = y.powers;\n      this.coefficients = y.coefficients;\n    } else {\n      checkArrayLength(x, y);\n      regress(this, x, y, degree);\n    }\n  }\n\n  _predict(x) {\n    let y = 0;\n    for (let k = 0; k < this.powers.length; k++) {\n      y += this.coefficients[k] * Math.pow(x, this.powers[k]);\n    }\n    return y;\n  }\n\n  toJSON() {\n    return {\n      name: 'polynomialRegression',\n      degree: this.degree,\n      powers: this.powers,\n      coefficients: this.coefficients,\n    };\n  }\n\n  toString(precision) {\n    return this._toFormula(precision, false);\n  }\n\n  toLaTeX(precision) {\n    return this._toFormula(precision, true);\n  }\n\n  _toFormula(precision, isLaTeX) {\n    let sup = '^';\n    let closeSup = '';\n    let times = ' * ';\n    if (isLaTeX) {\n      sup = '^{';\n      closeSup = '}';\n      times = '';\n    }\n\n    let fn = '';\n    let str = '';\n    for (let k = 0; k < this.coefficients.length; k++) {\n      str = '';\n      if (this.coefficients[k] !== 0) {\n        if (this.powers[k] === 0) {\n          str = maybeToPrecision(this.coefficients[k], precision);\n        } else {\n          if (this.powers[k] === 1) {\n            str = `${maybeToPrecision(this.coefficients[k], precision) +\n              times}x`;\n          } else {\n            str = `${maybeToPrecision(this.coefficients[k], precision) +\n              times}x${sup}${this.powers[k]}${closeSup}`;\n          }\n        }\n\n        if (this.coefficients[k] > 0 && k !== this.coefficients.length - 1) {\n          str = ` + ${str}`;\n        } else if (k !== this.coefficients.length - 1) {\n          str = ` ${str}`;\n        }\n      }\n      fn = str + fn;\n    }\n    if (fn.charAt(0) === '+') {\n      fn = fn.slice(1);\n    }\n\n    return `f(x) = ${fn}`;\n  }\n\n  static load(json) {\n    if (json.name !== 'polynomialRegression') {\n      throw new TypeError('not a polynomial regression model');\n    }\n    return new PolynomialRegression(true, json);\n  }\n}\n\nfunction regress(pr, x, y, degree) {\n  const n = x.length;\n  let powers;\n  if (Array.isArray(degree)) {\n    powers = degree;\n    degree = powers.length;\n  } else {\n    degree++;\n    powers = new Array(degree);\n    for (let k = 0; k < degree; k++) {\n      powers[k] = k;\n    }\n  }\n  const F = new Matrix(n, degree);\n  const Y = new Matrix([y]);\n  for (let k = 0; k < degree; k++) {\n    for (let i = 0; i < n; i++) {\n      if (powers[k] === 0) {\n        F.set(i, k, 1);\n      } else {\n        F.set(i, k, Math.pow(x[i], powers[k]));\n      }\n    }\n  }\n\n  const FT = new MatrixTransposeView(F);\n  const A = FT.mmul(F);\n  const B = FT.mmul(new MatrixTransposeView(Y));\n\n  pr.degree = degree - 1;\n  pr.powers = powers;\n  pr.coefficients = solve(A, B).to1DArray();\n}\n","import PolynomialRegression from 'ml-regression-polynomial';\r\n\r\n/**\r\n * Iterative regression-based baseline correction\r\n * @param {Array<number>} x - Independent axis variable\r\n * @param {Array<number>} y - Dependent axis variable\r\n * @param {object} [options] - Options object\r\n * @param {number} [options.maxIterations = 100] - Maximum number of allowed iterations\r\n * @param {function} [options.Regression = PolynomialRegression] - Regression class with a predict method\r\n * @param {*} [options.regressionOptions] - Options for regressionFunction\r\n * @param {number} [options.tolerance = 0.001] - Convergence error tolerance\r\n * @return {{corrected: Array<number>, delta: number, iteration: number, baseline: Array<number>}}\r\n */\r\nexport default function baselineCorrectionRegression(x, y, options = {}) {\r\n  let {\r\n    maxIterations = 100,\r\n    Regression = PolynomialRegression,\r\n    regressionOptions,\r\n    tolerance = 0.001,\r\n  } = options;\r\n\r\n  if (!regressionOptions && Regression === PolynomialRegression) {\r\n    regressionOptions = 3;\r\n  }\r\n\r\n  let baseline = y.slice();\r\n  let fitting = y.slice();\r\n  let oldFitting = y;\r\n  let iteration = 0;\r\n  let delta;\r\n  let regression;\r\n  while (iteration < maxIterations) {\r\n    // Calculate the fitting result\r\n    regression = new Regression(x, baseline, regressionOptions);\r\n\r\n    delta = 0;\r\n    for (let i = 0; i < baseline.length; i++) {\r\n      fitting[i] = regression.predict(x[i]);\r\n      if (baseline[i] > fitting[i]) {\r\n        baseline[i] = fitting[i];\r\n      }\r\n\r\n      delta += Math.abs((fitting[i] - oldFitting[i]) / oldFitting[i]);\r\n    }\r\n\r\n    // Stop criterion\r\n    if (delta < tolerance) {\r\n      break;\r\n    } else {\r\n      oldFitting = fitting.slice();\r\n      iteration++;\r\n    }\r\n  }\r\n\r\n  // removes baseline\r\n  let corrected = new Array(baseline.length);\r\n  for (let j = 0; j < baseline.length; j++) {\r\n    corrected[j] = y[j] - baseline[j];\r\n  }\r\n\r\n  return {\r\n    corrected,\r\n    delta,\r\n    iteration,\r\n    baseline,\r\n    regression: regression,\r\n  };\r\n}\r\n","import sequentialFill from 'ml-array-sequential-fill';\nimport baselineCorrection from 'ml-baseline-correction-regression';\n\n/**\n * Iterative polynomial fitting [1]\n *\n * Implementation based on ml-baseline-correction-regression\n *\n * References:\n * [1] Gan, F.; Ruan, G.; Mo, J.\n * Baseline Correction by Improved Iterative Polynomial Fitting with Automatic Threshold.\n *  Chemometrics and Intelligent Laboratory Systems 2006, 82 (1), 59–65.\n * https://doi.org/10.1016/j.chemolab.2005.08.009.\n * @export\n * @param {Array<number>} ys\n * @param {object} [options] - Options object\n * @param {Array<number>} [options.x] Optional, Independent axis variable. If not specified, we use a linear grid\n * @param {Object} [options.regression]\n * @param {number} [options.regression.maxIterations = 100] - Maximum number of allowed iterations\n * @param {Object} [options.regression]\n * @param {function} [options.regression.Regression = PolynomialRegression] - Regression class with a predict method\n * @param {Object} [options.regression.regressionOptions] - Options for regressionFunction\n * @param {number} [options.regression.tolerance = 0.001] - Convergence error tolerance\n * @returns {BaselineOutput}\n */\nexport function iterativePolynomialBaseline(ys, options = {}) {\n  const numberPoints = ys.length;\n  let { x, regressionOptions } = options;\n  if (!x) {\n    x = sequentialFill({ from: 0, to: numberPoints - 1, size: numberPoints });\n  }\n\n  let output = baselineCorrection(x, ys, regressionOptions);\n\n  return { baseline: output.baseline, correctedSpectrum: output.corrected };\n}\n","import isArray from 'is-any-array';\n\n/**\n * Checks if input is valdi\n * @param {Array<number>} input\n\n */\nexport function xCheck(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n}\n\nexport function xCheckLengths(array1, array2) {\n  if (array1.length !== array2.length) {\n    throw new TypeError('Length of array1 and array2 must be identical');\n  }\n}\n","import { xCheck } from './xCheck';\n\n/**\n * This function pads an array\n * @param {Array} array - the array that will be padded\n * @param {object} [options={}]\n * @param {string} [options.algorithm=''] '', value, circular, duplicate\n * @param {number} [options.size=0] padding size before first element and after last element\n * @param {number} [options.value=0] value to use for padding (if algorithm='value')\n * @return {Array}\n */\nexport function xPadding(array, options = {}) {\n  const { size = 0, value = 0, algorithm = '' } = options;\n  xCheck(array);\n\n  if (!algorithm) {\n    if (array instanceof Float64Array) {\n      return array.slice();\n    } else {\n      return Float64Array.from(array);\n    }\n  }\n\n  let result = new Float64Array(array.length + size * 2);\n\n  for (let i = 0; i < array.length; i++) {\n    result[i + size] = array[i];\n  }\n\n  let fromEnd = size + array.length;\n  let toEnd = 2 * size + array.length;\n\n  switch (algorithm.toLowerCase()) {\n    case 'value':\n      for (let i = 0; i < size; i++) {\n        result[i] = value;\n      }\n      for (let i = fromEnd; i < toEnd; i++) {\n        result[i] = value;\n      }\n      break;\n    case 'duplicate':\n      for (let i = 0; i < size; i++) {\n        result[i] = array[0];\n      }\n      for (let i = fromEnd; i < toEnd; i++) {\n        result[i] = array[array.length - 1];\n      }\n      break;\n    case 'circular':\n      for (let i = 0; i < size; i++) {\n        result[i] =\n          array[(array.length - (size % array.length) + i) % array.length];\n      }\n      for (let i = 0; i < size; i++) {\n        result[i + fromEnd] = array[i % array.length];\n      }\n      break;\n    default:\n      throw Error('xPadding: unknown algorithm');\n  }\n\n  return result;\n}\n","import { xCheck } from './xCheck';\nimport { xPadding } from './xPadding';\n/**\n * This function calculates a rolling average\n * @param {Array<Number>} array - the array that will be rotated\n * @param {function} fct callback function that from an array returns a value.\n * @param {object} [options={}]\n * @param {number} [options.window=5] rolling window\n * @param {string} [options.padding.size=0] none, value, circular, duplicate\n * @param {string} [options.padding.algorithm='value'] none, value, circular, duplicate\n * @param {number} [options.padding.value=0] value to use for padding (if algorithm='value')\n * @return {Array<Number>}\n */\nexport function xRolling(array, fct, options = {}) {\n  xCheck(array);\n  if (typeof fct !== 'function') throw Error('fct has to be a function');\n\n  const { window = 5, padding = {} } = options;\n  const { size = window - 1, algorithm, value } = padding;\n\n  array = xPadding(array, { size, algorithm, value }); // ensure we get a copy and it is float64\n\n  const newArray = [];\n  for (let i = 0; i < array.length - window + 1; i++) {\n    let subArray = new Float64Array(array.buffer, i * 8, window);\n    // we will send a view to the original buffer\n    newArray.push(fct(subArray));\n  }\n\n  return newArray;\n}\n","import mean from 'ml-array-mean';\n\nimport { xRolling } from './xRolling';\n\n/**\n * This function calculates a rolling average\n * @param {Array<Number>} array - the array that will be rotated\n * @param {object} [options={}]\n * @param {number} [options.window=5] rolling window\n * @param {string} [options.padding.size=window-1] none, value, circular, duplicate\n * @param {string} [options.padding.algorithm=''] none, value, circular, duplicate\n * @param {number} [options.padding.value=0] value to use for padding (if algorithm='value')\n * @return {Array<Number>}\n */\nexport function xRollingAverage(array, options = {}) {\n  return xRolling(array, mean, options);\n}\n","import median from 'ml-array-median';\n\nimport { xRolling } from './xRolling';\n\n/**\n * This function calculates a rolling average\n * @param {Array<Number>} array - the array that will be rotated\n * @param {object} [options={}]\n * @param {number} [options.window=5] rolling window\n * @param {string} [options.padding.size=window-1] none, value, circular, duplicate\n * @param {string} [options.padding.algorithm=''] none, value, circular, duplicate\n * @param {number} [options.padding.value=0] value to use for padding (if algorithm='value')\n * @return {Array<Number>}\n */\nexport function xRollingMedian(array, options = {}) {\n  return xRolling(array, median, options);\n}\n","import { xRollingAverage } from 'ml-spectra-processing';\n\n/**\n\n *\n * @export\n * @param {Array<number>} ys\n * @param {Object} [options={}]\n * @param {number} [options.window] rolling window size, defaults to 10% of the length of the spectrum\n * @param {string} [options.padding.size=window-1] none, value, circular, duplicate\n * @param {string} [options.padding.algorithm='duplicate'] none, value, circular, duplicate\n * @param {number} [options.padding.value=0] value to use for padding (if algorithm='value')\n * @returns {BaselineOutput}\n */\nexport function rollingAverageBaseline(ys, options = {}) {\n  let window = Math.max(Math.round(ys.length * 0.1), 2);\n  let defaults = {\n    window: window,\n    padding: {\n      size: window - 1,\n      algorithm: 'duplicate',\n      value: 0,\n    },\n  };\n  let actualOptions = Object.assign({}, defaults, options);\n  let baseline = xRollingAverage(ys, actualOptions);\n  let corrected = new Float64Array(ys.length);\n  for (let i = 0; i < corrected.length; i++) {\n    corrected[i] = ys[i] - baseline[i];\n  }\n\n  return { baseline: baseline, correctedSpectrum: corrected };\n}\n","import isAnyArray from 'is-any-array';\nimport max from 'ml-array-max';\nimport mean from 'ml-array-mean';\nimport min from 'ml-array-min';\n\n/**\n * Rolling ball baseline correction algorithm.\n * From the abstract of (1):\n * \"This algorithm behaves equivalently to traditional polynomial backgrounds in simple spectra,\n * [...] and is considerably more robust for multiple overlapping peaks, rapidly varying background [...]\n *\n * The baseline is the trace one gets by rolling a ball below a spectrum. Algorithm has three steps:\n * Finding the minima in each window, find maxima among minima and then smooth over them by averaging.\n *\n * Reference:\n * (1) Kneen, M. A.; Annegarn, H. J.\n *     Algorithm for Fitting XRF, SEM and PIXE X-Ray Spectra Backgrounds.\n *     Nuclear Instruments and Methods in Physics Research Section B: Beam Interactions with Materials and Atoms 1996, 109–110, 209–213.\n *     https://doi.org/10.1016/0168-583X(95)00908-6.\n * (2) Kristian Hovde Liland, Bjørn-Helge Mevik, Roberto Canteri: baseline.\n *     https://cran.r-project.org/web/packages/baseline/index.html\n * @export\n * @param {Array} spectrum\n * @param {Object} [options={}]\n * @param {Number} [options.windowM] - width of local window for minimization/maximization, defaults to 4% of the spectrum length\n * @param {Number} [options.windowS] - width of local window for smoothing, defaults to 8% of the specturm length\n */\nexport function rollingBall(spectrum, options = {}) {\n  if (!isAnyArray(spectrum)) {\n    throw new Error('Spectrum must be an array');\n  }\n\n  if (spectrum.length === 0) {\n    throw new TypeError('Spectrum must not be empty');\n  }\n\n  const numberPoints = spectrum.length;\n  const maxima = new Float64Array(numberPoints);\n  const minima = new Float64Array(numberPoints);\n  const baseline = new Float64Array(numberPoints);\n\n  // windowM 4 percent of spectrum length\n  // windowS 8 percent of spectrum length\n  const {\n    windowM = Math.round(numberPoints * 0.04),\n    windowS = Math.round(numberPoints * 0.08),\n  } = options;\n\n  // fi(1) in original paper\n  for (let i = 0; i < spectrum.length; i++) {\n    let windowLeft = max([0, i - windowM]);\n    let windowRight = min([i + windowM + 1, spectrum.length]);\n    minima[i] = min(spectrum.slice(windowLeft, windowRight));\n  }\n\n  // fi in original paper\n  for (let i = 0; i < minima.length; i++) {\n    let windowLeft = max([0, i - windowM]);\n    let windowRight = min([i + windowM + 1, minima.length]);\n    maxima[i] = max(minima.slice(windowLeft, windowRight));\n  }\n\n  for (let i = 0; i < minima.length; i++) {\n    let windowLeft = max([0, i - windowS]);\n    let windowRight = min([i + windowS + 1, maxima.length]);\n    baseline[i] = mean(maxima.slice(windowLeft, windowRight));\n  }\n\n  return baseline;\n}\n","import { rollingBall } from 'ml-rolling-ball-baseline';\n\n/**\n * Rolling ball baseline correction algorithm.\n * From the abstract of (1):\n * \"This algorithm behaves equivalently to traditional polynomial backgrounds in simple spectra,\n * [...] and is considerably more robust for multiple overlapping peaks, rapidly varying background [...]\n *\n * The baseline is the trace one gets by rolling a ball below a spectrum. Algorithm has three steps:\n * Finding the minima in each window, find maxima among minima and then smooth over them by averaging.\n *\n * Algorithm described in (1), but in the implementation here the window width does not change.\n *\n * Reference:\n * (1) Kneen, M. A.; Annegarn, H. J.\n *     Algorithm for Fitting XRF, SEM and PIXE X-Ray Spectra Backgrounds.\n *     Nuclear Instruments and Methods in Physics Research Section B: Beam Interactions with Materials and Atoms 1996, 109–110, 209–213.\n *     https://doi.org/10.1016/0168-583X(95)00908-6.\n * (2) Kristian Hovde Liland, Bjørn-Helge Mevik, Roberto Canteri: baseline.\n *     https://cran.r-project.org/web/packages/baseline/index.html\n *\n * @export\n * @param {Array<number>} ys\n * @param {Object} [options={}]\n * @param {Number} [options.windowM] - width of local window for minimization/maximization, defaults to 4% of the spectrum length\n * @param {Number} [options.windowS] - width of local window for smoothing, defaults to 8% of the specturm length\n * @returns {BaselineOutput}\n */\nexport function rollingBallBaseline(ys, options = {}) {\n  const baseline = rollingBall(ys, options);\n  let corrected = new Float64Array(ys.length);\n  for (let i = 0; i < corrected.length; i++) {\n    corrected[i] = ys[i] - baseline[i];\n  }\n\n  return { baseline: baseline, correctedSpectrum: corrected };\n}\n","import { xRollingMedian } from 'ml-spectra-processing';\n\n/**\n\n *\n * @export\n * @param {Array<number>} ys\n * @param {Object} [options={}]\n * @param {number} [options.window] rolling window size, defaults to 10% of the length of the spectrum\n * @param {string} [options.padding.size=window-1] none, value, circular, duplicate\n * @param {string} [options.padding.algorithm='duplicate'] none, value, circular, duplicate\n * @param {number} [options.padding.value=0] value to use for padding (if algorithm='value')\n * @returns {BaselineOutput}\n */\nexport function rollingMedianBaseline(ys, options = {}) {\n  let window = Math.max(Math.round(ys.length * 0.1), 2);\n  let defaults = {\n    window: window,\n    padding: {\n      size: window - 1,\n      algorithm: 'duplicate',\n      value: 0,\n    },\n  };\n  let actualOptions = Object.assign({}, defaults, options);\n  let baseline = xRollingMedian(ys, actualOptions);\n  let corrected = new Float64Array(ys.length);\n  for (let i = 0; i < corrected.length; i++) {\n    corrected[i] = ys[i] - baseline[i];\n  }\n\n  return { baseline: baseline, correctedSpectrum: corrected };\n}\n","import isArray from 'is-any-array';\nimport max from 'ml-array-max';\nimport sum from 'ml-array-sum';\n\nfunction norm(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _options$algorithm = options.algorithm,\n      algorithm = _options$algorithm === void 0 ? 'absolute' : _options$algorithm,\n      _options$sumValue = options.sumValue,\n      sumValue = _options$sumValue === void 0 ? 1 : _options$sumValue,\n      _options$maxValue = options.maxValue,\n      maxValue = _options$maxValue === void 0 ? 1 : _options$maxValue;\n\n  if (!isArray(input)) {\n    throw new Error('input must be an array');\n  }\n\n  var output;\n\n  if (options.output !== undefined) {\n    if (!isArray(options.output)) {\n      throw new TypeError('output option must be an array if specified');\n    }\n\n    output = options.output;\n  } else {\n    output = new Array(input.length);\n  }\n\n  if (input.length === 0) {\n    throw new Error('input must not be empty');\n  }\n\n  switch (algorithm.toLowerCase()) {\n    case 'absolute':\n      {\n        var absoluteSumValue = absoluteSum(input) / sumValue;\n        if (absoluteSumValue === 0) return input.slice(0);\n\n        for (var i = 0; i < input.length; i++) {\n          output[i] = input[i] / absoluteSumValue;\n        }\n\n        return output;\n      }\n\n    case 'max':\n      {\n        var currentMaxValue = max(input);\n        if (currentMaxValue === 0) return input.slice(0);\n        var factor = maxValue / currentMaxValue;\n\n        for (var _i = 0; _i < input.length; _i++) {\n          output[_i] = input[_i] * factor;\n        }\n\n        return output;\n      }\n\n    case 'sum':\n      {\n        var sumFactor = sum(input) / sumValue;\n        if (sumFactor === 0) return input.slice(0);\n\n        for (var _i2 = 0; _i2 < input.length; _i2++) {\n          output[_i2] = input[_i2] / sumFactor;\n        }\n\n        return output;\n      }\n\n    default:\n      throw new Error(\"norm: unknown algorithm: \".concat(algorithm));\n  }\n}\n\nfunction absoluteSum(input) {\n  var sumValue = 0;\n\n  for (var i = 0; i < input.length; i++) {\n    sumValue += Math.abs(input[i]);\n  }\n\n  return sumValue;\n}\n\nexport default norm;\n","/**\n * Normalize an array of zones:\n * - ensure than from < to\n * - merge overlapping zones\n *\n * The method will always check if from if lower than to and will swap if required.\n * @param {Array} [zones=[]]\n * @param {object} [options={}]\n * @param {number} [options.from=Number.NEGATIVE_INFINITY] Specify min value of a zone\n * @param {number} [options.to=Number.POSITIVE_INFINITY] Specify max value of a zone\n */\n\nexport function normalize(zones = [], options = {}) {\n  if (zones.length === 0) return [];\n  let {\n    from = Number.NEGATIVE_INFINITY,\n    to = Number.POSITIVE_INFINITY,\n  } = options;\n  if (from > to) [from, to] = [to, from];\n\n  zones = JSON.parse(JSON.stringify(zones)).map((zone) =>\n    zone.from > zone.to ? { from: zone.to, to: zone.from } : zone,\n  );\n  zones = zones.sort((a, b) => {\n    if (a.from !== b.from) return a.from - b.from;\n    return a.to - b.to;\n  });\n\n  zones.forEach((zone) => {\n    if (from > zone.from) zone.from = from;\n    if (to < zone.to) zone.to = to;\n  });\n\n  zones = zones.filter((zone) => zone.from <= zone.to);\n  if (zones.length === 0) return [];\n\n  let currentZone = zones[0];\n  let result = [currentZone];\n  for (let i = 1; i < zones.length; i++) {\n    let zone = zones[i];\n    if (zone.from <= currentZone.to) {\n      currentZone.to = zone.to;\n    } else {\n      currentZone = zone;\n      result.push(currentZone);\n    }\n  }\n  return result;\n}\n","import { normalize } from './normalize';\n\n/**\n * Convert an array of exclusions and keep only from / to\n *\n * The method will always check if from if lower than to and will swap if required.\n * @param {Array} [exclusions=[]]\n * @param {object} [options={}]\n * @param {number} [options.from=Number.NEGATIVE_INFINITY] Specify min value of zones (after inversion)\n * @param {number} [options.to=Number.POSITIVE_INFINITY] Specify max value of zones (after inversion)\n */\n\nexport function invert(exclusions = [], options = {}) {\n  let {\n    from = Number.NEGATIVE_INFINITY,\n    to = Number.POSITIVE_INFINITY,\n  } = options;\n  if (from > to) [from, to] = [to, from];\n\n  exclusions = normalize(exclusions, { from, to });\n  if (exclusions.length === 0) return [{ from, to }];\n\n  let zones = [];\n  for (let i = 0; i < exclusions.length; i++) {\n    let exclusion = exclusions[i];\n    let nextExclusion = exclusions[i + 1];\n    if (i === 0) {\n      if (exclusion.from > from) {\n        zones.push({ from, to: exclusion.from });\n      }\n    }\n    if (i === exclusions.length - 1) {\n      if (exclusion.to < to) {\n        zones.push({ from: exclusion.to, to });\n      }\n    } else {\n      zones.push({ from: exclusion.to, to: nextExclusion.from });\n    }\n  }\n\n  return zones;\n}\n","import { normalize } from './normalize';\n\n/**\n * Add the number of points per zone to reach a specified total\n * @param {Array} [zones=[]]\n * @param {number} [numberOfPoints] Total number of points to distribute between zones\n * @param {object} [options={}]\n * @param {number} [options.from=Number.NEGATIVE_INFINITY] Specify min value of a zone\n * @param {number} [options.to=Number.POSITIVE_INFINITY] Specify max value of a zone\n */\n\nexport function zonesWithPoints(zones, numberOfPoints, options = {}) {\n  if (zones.length === 0) return zones;\n  zones = normalize(zones, options);\n\n  const totalSize = zones.reduce((previous, current) => {\n    return previous + (current.to - current.from);\n  }, 0);\n\n  let unitsPerPoint = totalSize / numberOfPoints;\n  let currentTotal = 0;\n  for (let i = 0; i < zones.length - 1; i++) {\n    let zone = zones[i];\n    zone.numberOfPoints = Math.min(\n      Math.round((zone.to - zone.from) / unitsPerPoint),\n      numberOfPoints - currentTotal,\n    );\n    currentTotal += zone.numberOfPoints;\n  }\n\n  zones[zones.length - 1].numberOfPoints = numberOfPoints - currentTotal;\n\n  return zones;\n}\n","/**\n * function that retrieves the getEquallySpacedData with the variant \"slot\"\n *\n * @param {Array<number>} x\n * @param {Array<number>} y\n * @param {number} from - Initial point\n * @param {number} to - Final point\n * @param {number} numberOfPoints\n * @return {Array} - Array of y's equally spaced with the variant \"slot\"\n */\nexport default function equallySpacedSlot(x, y, from, to, numberOfPoints) {\n  let xLength = x.length;\n\n  let step = (to - from) / (numberOfPoints > 1 ? numberOfPoints - 1 : 1);\n  let halfStep = step / 2;\n  let lastStep = x[x.length - 1] - x[x.length - 2];\n\n  let start = from - halfStep;\n  let output = new Array(numberOfPoints);\n\n  // Init main variables\n  let min = start;\n  let max = start + step;\n\n  let previousX = -Number.MAX_VALUE;\n  let previousY = 0;\n  let nextX = x[0];\n  let nextY = y[0];\n  let frontOutsideSpectra = 0;\n  let backOutsideSpectra = true;\n\n  let currentValue = 0;\n\n  // for slot algorithm\n  let currentPoints = 0;\n\n  let i = 1; // index of input\n  let j = 0; // index of output\n\n  main: while (true) {\n    if (previousX >= nextX) throw new Error('x must be an increasing serie');\n    while (previousX - max > 0) {\n      // no overlap with original point, just consume current value\n      if (backOutsideSpectra) {\n        currentPoints++;\n        backOutsideSpectra = false;\n      }\n\n      output[j] = currentPoints <= 0 ? 0 : currentValue / currentPoints;\n      j++;\n\n      if (j === numberOfPoints) {\n        break main;\n      }\n\n      min = max;\n      max += step;\n      currentValue = 0;\n      currentPoints = 0;\n    }\n\n    if (previousX > min) {\n      currentValue += previousY;\n      currentPoints++;\n    }\n\n    if (previousX === -Number.MAX_VALUE || frontOutsideSpectra > 1) {\n      currentPoints--;\n    }\n\n    previousX = nextX;\n    previousY = nextY;\n\n    if (i < xLength) {\n      nextX = x[i];\n      nextY = y[i];\n      i++;\n    } else {\n      nextX += lastStep;\n      nextY = 0;\n      frontOutsideSpectra++;\n    }\n  }\n\n  return output;\n}\n","/**\n * Function that calculates the integral of the line between two\n * x-coordinates, given the slope and intercept of the line.\n * @param {number} x0\n * @param {number} x1\n * @param {number} slope\n * @param {number} intercept\n * @return {number} integral value.\n */\nexport default function integral(x0, x1, slope, intercept) {\n  return (\n    0.5 * slope * x1 * x1 +\n    intercept * x1 -\n    (0.5 * slope * x0 * x0 + intercept * x0)\n  );\n}\n","import integral from './integral';\n\n/**\n * function that retrieves the getEquallySpacedData with the variant \"smooth\"\n *\n * @param {Array<number>} x\n * @param {Array<number>} y\n * @param {number} from - Initial point\n * @param {number} to - Final point\n * @param {number} numberOfPoints\n * @return {Array} - Array of y's equally spaced with the variant \"smooth\"\n */\nexport default function equallySpacedSmooth(x, y, from, to, numberOfPoints) {\n  let xLength = x.length;\n\n  let step = (to - from) / (numberOfPoints > 1 ? numberOfPoints - 1 : 1);\n  let halfStep = step / 2;\n\n  let output = new Array(numberOfPoints);\n\n  let initialOriginalStep = x[1] - x[0];\n  let lastOriginalStep = x[xLength - 1] - x[xLength - 2];\n\n  // Init main variables\n  let min = from - halfStep;\n  let max = from + halfStep;\n\n  let previousX = Number.MIN_VALUE;\n  let previousY = 0;\n  let nextX = x[0] - initialOriginalStep;\n  let nextY = 0;\n\n  let currentValue = 0;\n  let slope = 0;\n  let intercept = 0;\n  let sumAtMin = 0;\n  let sumAtMax = 0;\n\n  let i = 0; // index of input\n  let j = 0; // index of output\n\n  function getSlope(x0, y0, x1, y1) {\n    return (y1 - y0) / (x1 - x0);\n  }\n\n  let add = 0;\n  main: while (true) {\n    if (previousX <= min && min <= nextX) {\n      add = integral(0, min - previousX, slope, previousY);\n      sumAtMin = currentValue + add;\n    }\n\n    while (nextX - max >= 0) {\n      // no overlap with original point, just consume current value\n      add = integral(0, max - previousX, slope, previousY);\n      sumAtMax = currentValue + add;\n\n      output[j++] = (sumAtMax - sumAtMin) / step;\n\n      if (j === numberOfPoints) {\n        break main;\n      }\n\n      min = max;\n      max += step;\n      sumAtMin = sumAtMax;\n    }\n\n    currentValue += integral(previousX, nextX, slope, intercept);\n\n    previousX = nextX;\n    previousY = nextY;\n\n    if (i < xLength) {\n      nextX = x[i];\n      nextY = y[i];\n      i++;\n    } else if (i === xLength) {\n      nextX += lastOriginalStep;\n      nextY = 0;\n    }\n\n    slope = getSlope(previousX, previousY, nextX, nextY);\n    intercept = -slope * previousX + previousY;\n  }\n\n  return output;\n}\n","import sequentialFill from 'ml-array-sequential-fill';\nimport { zonesWithPoints, invert } from 'ml-zones';\n\nimport equallySpacedSlot from './equallySpacedSlot';\nimport equallySpacedSmooth from './equallySpacedSmooth';\n\n/**\n * Function that returns a Number array of equally spaced numberOfPoints\n * containing a representation of intensities of the spectra arguments x\n * and y.\n *\n * The options parameter contains an object in the following form:\n * from: starting point\n * to: last point\n * numberOfPoints: number of points between from and to\n * variant: \"slot\" or \"smooth\" - smooth is the default option\n *\n * The slot variant consist that each point in the new array is calculated\n * averaging the existing points between the slot that belongs to the current\n * value. The smooth variant is the same but takes the integral of the range\n * of the slot and divide by the step size between two points in the new array.\n *\n * If exclusions zone are present, zones are ignored !\n * @param {object} [arrayXY={}] - object containing 2 properties x and y (both an array)\n * @param {object} [options={}]\n * @param {number} [options.from=x[0]]\n * @param {number} [options.to=x[x.length-1]]\n * @param {string} [options.variant='smooth']\n * @param {number} [options.numberOfPoints=100]\n * @param {Array} [options.exclusions=[]] array of from / to that should be skipped for the generation of the points\n * @param {Array} [options.zones=[]] array of from / to that should be kept\n * @return {object<x: Array, y:Array>} new object with x / y array with the equally spaced data.\n */\n\nexport default function equallySpaced(arrayXY = {}, options = {}) {\n  let { x, y } = arrayXY;\n  let xLength = x.length;\n  let reverse = false;\n  if (x.length > 1 && x[0] > x[1]) {\n    x = x.slice().reverse();\n    y = y.slice().reverse();\n    reverse = true;\n  }\n\n  let {\n    from = x[0],\n    to = x[xLength - 1],\n    variant = 'smooth',\n    numberOfPoints = 100,\n    exclusions = [],\n    zones = [],\n  } = options;\n\n  if (xLength !== y.length) {\n    throw new RangeError(\"the x and y vector doesn't have the same size.\");\n  }\n\n  if (typeof from !== 'number' || isNaN(from)) {\n    throw new RangeError(\"'from' option must be a number\");\n  }\n\n  if (typeof to !== 'number' || isNaN(to)) {\n    throw new RangeError(\"'to' option must be a number\");\n  }\n\n  if (typeof numberOfPoints !== 'number' || isNaN(numberOfPoints)) {\n    throw new RangeError(\"'numberOfPoints' option must be a number\");\n  }\n\n  if (numberOfPoints < 2) {\n    throw new RangeError(\"'numberOfPoints' option must be greater than 1\");\n  }\n\n  if (zones.length === 0) {\n    zones = invert(exclusions, { from, to });\n  }\n\n  zones = zonesWithPoints(zones, numberOfPoints, { from, to });\n\n  let xResult = [];\n  let yResult = [];\n  for (let zone of zones) {\n    let zoneResult = processZone(\n      x,\n      y,\n      zone.from,\n      zone.to,\n      zone.numberOfPoints,\n      variant,\n      reverse,\n    );\n\n    xResult = xResult.concat(zoneResult.x);\n    yResult = yResult.concat(zoneResult.y);\n  }\n  if (reverse) {\n    if (from < to) {\n      return { x: xResult.reverse(), y: yResult.reverse() };\n    } else {\n      return { x: xResult, y: yResult };\n    }\n  } else {\n    if (from < to) {\n      return { x: xResult, y: yResult };\n    } else {\n      return { x: xResult.reverse(), y: yResult.reverse() };\n    }\n  }\n}\n\nfunction processZone(x, y, from, to, numberOfPoints, variant) {\n  if (numberOfPoints < 1) {\n    throw new RangeError('the number of points must be at least 1');\n  }\n  let output =\n    variant === 'slot'\n      ? equallySpacedSlot(x, y, from, to, numberOfPoints)\n      : equallySpacedSmooth(x, y, from, to, numberOfPoints);\n\n  return {\n    x: sequentialFill({\n      from,\n      to,\n      size: numberOfPoints,\n    }),\n    y: output,\n  };\n}\n","export default function getZones(from, to, exclusions = []) {\n  if (from > to) {\n    [from, to] = [to, from];\n  }\n\n  // in exclusions from and to have to be defined\n  exclusions = exclusions.filter(\n    (exclusion) => exclusion.from !== undefined && exclusion.to !== undefined,\n  );\n\n  exclusions = JSON.parse(JSON.stringify(exclusions));\n  // we ensure that from before to\n  exclusions.forEach((exclusion) => {\n    if (exclusion.from > exclusion.to) {\n      [exclusion.to, exclusion.from] = [exclusion.from, exclusion.to];\n    }\n  });\n\n  exclusions.sort((a, b) => a.from - b.from);\n\n  // we will rework the exclusions in order to remove overlap and outside range (from / to)\n  exclusions.forEach((exclusion) => {\n    if (exclusion.from < from) exclusion.from = from;\n    if (exclusion.to > to) exclusion.to = to;\n  });\n  for (let i = 0; i < exclusions.length - 1; i++) {\n    if (exclusions[i].to > exclusions[i + 1].from) {\n      exclusions[i].to = exclusions[i + 1].from;\n    }\n  }\n  exclusions = exclusions.filter((exclusion) => exclusion.from < exclusion.to);\n\n  if (!exclusions || exclusions.length === 0) {\n    return [{ from, to }];\n  }\n\n  let zones = [];\n  let currentFrom = from;\n  for (let exclusion of exclusions) {\n    if (currentFrom < exclusion.from) {\n      zones.push({\n        from: currentFrom,\n        to: exclusion.from,\n      });\n    }\n\n    currentFrom = exclusion.to;\n  }\n  if (currentFrom < to) {\n    zones.push({\n      from: currentFrom,\n      to: to,\n    });\n  }\n\n  return zones;\n}\n","import getZones from './getZones';\n\n/**\n * Filter an array x/y based on various criteria\n * x points are expected to be sorted\n *\n * @param {object} points\n * @param {object} [options={}]\n * @param {array} [options.from]\n * @param {array} [options.to]\n * @param {array} [options.exclusions=[]]\n * @return {{x: Array<number>, y: Array<number>}}\n */\n\nexport default function filterX(points, options = {}) {\n  const { x, y } = points;\n  const { from = x[0], to = x[x.length - 1], exclusions = [] } = options;\n\n  let zones = getZones(from, to, exclusions);\n\n  let currentZoneIndex = 0;\n  let newX = [];\n  let newY = [];\n  let position = 0;\n  while (position < x.length) {\n    if (\n      x[position] <= zones[currentZoneIndex].to &&\n      x[position] >= zones[currentZoneIndex].from\n    ) {\n      newX.push(x[position]);\n      newY.push(y[position]);\n    } else {\n      if (x[position] > zones[currentZoneIndex].to) {\n        currentZoneIndex++;\n        if (!zones[currentZoneIndex]) break;\n      }\n    }\n    position++;\n  }\n\n  return {\n    x: newX,\n    y: newY,\n  };\n}\n","'use strict';\n\nvar defaultOptions = {\n  size: 1,\n  value: 0\n};\n\n/**\n * Case when the entry is an array\n * @param data\n * @param options\n * @returns {Array}\n */\nfunction arrayCase(data, options) {\n  var len = data.length;\n  if (typeof options.size === 'number') {\n    options.size = [options.size, options.size];\n  }\n\n  var cond = len + options.size[0] + options.size[1];\n\n  var output;\n  if (options.output) {\n    if (options.output.length !== cond) {\n      throw new RangeError('Wrong output size');\n    }\n    output = options.output;\n  } else {\n    output = new Array(cond);\n  }\n\n  var i;\n  if (options.value === 'circular') {\n    for (i = 0; i < cond; i++) {\n      if (i < options.size[0]) {\n        output[i] = data[(len - (options.size[0] % len) + i) % len];\n      } else if (i < options.size[0] + len) {\n        output[i] = data[i - options.size[0]];\n      } else {\n        output[i] = data[(i - options.size[0]) % len];\n      }\n    }\n  } else if (options.value === 'replicate') {\n    for (i = 0; i < cond; i++) {\n      if (i < options.size[0]) output[i] = data[0];\n      else if (i < options.size[0] + len) output[i] = data[i - options.size[0]];\n      else output[i] = data[len - 1];\n    }\n  } else if (options.value === 'symmetric') {\n    if (options.size[0] > len || options.size[1] > len) {\n      throw new RangeError(\n        'expanded value should not be bigger than the data length'\n      );\n    }\n    for (i = 0; i < cond; i++) {\n      if (i < options.size[0]) output[i] = data[options.size[0] - 1 - i];\n      else if (i < options.size[0] + len) output[i] = data[i - options.size[0]];\n      else output[i] = data[2 * len + options.size[0] - i - 1];\n    }\n  } else {\n    for (i = 0; i < cond; i++) {\n      if (i < options.size[0]) output[i] = options.value;\n      else if (i < options.size[0] + len) output[i] = data[i - options.size[0]];\n      else output[i] = options.value;\n    }\n  }\n\n  return output;\n}\n\n/**\n * Case when the entry is a matrix\n * @param data\n * @param options\n * @returns {Array}\n */\nfunction matrixCase(data, options) {\n  // var row = data.length;\n  // var col = data[0].length;\n  if (options.size[0] === undefined) {\n    options.size = [options.size, options.size, options.size, options.size];\n  }\n  throw new Error('matrix not supported yet, sorry');\n}\n\n/**\n * Pads and array\n * @param {Array <number>} data\n * @param {object} options\n */\nfunction padArray(data, options) {\n  options = Object.assign({}, defaultOptions, options);\n  if (Array.isArray(data)) {\n    if (Array.isArray(data[0])) return matrixCase(data, options);\n    else return arrayCase(data, options);\n  } else {\n    throw new TypeError('data should be an array');\n  }\n}\n\nmodule.exports = padArray;\n","import { Matrix, MatrixTransposeView, inverse } from 'ml-matrix';\nimport padArray from 'ml-pad-array';\nfunction factorial(n) {\n    let r = 1;\n    while (n > 0)\n        r *= n--;\n    return r;\n}\nexport default function savitzkyGolay(data, h, options = {}) {\n    const { windowSize = 5, derivative = 1, polynomial = 2, pad = 'none', padValue = 'replicate', } = options;\n    if (windowSize % 2 === 0 || windowSize < 5 || !Number.isInteger(windowSize)) {\n        throw new RangeError('Invalid window size (should be odd and at least 5 integer number)');\n    }\n    if (derivative < 0 || !Number.isInteger(derivative)) {\n        throw new RangeError('Derivative should be a positive integer');\n    }\n    if (polynomial < 1 || !Number.isInteger(polynomial)) {\n        throw new RangeError('Polynomial should be a positive integer');\n    }\n    let C, norm;\n    let step = Math.floor(windowSize / 2);\n    if (pad === 'pre') {\n        data = padArray(data, { size: step, value: padValue });\n    }\n    let ans = new Array(data.length - 2 * step);\n    if (windowSize === 5 &&\n        polynomial === 2 &&\n        (derivative === 1 || derivative === 2)) {\n        if (derivative === 1) {\n            C = [-2, -1, 0, 1, 2];\n            norm = 10;\n        }\n        else {\n            C = [2, -1, -2, -1, 2];\n            norm = 7;\n        }\n    }\n    else {\n        let J = Matrix.ones(windowSize, polynomial + 1);\n        let inic = -(windowSize - 1) / 2;\n        for (let i = 0; i < J.rows; i++) {\n            for (let j = 0; j < J.columns; j++) {\n                if (inic + 1 !== 0 || j !== 0)\n                    J.set(i, j, Math.pow(inic + i, j));\n            }\n        }\n        let Jtranspose = new MatrixTransposeView(J);\n        let Jinv = inverse(Jtranspose.mmul(J));\n        C = Jinv.mmul(Jtranspose);\n        C = C.getRow(derivative);\n        norm = 1 / factorial(derivative);\n    }\n    let det = norm * Math.pow(h, derivative);\n    for (let k = 0; k < data.length - 2 * step; k++) {\n        let d = 0;\n        for (let l = 0; l < C.length; l++)\n            d += (C[l] * data[l + k]) / det;\n        ans[k] = d;\n    }\n    if (pad === 'post') {\n        ans = padArray(ans, { size: step, value: padValue });\n    }\n    return ans;\n}\n//# sourceMappingURL=index.js.map","'use strict';\n\nfunction compareNumbers(a, b) {\n    return a - b;\n}\n\n/**\n * Computes the sum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.sum = function sum(values) {\n    var sum = 0;\n    for (var i = 0; i < values.length; i++) {\n        sum += values[i];\n    }\n    return sum;\n};\n\n/**\n * Computes the maximum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.max = function max(values) {\n    var max = values[0];\n    var l = values.length;\n    for (var i = 1; i < l; i++) {\n        if (values[i] > max) max = values[i];\n    }\n    return max;\n};\n\n/**\n * Computes the minimum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.min = function min(values) {\n    var min = values[0];\n    var l = values.length;\n    for (var i = 1; i < l; i++) {\n        if (values[i] < min) min = values[i];\n    }\n    return min;\n};\n\n/**\n * Computes the min and max of the given values\n * @param {Array} values\n * @returns {{min: number, max: number}}\n */\nexports.minMax = function minMax(values) {\n    var min = values[0];\n    var max = values[0];\n    var l = values.length;\n    for (var i = 1; i < l; i++) {\n        if (values[i] < min) min = values[i];\n        if (values[i] > max) max = values[i];\n    }\n    return {\n        min: min,\n        max: max\n    };\n};\n\n/**\n * Computes the arithmetic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.arithmeticMean = function arithmeticMean(values) {\n    var sum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        sum += values[i];\n    }\n    return sum / l;\n};\n\n/**\n * {@link arithmeticMean}\n */\nexports.mean = exports.arithmeticMean;\n\n/**\n * Computes the geometric mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.geometricMean = function geometricMean(values) {\n    var mul = 1;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        mul *= values[i];\n    }\n    return Math.pow(mul, 1 / l);\n};\n\n/**\n * Computes the mean of the log of the given values\n * If the return value is exponentiated, it gives the same result as the\n * geometric mean.\n * @param {Array} values\n * @returns {number}\n */\nexports.logMean = function logMean(values) {\n    var lnsum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        lnsum += Math.log(values[i]);\n    }\n    return lnsum / l;\n};\n\n/**\n * Computes the weighted grand mean for a list of means and sample sizes\n * @param {Array} means - Mean values for each set of samples\n * @param {Array} samples - Number of original values for each set of samples\n * @returns {number}\n */\nexports.grandMean = function grandMean(means, samples) {\n    var sum = 0;\n    var n = 0;\n    var l = means.length;\n    for (var i = 0; i < l; i++) {\n        sum += samples[i] * means[i];\n        n += samples[i];\n    }\n    return sum / n;\n};\n\n/**\n * Computes the truncated mean of the given values using a given percentage\n * @param {Array} values\n * @param {number} percent - The percentage of values to keep (range: [0,1])\n * @param {boolean} [alreadySorted=false]\n * @returns {number}\n */\nexports.truncatedMean = function truncatedMean(values, percent, alreadySorted) {\n    if (alreadySorted === undefined) alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n    var l = values.length;\n    var k = Math.floor(l * percent);\n    var sum = 0;\n    for (var i = k; i < (l - k); i++) {\n        sum += values[i];\n    }\n    return sum / (l - 2 * k);\n};\n\n/**\n * Computes the harmonic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.harmonicMean = function harmonicMean(values) {\n    var sum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        if (values[i] === 0) {\n            throw new RangeError('value at index ' + i + 'is zero');\n        }\n        sum += 1 / values[i];\n    }\n    return l / sum;\n};\n\n/**\n * Computes the contraharmonic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.contraHarmonicMean = function contraHarmonicMean(values) {\n    var r1 = 0;\n    var r2 = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        r1 += values[i] * values[i];\n        r2 += values[i];\n    }\n    if (r2 < 0) {\n        throw new RangeError('sum of values is negative');\n    }\n    return r1 / r2;\n};\n\n/**\n * Computes the median of the given values\n * @param {Array} values\n * @param {boolean} [alreadySorted=false]\n * @returns {number}\n */\nexports.median = function median(values, alreadySorted) {\n    if (alreadySorted === undefined) alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n    var l = values.length;\n    var half = Math.floor(l / 2);\n    if (l % 2 === 0) {\n        return (values[half - 1] + values[half]) * 0.5;\n    } else {\n        return values[half];\n    }\n};\n\n/**\n * Computes the variance of the given values\n * @param {Array} values\n * @param {boolean} [unbiased=true] - if true, divide by (n-1); if false, divide by n.\n * @returns {number}\n */\nexports.variance = function variance(values, unbiased) {\n    if (unbiased === undefined) unbiased = true;\n    var theMean = exports.mean(values);\n    var theVariance = 0;\n    var l = values.length;\n\n    for (var i = 0; i < l; i++) {\n        var x = values[i] - theMean;\n        theVariance += x * x;\n    }\n\n    if (unbiased) {\n        return theVariance / (l - 1);\n    } else {\n        return theVariance / l;\n    }\n};\n\n/**\n * Computes the standard deviation of the given values\n * @param {Array} values\n * @param {boolean} [unbiased=true] - if true, divide by (n-1); if false, divide by n.\n * @returns {number}\n */\nexports.standardDeviation = function standardDeviation(values, unbiased) {\n    return Math.sqrt(exports.variance(values, unbiased));\n};\n\nexports.standardError = function standardError(values) {\n    return exports.standardDeviation(values) / Math.sqrt(values.length);\n};\n\n/**\n * IEEE Transactions on biomedical engineering, vol. 52, no. 1, january 2005, p. 76-\n * Calculate the standard deviation via the Median of the absolute deviation\n *  The formula for the standard deviation only holds for Gaussian random variables.\n * @returns {{mean: number, stdev: number}}\n */\nexports.robustMeanAndStdev = function robustMeanAndStdev(y) {\n    var mean = 0, stdev = 0;\n    var length = y.length, i = 0;\n    for (i = 0; i < length; i++) {\n        mean += y[i];\n    }\n    mean /= length;\n    var averageDeviations = new Array(length);\n    for (i = 0; i < length; i++)\n        averageDeviations[i] = Math.abs(y[i] - mean);\n    averageDeviations.sort(compareNumbers);\n    if (length % 2 === 1) {\n        stdev = averageDeviations[(length - 1) / 2] / 0.6745;\n    } else {\n        stdev = 0.5 * (averageDeviations[length / 2] + averageDeviations[length / 2 - 1]) / 0.6745;\n    }\n\n    return {\n        mean: mean,\n        stdev: stdev\n    };\n};\n\nexports.quartiles = function quartiles(values, alreadySorted) {\n    if (typeof (alreadySorted) === 'undefined') alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n\n    var quart = values.length / 4;\n    var q1 = values[Math.ceil(quart) - 1];\n    var q2 = exports.median(values, true);\n    var q3 = values[Math.ceil(quart * 3) - 1];\n\n    return {q1: q1, q2: q2, q3: q3};\n};\n\nexports.pooledStandardDeviation = function pooledStandardDeviation(samples, unbiased) {\n    return Math.sqrt(exports.pooledVariance(samples, unbiased));\n};\n\nexports.pooledVariance = function pooledVariance(samples, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var sum = 0;\n    var length = 0, l = samples.length;\n    for (var i = 0; i < l; i++) {\n        var values = samples[i];\n        var vari = exports.variance(values);\n\n        sum += (values.length - 1) * vari;\n\n        if (unbiased)\n            length += values.length - 1;\n        else\n            length += values.length;\n    }\n    return sum / length;\n};\n\nexports.mode = function mode(values) {\n    var l = values.length,\n        itemCount = new Array(l),\n        i;\n    for (i = 0; i < l; i++) {\n        itemCount[i] = 0;\n    }\n    var itemArray = new Array(l);\n    var count = 0;\n\n    for (i = 0; i < l; i++) {\n        var index = itemArray.indexOf(values[i]);\n        if (index >= 0)\n            itemCount[index]++;\n        else {\n            itemArray[count] = values[i];\n            itemCount[count] = 1;\n            count++;\n        }\n    }\n\n    var maxValue = 0, maxIndex = 0;\n    for (i = 0; i < count; i++) {\n        if (itemCount[i] > maxValue) {\n            maxValue = itemCount[i];\n            maxIndex = i;\n        }\n    }\n\n    return itemArray[maxIndex];\n};\n\nexports.covariance = function covariance(vector1, vector2, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var mean1 = exports.mean(vector1);\n    var mean2 = exports.mean(vector2);\n\n    if (vector1.length !== vector2.length)\n        throw 'Vectors do not have the same dimensions';\n\n    var cov = 0, l = vector1.length;\n    for (var i = 0; i < l; i++) {\n        var x = vector1[i] - mean1;\n        var y = vector2[i] - mean2;\n        cov += x * y;\n    }\n\n    if (unbiased)\n        return cov / (l - 1);\n    else\n        return cov / l;\n};\n\nexports.skewness = function skewness(values, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var theMean = exports.mean(values);\n\n    var s2 = 0, s3 = 0, l = values.length;\n    for (var i = 0; i < l; i++) {\n        var dev = values[i] - theMean;\n        s2 += dev * dev;\n        s3 += dev * dev * dev;\n    }\n    var m2 = s2 / l;\n    var m3 = s3 / l;\n\n    var g = m3 / (Math.pow(m2, 3 / 2.0));\n    if (unbiased) {\n        var a = Math.sqrt(l * (l - 1));\n        var b = l - 2;\n        return (a / b) * g;\n    } else {\n        return g;\n    }\n};\n\nexports.kurtosis = function kurtosis(values, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var theMean = exports.mean(values);\n    var n = values.length, s2 = 0, s4 = 0;\n\n    for (var i = 0; i < n; i++) {\n        var dev = values[i] - theMean;\n        s2 += dev * dev;\n        s4 += dev * dev * dev * dev;\n    }\n    var m2 = s2 / n;\n    var m4 = s4 / n;\n\n    if (unbiased) {\n        var v = s2 / (n - 1);\n        var a = (n * (n + 1)) / ((n - 1) * (n - 2) * (n - 3));\n        var b = s4 / (v * v);\n        var c = ((n - 1) * (n - 1)) / ((n - 2) * (n - 3));\n\n        return a * b - 3 * c;\n    } else {\n        return m4 / (m2 * m2) - 3;\n    }\n};\n\nexports.entropy = function entropy(values, eps) {\n    if (typeof (eps) === 'undefined') eps = 0;\n    var sum = 0, l = values.length;\n    for (var i = 0; i < l; i++)\n        sum += values[i] * Math.log(values[i] + eps);\n    return -sum;\n};\n\nexports.weightedMean = function weightedMean(values, weights) {\n    var sum = 0, l = values.length;\n    for (var i = 0; i < l; i++)\n        sum += values[i] * weights[i];\n    return sum;\n};\n\nexports.weightedStandardDeviation = function weightedStandardDeviation(values, weights) {\n    return Math.sqrt(exports.weightedVariance(values, weights));\n};\n\nexports.weightedVariance = function weightedVariance(values, weights) {\n    var theMean = exports.weightedMean(values, weights);\n    var vari = 0, l = values.length;\n    var a = 0, b = 0;\n\n    for (var i = 0; i < l; i++) {\n        var z = values[i] - theMean;\n        var w = weights[i];\n\n        vari += w * (z * z);\n        b += w;\n        a += w * w;\n    }\n\n    return vari * (b / (b * b - a));\n};\n\nexports.center = function center(values, inPlace) {\n    if (typeof (inPlace) === 'undefined') inPlace = false;\n\n    var result = values;\n    if (!inPlace)\n        result = [].concat(values);\n\n    var theMean = exports.mean(result), l = result.length;\n    for (var i = 0; i < l; i++)\n        result[i] -= theMean;\n};\n\nexports.standardize = function standardize(values, standardDev, inPlace) {\n    if (typeof (standardDev) === 'undefined') standardDev = exports.standardDeviation(values);\n    if (typeof (inPlace) === 'undefined') inPlace = false;\n    var l = values.length;\n    var result = inPlace ? values : new Array(l);\n    for (var i = 0; i < l; i++)\n        result[i] = values[i] / standardDev;\n    return result;\n};\n\nexports.cumulativeSum = function cumulativeSum(array) {\n    var l = array.length;\n    var result = new Array(l);\n    result[0] = array[0];\n    for (var i = 1; i < l; i++)\n        result[i] = result[i - 1] + array[i];\n    return result;\n};\n","import { airPLSBaseline, rollingAverageBaseline, iterativePolynomialBaseline, rollingBallBaseline, rollingMedianBaseline, } from 'baselines';\r\nimport max from 'ml-array-max';\r\nimport min from 'ml-array-min';\r\nimport normed from 'ml-array-normed';\r\nimport rescale from 'ml-array-rescale';\r\nimport equallySpaced from 'ml-array-xy-equally-spaced';\r\nimport filterX from 'ml-array-xy-filter-x';\r\nimport savitzkyGolay from 'ml-savitzky-golay';\r\nimport { xDivide, xSubtract, xMultiply, xAdd, xIsMonotone, xyEnsureGrowingX, } from 'ml-spectra-processing';\r\nimport Stat from 'ml-stat/array';\r\nexport function getNormalizedSpectrum(spectrum, options = {}) {\r\n    var _a;\r\n    let data = {\r\n        x: spectrum.variables.x.data,\r\n        y: spectrum.variables.y.data,\r\n    };\r\n    let newSpectrum = {\r\n        variables: {\r\n            x: {\r\n                data: spectrum.variables.x.data,\r\n                units: spectrum.variables.x.units,\r\n                label: spectrum.variables.x.label,\r\n            },\r\n            y: {\r\n                data: spectrum.variables.y.data,\r\n                units: spectrum.variables.y.units,\r\n                label: spectrum.variables.y.label,\r\n            },\r\n        },\r\n    };\r\n    if (spectrum.title)\r\n        newSpectrum.title = spectrum.title;\r\n    if (spectrum.dataType)\r\n        newSpectrum.dataType = spectrum.dataType;\r\n    if (spectrum.meta)\r\n        newSpectrum.meta = spectrum.meta;\r\n    let { from = spectrum.variables.x.min, to = spectrum.variables.x.max, numberOfPoints, filters = [], exclusions = [], processing = '', keepYUnits = false, } = options;\r\n    let { x, y } = filterX(data, { from, to });\r\n    switch (processing) {\r\n        case 'Smoothing':\r\n            if (options.processing) {\r\n                y = savitzkyGolay(y, 1, {\r\n                    derivative: 0,\r\n                    polynomial: 3,\r\n                    windowSize: 5,\r\n                    pad: 'post',\r\n                    padValue: 'replicate'\r\n                });\r\n                x = x.slice(2, x.length - 2);\r\n            }\r\n            break;\r\n        case 'firstDerivative':\r\n            if (options.processing) {\r\n                newSpectrum.variables.y.units = '';\r\n                newSpectrum.variables.y.label =\r\n                    newSpectrum.variables.y.label &&\r\n                        `1st derivative of ${newSpectrum.variables.y.label.replace(/\\s*\\[.*\\]/, '')}`;\r\n                y = savitzkyGolay(y, 1, {\r\n                    derivative: 1,\r\n                    polynomial: 2,\r\n                    windowSize: 5,\r\n                });\r\n                x = x.slice(2, x.length - 2);\r\n            }\r\n            break;\r\n        case 'secondDerivative':\r\n            if (options.processing) {\r\n                newSpectrum.variables.y.units = '';\r\n                newSpectrum.variables.y.label =\r\n                    newSpectrum.variables.y.label &&\r\n                        `2nd derivative of ${newSpectrum.variables.y.label.replace(/\\s*\\[.*\\]/, '')}`;\r\n                y = savitzkyGolay(y, 1, {\r\n                    derivative: 2,\r\n                    polynomial: 2,\r\n                    windowSize: 5,\r\n                });\r\n                x = x.slice(2, x.length - 2);\r\n            }\r\n            break;\r\n        case 'thirdDerivative':\r\n            if (options.processing) {\r\n                newSpectrum.variables.y.units = '';\r\n                newSpectrum.variables.y.label =\r\n                    newSpectrum.variables.y.label &&\r\n                        `3rd derivative of ${newSpectrum.variables.y.label.replace(/\\s*\\[.*\\]/, '')}`;\r\n                y = savitzkyGolay(y, 1, {\r\n                    derivative: 3,\r\n                    polynomial: 2,\r\n                    windowSize: 5,\r\n                });\r\n                x = x.slice(2, x.length - 2);\r\n            }\r\n            break;\r\n        default:\r\n    }\r\n    if (!keepYUnits && filters.length) {\r\n        // filters change the y axis, we get rid of the units\r\n        newSpectrum.variables.y.units = '';\r\n        newSpectrum.variables.y.label = (_a = newSpectrum.variables.y.label) === null || _a === void 0 ? void 0 : _a.replace(/\\s*\\[.*\\]/, '');\r\n    }\r\n    for (let filter of filters) {\r\n        let filterOptions = filter.options || {};\r\n        switch (filter.name.toLowerCase()) {\r\n            case 'centermean': {\r\n                let mean = Stat.mean(y);\r\n                y = xSubtract(y, mean);\r\n                break;\r\n            }\r\n            case 'dividebysd': {\r\n                let std = Stat.standardDeviation(y);\r\n                y = xDivide(y, std);\r\n                break;\r\n            }\r\n            case 'normalize': {\r\n                y = normed(y, {\r\n                    sumValue: filterOptions.value ? Number(filterOptions.value) : 1,\r\n                    algorithm: 'absolute',\r\n                });\r\n                break;\r\n            }\r\n            case 'rescale': {\r\n                y = rescale(y, {\r\n                    min: filterOptions.min ? Number(filterOptions.min) : 0,\r\n                    max: filterOptions.max ? Number(filterOptions.max) : 1,\r\n                });\r\n                break;\r\n            }\r\n            case 'dividebymax': {\r\n                let maxValue = max(y);\r\n                y = xDivide(y, maxValue);\r\n                break;\r\n            }\r\n            case 'multiply': {\r\n                y = xMultiply(y, filterOptions.value ? Number(filterOptions.value) : 1);\r\n                break;\r\n            }\r\n            case 'add': {\r\n                y = xAdd(y, filterOptions.value ? Number(filterOptions.value) : 0);\r\n                break;\r\n            }\r\n            case 'airplsbaseline': {\r\n                y = airPLSBaseline(y, filterOptions).correctedSpectrum;\r\n                break;\r\n            }\r\n            case 'rollingaveragebaseline': {\r\n                y = rollingAverageBaseline(y, filterOptions).correctedSpectrum;\r\n                break;\r\n            }\r\n            case 'iterativepolynomialbaseline': {\r\n                y = iterativePolynomialBaseline(y, undefined, filterOptions).correctedSpectrum;\r\n                break;\r\n            }\r\n            case 'rollingballbaseline': {\r\n                y = rollingBallBaseline(y, filterOptions).correctedSpectrum;\r\n                break;\r\n            }\r\n            case 'rollingmedianbaseline': {\r\n                y = rollingMedianBaseline(y, filterOptions).correctedSpectrum;\r\n                break;\r\n            }\r\n            case 'ensuregrowing': {\r\n                const ans = xyEnsureGrowingX({ x, y });\r\n                x = ans.x;\r\n                y = ans.y;\r\n                break;\r\n            }\r\n            case '':\r\n            case undefined:\r\n                break;\r\n            default:\r\n                throw new Error(`Unknown process kind: ${filter.name}`);\r\n        }\r\n    }\r\n    if (!numberOfPoints) {\r\n        data = filterX({ x, y }, { from, to, exclusions });\r\n    }\r\n    else {\r\n        data = equallySpaced({ x, y }, { from, to, numberOfPoints, exclusions });\r\n    }\r\n    newSpectrum.variables.x.data = x;\r\n    newSpectrum.variables.x.min = min(x);\r\n    newSpectrum.variables.x.max = max(x);\r\n    newSpectrum.variables.x.isMonotone = xIsMonotone(x);\r\n    newSpectrum.variables.y.data = y;\r\n    newSpectrum.variables.y.min = min(y);\r\n    newSpectrum.variables.y.max = max(y);\r\n    newSpectrum.variables.y.isMonotone = xIsMonotone(y);\r\n    return newSpectrum;\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","/*\nThe MIT License (MIT)\nCopyright © 2006-2007 Kevin C. Olbrich\nCopyright © 2010-2016 LIM SAS (http://lim.eu) - Julien Sanchez\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n*/\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Qty = factory());\n}(this, (function () { 'use strict';\n\n  /**\n   * Tests if a value is a string\n   *\n   * @param {*} value - Value to test\n   *\n   * @returns {boolean} true if value is a string, false otherwise\n   */\n  function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n  }\n\n  /*\n   * Prefer stricter Number.isFinite if currently supported.\n   * To be dropped when ES6 is finalized. Obsolete browsers will\n   * have to use ES6 polyfills.\n   */\n  var isFiniteImpl = Number.isFinite || window.isFinite;\n  /**\n   * Tests if a value is a number\n   *\n   * @param {*} value - Value to test\n   *\n   * @returns {boolean} true if value is a number, false otherwise\n   */\n  function isNumber(value) {\n    // Number.isFinite allows not to consider NaN or '1' as numbers\n    return isFiniteImpl(value);\n  }\n\n  /*\n   * Identity function\n   */\n  function identity(value) {\n    return value;\n  }\n\n  /**\n   * Returns unique strings from list\n   *\n   * @param {string[]} strings - array of strings\n   *\n   *\n   * @returns {string[]} a new array of strings without duplicates\n   */\n  function uniq(strings) {\n    var seen = {};\n    return strings.filter(function(item) {\n      return seen.hasOwnProperty(item) ? false : (seen[item] = true);\n    });\n  }\n\n  function compareArray(array1, array2) {\n    if (array2.length !== array1.length) {\n      return false;\n    }\n    for (var i = 0; i < array1.length; i++) {\n      if (array2[i].compareArray) {\n        if (!array2[i].compareArray(array1[i])) {\n          return false;\n        }\n      }\n      if (array2[i] !== array1[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  function assign(target, properties) {\n    Object.keys(properties).forEach(function(key) {\n      target[key] = properties[key];\n    });\n  }\n\n  /**\n   * Safely multiplies numbers while avoiding floating errors\n   * like 0.1 * 0.1 => 0.010000000000000002\n   *\n   * @param {...number} numbers - numbers to multiply\n   *\n   * @returns {number} result\n   */\n  function mulSafe() {\n    var result = 1, decimals = 0;\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = arguments[i];\n      decimals = decimals + getFractional(arg);\n      result *= arg;\n    }\n\n    return decimals !== 0 ? round(result, decimals) : result;\n  }\n\n  /**\n   * Safely divides two numbers while avoiding floating errors\n   * like 0.3 / 0.05 => 5.999999999999999\n   *\n   * @returns {number} result\n   * @param {number} num Numerator\n   * @param {number} den Denominator\n   */\n  function divSafe(num, den) {\n    if (den === 0) {\n      throw new Error(\"Divide by zero\");\n    }\n\n    var factor = Math.pow(10, getFractional(den));\n    var invDen = factor / (factor * den);\n\n    return mulSafe(num, invDen);\n  }\n\n  /**\n   * Rounds value at the specified number of decimals\n   *\n   * @param {number} val - value to round\n   * @param {number} decimals - number of decimals\n   *\n   * @returns {number} rounded number\n   */\n  function round(val, decimals) {\n    return Math.round(val * Math.pow(10, decimals)) / Math.pow(10, decimals);\n  }\n\n  function getFractional(num) {\n    // Check for NaNs or Infinities\n    if (!isFinite(num)) {\n      return 0;\n    }\n\n    // Faster than parsing strings\n    // http://jsperf.com/count-decimals/2\n    var count = 0;\n    while (num % 1 !== 0) {\n      num *= 10;\n      count++;\n    }\n    return count;\n  }\n\n  /**\n   * Custom error type definition\n   * @constructor\n   */\n  function QtyError() {\n    var err;\n    if (!this) { // Allows to instantiate QtyError without new()\n      err = Object.create(QtyError.prototype);\n      QtyError.apply(err, arguments);\n      return err;\n    }\n    err = Error.apply(this, arguments);\n    this.name = \"QtyError\";\n    this.message = err.message;\n    this.stack = err.stack;\n  }\n  QtyError.prototype = Object.create(Error.prototype, {constructor: { value: QtyError }});\n\n  /*\n   * Throws incompatible units error\n   * @param {string} left - units\n   * @param {string} right - units incompatible with first argument\n   * @throws \"Incompatible units\" error\n   */\n  function throwIncompatibleUnits(left, right) {\n    throw new QtyError(\"Incompatible units: \" + left + \" and \" + right);\n  }\n\n  var UNITS = {\n    /* prefixes */\n    \"<googol>\" : [[\"googol\"], 1e100, \"prefix\"],\n    \"<kibi>\"  :  [[\"Ki\",\"Kibi\",\"kibi\"], Math.pow(2,10), \"prefix\"],\n    \"<mebi>\"  :  [[\"Mi\",\"Mebi\",\"mebi\"], Math.pow(2,20), \"prefix\"],\n    \"<gibi>\"  :  [[\"Gi\",\"Gibi\",\"gibi\"], Math.pow(2,30), \"prefix\"],\n    \"<tebi>\"  :  [[\"Ti\",\"Tebi\",\"tebi\"], Math.pow(2,40), \"prefix\"],\n    \"<pebi>\"  :  [[\"Pi\",\"Pebi\",\"pebi\"], Math.pow(2,50), \"prefix\"],\n    \"<exi>\"   :  [[\"Ei\",\"Exi\",\"exi\"], Math.pow(2,60), \"prefix\"],\n    \"<zebi>\"  :  [[\"Zi\",\"Zebi\",\"zebi\"], Math.pow(2,70), \"prefix\"],\n    \"<yebi>\"  :  [[\"Yi\",\"Yebi\",\"yebi\"], Math.pow(2,80), \"prefix\"],\n    \"<yotta>\" :  [[\"Y\",\"Yotta\",\"yotta\"], 1e24, \"prefix\"],\n    \"<zetta>\" :  [[\"Z\",\"Zetta\",\"zetta\"], 1e21, \"prefix\"],\n    \"<exa>\"   :  [[\"E\",\"Exa\",\"exa\"], 1e18, \"prefix\"],\n    \"<peta>\"  :  [[\"P\",\"Peta\",\"peta\"], 1e15, \"prefix\"],\n    \"<tera>\"  :  [[\"T\",\"Tera\",\"tera\"], 1e12, \"prefix\"],\n    \"<giga>\"  :  [[\"G\",\"Giga\",\"giga\"], 1e9, \"prefix\"],\n    \"<mega>\"  :  [[\"M\",\"Mega\",\"mega\"], 1e6, \"prefix\"],\n    \"<kilo>\"  :  [[\"k\",\"kilo\"], 1e3, \"prefix\"],\n    \"<hecto>\" :  [[\"h\",\"Hecto\",\"hecto\"], 1e2, \"prefix\"],\n    \"<deca>\"  :  [[\"da\",\"Deca\",\"deca\",\"deka\"], 1e1, \"prefix\"],\n    \"<deci>\"  :  [[\"d\",\"Deci\",\"deci\"], 1e-1, \"prefix\"],\n    \"<centi>\"  : [[\"c\",\"Centi\",\"centi\"], 1e-2, \"prefix\"],\n    \"<milli>\" :  [[\"m\",\"Milli\",\"milli\"], 1e-3, \"prefix\"],\n    \"<micro>\"  : [\n      [\"u\",\"\\u03BC\"/*µ as greek letter*/,\"\\u00B5\"/*µ as micro sign*/,\"Micro\",\"mc\",\"micro\"],\n      1e-6,\n      \"prefix\"\n    ],\n    \"<nano>\"  :  [[\"n\",\"Nano\",\"nano\"], 1e-9, \"prefix\"],\n    \"<pico>\"  :  [[\"p\",\"Pico\",\"pico\"], 1e-12, \"prefix\"],\n    \"<femto>\" :  [[\"f\",\"Femto\",\"femto\"], 1e-15, \"prefix\"],\n    \"<atto>\"  :  [[\"a\",\"Atto\",\"atto\"], 1e-18, \"prefix\"],\n    \"<zepto>\" :  [[\"z\",\"Zepto\",\"zepto\"], 1e-21, \"prefix\"],\n    \"<yocto>\" :  [[\"y\",\"Yocto\",\"yocto\"], 1e-24, \"prefix\"],\n\n    \"<1>\"     :  [[\"1\", \"<1>\"], 1, \"\"],\n    /* length units */\n    \"<meter>\" :  [[\"m\",\"meter\",\"meters\",\"metre\",\"metres\"], 1.0, \"length\", [\"<meter>\"] ],\n    \"<inch>\"  :  [[\"in\",\"inch\",\"inches\",\"\\\"\"], 0.0254, \"length\", [\"<meter>\"]],\n    \"<foot>\"  :  [[\"ft\",\"foot\",\"feet\",\"'\"], 0.3048, \"length\", [\"<meter>\"]],\n    \"<yard>\"  :  [[\"yd\",\"yard\",\"yards\"], 0.9144, \"length\", [\"<meter>\"]],\n    \"<mile>\"  :  [[\"mi\",\"mile\",\"miles\"], 1609.344, \"length\", [\"<meter>\"]],\n    \"<naut-mile>\" : [[\"nmi\",\"naut-mile\"], 1852, \"length\", [\"<meter>\"]],\n    \"<league>\":  [[\"league\",\"leagues\"], 4828, \"length\", [\"<meter>\"]],\n    \"<furlong>\": [[\"furlong\",\"furlongs\"], 201.2, \"length\", [\"<meter>\"]],\n    \"<rod>\"   :  [[\"rd\",\"rod\",\"rods\"], 5.029, \"length\", [\"<meter>\"]],\n    \"<mil>\"   :  [[\"mil\",\"mils\"], 0.0000254, \"length\", [\"<meter>\"]],\n    \"<angstrom>\"  :[[\"ang\",\"angstrom\",\"angstroms\"], 1e-10, \"length\", [\"<meter>\"]],\n    \"<fathom>\" : [[\"fathom\",\"fathoms\"], 1.829, \"length\", [\"<meter>\"]],\n    \"<pica>\"  : [[\"pica\",\"picas\"], 0.00423333333, \"length\", [\"<meter>\"]],\n    \"<point>\" : [[\"pt\",\"point\",\"points\"], 0.000352777778, \"length\", [\"<meter>\"]],\n    \"<redshift>\" : [[\"z\",\"red-shift\", \"redshift\"], 1.302773e26, \"length\", [\"<meter>\"]],\n    \"<AU>\"    : [[\"AU\",\"astronomical-unit\"], 149597900000, \"length\", [\"<meter>\"]],\n    \"<light-second>\":[[\"ls\",\"light-second\"], 299792500, \"length\", [\"<meter>\"]],\n    \"<light-minute>\":[[\"lmin\",\"light-minute\"], 17987550000, \"length\", [\"<meter>\"]],\n    \"<light-year>\" : [[\"ly\",\"light-year\"], 9460528000000000, \"length\", [\"<meter>\"]],\n    \"<parsec>\"  : [[\"pc\",\"parsec\",\"parsecs\"], 30856780000000000, \"length\", [\"<meter>\"]],\n    \"<datamile>\"  :  [[\"DM\",\"datamile\"], 1828.8, \"length\", [\"<meter>\"]],\n\n    /* mass */\n    \"<kilogram>\" : [[\"kg\",\"kilogram\",\"kilograms\"], 1.0, \"mass\", [\"<kilogram>\"]],\n    \"<AMU>\" : [[\"u\",\"AMU\",\"amu\"], 1.660538921e-27, \"mass\", [\"<kilogram>\"]],\n    \"<dalton>\" : [[\"Da\",\"Dalton\",\"Daltons\",\"dalton\",\"daltons\"], 1.660538921e-27, \"mass\", [\"<kilogram>\"]],\n    \"<slug>\" : [[\"slug\",\"slugs\"], 14.5939029, \"mass\", [\"<kilogram>\"]],\n    \"<short-ton>\" : [[\"tn\",\"ton\",\"short-ton\"], 907.18474, \"mass\", [\"<kilogram>\"]],\n    \"<metric-ton>\":[[\"tonne\",\"metric-ton\"], 1000, \"mass\", [\"<kilogram>\"]],\n    \"<carat>\" : [[\"ct\",\"carat\",\"carats\"], 0.0002, \"mass\", [\"<kilogram>\"]],\n    \"<pound>\" : [[\"lbs\",\"lb\",\"pound\",\"pounds\",\"#\"], 0.45359237, \"mass\", [\"<kilogram>\"]],\n    \"<ounce>\" : [[\"oz\",\"ounce\",\"ounces\"], 0.0283495231, \"mass\", [\"<kilogram>\"]],\n    \"<gram>\"    :  [[\"g\",\"gram\",\"grams\",\"gramme\",\"grammes\"], 1e-3, \"mass\", [\"<kilogram>\"]],\n    \"<grain>\" : [[\"grain\",\"grains\",\"gr\"], 6.479891e-5, \"mass\", [\"<kilogram>\"]],\n    \"<dram>\"  : [[\"dram\",\"drams\",\"dr\"], 0.0017718452, \"mass\",[\"<kilogram>\"]],\n    \"<stone>\" : [[\"stone\",\"stones\",\"st\"],6.35029318, \"mass\",[\"<kilogram>\"]],\n\n    /* area */\n    \"<hectare>\":[[\"hectare\"], 10000, \"area\", [\"<meter>\",\"<meter>\"]],\n    \"<acre>\":[[\"acre\",\"acres\"], 4046.85642, \"area\", [\"<meter>\",\"<meter>\"]],\n    \"<sqft>\":[[\"sqft\"], 1, \"area\", [\"<foot>\",\"<foot>\"]],\n\n    /* volume */\n    \"<liter>\" : [[\"l\",\"L\",\"liter\",\"liters\",\"litre\",\"litres\"], 0.001, \"volume\", [\"<meter>\",\"<meter>\",\"<meter>\"]],\n    \"<gallon>\":  [[\"gal\",\"gallon\",\"gallons\"], 0.0037854118, \"volume\", [\"<meter>\",\"<meter>\",\"<meter>\"]],\n    \"<gallon-imp>\":  [[\"galimp\",\"gallon-imp\",\"gallons-imp\"], 0.0045460900, \"volume\", [\"<meter>\",\"<meter>\",\"<meter>\"]],\n    \"<quart>\":  [[\"qt\",\"quart\",\"quarts\"], 0.00094635295, \"volume\", [\"<meter>\",\"<meter>\",\"<meter>\"]],\n    \"<pint>\":  [[\"pt\",\"pint\",\"pints\"], 0.000473176475, \"volume\", [\"<meter>\",\"<meter>\",\"<meter>\"]],\n    \"<pint-imp>\":  [[\"ptimp\",\"pint-imp\",\"pints-imp\"], 5.6826125e-4, \"volume\", [\"<meter>\",\"<meter>\",\"<meter>\"]],\n    \"<cup>\":  [[\"cu\",\"cup\",\"cups\"], 0.000236588238, \"volume\", [\"<meter>\",\"<meter>\",\"<meter>\"]],\n    \"<fluid-ounce>\":  [[\"floz\",\"fluid-ounce\",\"fluid-ounces\"], 2.95735297e-5, \"volume\", [\"<meter>\",\"<meter>\",\"<meter>\"]],\n    \"<fluid-ounce-imp>\":  [[\"flozimp\", \"floz-imp\",\"fluid-ounce-imp\",\"fluid-ounces-imp\"], 2.84130625e-5, \"volume\", [\"<meter>\",\"<meter>\",\"<meter>\"]],\n    \"<tablespoon>\":  [[\"tb\",\"tbsp\",\"tbs\",\"tablespoon\",\"tablespoons\"], 1.47867648e-5, \"volume\", [\"<meter>\",\"<meter>\",\"<meter>\"]],\n    \"<teaspoon>\":  [[\"tsp\",\"teaspoon\",\"teaspoons\"], 4.92892161e-6, \"volume\", [\"<meter>\",\"<meter>\",\"<meter>\"]],\n    \"<bushel>\":  [[\"bu\",\"bsh\",\"bushel\",\"bushels\"], 0.035239072, \"volume\", [\"<meter>\",\"<meter>\",\"<meter>\"]],\n    \"<oilbarrel>\":  [[\"bbl\",\"oilbarrel\", \"oilbarrels\", \"oil-barrel\",\"oil-barrels\"], 0.158987294928, \"volume\", [\"<meter>\",\"<meter>\",\"<meter>\"]],\n    \"<beerbarrel>\":  [[\"bl\",\"bl-us\",\"beerbarrel\", \"beerbarrels\", \"beer-barrel\",\"beer-barrels\"], 0.1173477658, \"volume\", [\"<meter>\",\"<meter>\",\"<meter>\"]],\n    \"<beerbarrel-imp>\":  [[\"blimp\",\"bl-imp\",\"beerbarrel-imp\", \"beerbarrels-imp\", \"beer-barrel-imp\",\"beer-barrels-imp\"], 0.16365924, \"volume\", [\"<meter>\",\"<meter>\",\"<meter>\"]],\n\n    /* speed */\n    \"<kph>\" : [[\"kph\"], 0.277777778, \"speed\", [\"<meter>\"], [\"<second>\"]],\n    \"<mph>\" : [[\"mph\"], 0.44704, \"speed\", [\"<meter>\"], [\"<second>\"]],\n    \"<knot>\" : [[\"kt\",\"kn\",\"kts\",\"knot\",\"knots\"], 0.514444444, \"speed\", [\"<meter>\"], [\"<second>\"]],\n    \"<fps>\"  : [[\"fps\"], 0.3048, \"speed\", [\"<meter>\"], [\"<second>\"]],\n\n    /* acceleration */\n    \"<gee>\" : [[\"gee\"], 9.80665, \"acceleration\", [\"<meter>\"], [\"<second>\",\"<second>\"]],\n    \"<Gal>\" : [[\"Gal\"], 1e-2, \"acceleration\", [\"<meter>\"], [\"<second>\",\"<second>\"]],\n\n    /* temperature_difference */\n    \"<kelvin>\" : [[\"degK\",\"kelvin\"], 1.0, \"temperature\", [\"<kelvin>\"]],\n    \"<celsius>\" : [[\"degC\",\"celsius\",\"celsius\",\"centigrade\"], 1.0, \"temperature\", [\"<kelvin>\"]],\n    \"<fahrenheit>\" : [[\"degF\",\"fahrenheit\"], 5 / 9, \"temperature\", [\"<kelvin>\"]],\n    \"<rankine>\" : [[\"degR\",\"rankine\"], 5 / 9, \"temperature\", [\"<kelvin>\"]],\n    \"<temp-K>\"  : [[\"tempK\",\"temp-K\"], 1.0, \"temperature\", [\"<temp-K>\"]],\n    \"<temp-C>\"  : [[\"tempC\",\"temp-C\"], 1.0, \"temperature\", [\"<temp-K>\"]],\n    \"<temp-F>\"  : [[\"tempF\",\"temp-F\"], 5 / 9, \"temperature\", [\"<temp-K>\"]],\n    \"<temp-R>\"  : [[\"tempR\",\"temp-R\"], 5 / 9, \"temperature\", [\"<temp-K>\"]],\n\n    /* time */\n    \"<second>\":  [[\"s\",\"sec\",\"secs\",\"second\",\"seconds\"], 1.0, \"time\", [\"<second>\"]],\n    \"<minute>\":  [[\"min\",\"mins\",\"minute\",\"minutes\"], 60.0, \"time\", [\"<second>\"]],\n    \"<hour>\":  [[\"h\",\"hr\",\"hrs\",\"hour\",\"hours\"], 3600.0, \"time\", [\"<second>\"]],\n    \"<day>\":  [[\"d\",\"day\",\"days\"], 3600 * 24, \"time\", [\"<second>\"]],\n    \"<week>\":  [[\"wk\",\"week\",\"weeks\"], 7 * 3600 * 24, \"time\", [\"<second>\"]],\n    \"<fortnight>\": [[\"fortnight\",\"fortnights\"], 1209600, \"time\", [\"<second>\"]],\n    \"<year>\":  [[\"y\",\"yr\",\"year\",\"years\",\"annum\"], 31556926, \"time\", [\"<second>\"]],\n    \"<decade>\":[[\"decade\",\"decades\"], 315569260, \"time\", [\"<second>\"]],\n    \"<century>\":[[\"century\",\"centuries\"], 3155692600, \"time\", [\"<second>\"]],\n\n    /* pressure */\n    \"<pascal>\" : [[\"Pa\",\"pascal\",\"Pascal\"], 1.0, \"pressure\", [\"<kilogram>\"],[\"<meter>\",\"<second>\",\"<second>\"]],\n    \"<bar>\" : [[\"bar\",\"bars\"], 100000, \"pressure\", [\"<kilogram>\"],[\"<meter>\",\"<second>\",\"<second>\"]],\n    \"<mmHg>\" : [[\"mmHg\"], 133.322368, \"pressure\", [\"<kilogram>\"],[\"<meter>\",\"<second>\",\"<second>\"]],\n    \"<inHg>\" : [[\"inHg\"], 3386.3881472, \"pressure\", [\"<kilogram>\"],[\"<meter>\",\"<second>\",\"<second>\"]],\n    \"<torr>\" : [[\"torr\"], 133.322368, \"pressure\", [\"<kilogram>\"],[\"<meter>\",\"<second>\",\"<second>\"]],\n    \"<atm>\" : [[\"atm\",\"ATM\",\"atmosphere\",\"atmospheres\"], 101325, \"pressure\", [\"<kilogram>\"],[\"<meter>\",\"<second>\",\"<second>\"]],\n    \"<psi>\" : [[\"psi\"], 6894.76, \"pressure\", [\"<kilogram>\"],[\"<meter>\",\"<second>\",\"<second>\"]],\n    \"<cmh2o>\" : [[\"cmH2O\",\"cmh2o\"], 98.0638, \"pressure\", [\"<kilogram>\"],[\"<meter>\",\"<second>\",\"<second>\"]],\n    \"<inh2o>\" : [[\"inH2O\",\"inh2o\"], 249.082052, \"pressure\", [\"<kilogram>\"],[\"<meter>\",\"<second>\",\"<second>\"]],\n\n    /* viscosity */\n    \"<poise>\"  : [[\"P\",\"poise\"], 0.1, \"viscosity\", [\"<kilogram>\"],[\"<meter>\",\"<second>\"] ],\n    \"<stokes>\" : [[\"St\",\"stokes\"], 1e-4, \"viscosity\", [\"<meter>\",\"<meter>\"], [\"<second>\"]],\n\n    /* substance */\n    \"<mole>\"  :  [[\"mol\",\"mole\"], 1.0, \"substance\", [\"<mole>\"]],\n\n    /* concentration */\n    \"<molar>\" : [[\"M\",\"molar\"], 1000, \"concentration\", [\"<mole>\"], [\"<meter>\",\"<meter>\",\"<meter>\"]],\n    \"<wtpercent>\"  : [[\"wt%\",\"wtpercent\"], 10, \"concentration\", [\"<kilogram>\"], [\"<meter>\",\"<meter>\",\"<meter>\"]],\n\n    /* activity */\n    \"<katal>\" :  [[\"kat\",\"katal\",\"Katal\"], 1.0, \"activity\", [\"<mole>\"], [\"<second>\"]],\n    \"<unit>\"  :  [[\"U\",\"enzUnit\",\"unit\"], 16.667e-16, \"activity\", [\"<mole>\"], [\"<second>\"]],\n\n    /* capacitance */\n    \"<farad>\" :  [[\"F\",\"farad\",\"Farad\"], 1.0, \"capacitance\", [\"<second>\",\"<second>\",\"<second>\",\"<second>\",\"<ampere>\",\"<ampere>\"], [\"<meter>\", \"<meter>\", \"<kilogram>\"]],\n\n    /* charge */\n    \"<coulomb>\" :  [[\"C\",\"coulomb\",\"Coulomb\"], 1.0, \"charge\", [\"<ampere>\",\"<second>\"]],\n    \"<Ah>\" :  [[\"Ah\"], 3600, \"charge\", [\"<ampere>\",\"<second>\"]],\n\n    /* current */\n    \"<ampere>\"  :  [[\"A\",\"Ampere\",\"ampere\",\"amp\",\"amps\"], 1.0, \"current\", [\"<ampere>\"]],\n\n    /* conductance */\n    \"<siemens>\" : [[\"S\",\"Siemens\",\"siemens\"], 1.0, \"conductance\", [\"<second>\",\"<second>\",\"<second>\",\"<ampere>\",\"<ampere>\"], [\"<kilogram>\",\"<meter>\",\"<meter>\"]],\n\n    /* inductance */\n    \"<henry>\" :  [[\"H\",\"Henry\",\"henry\"], 1.0, \"inductance\", [\"<meter>\",\"<meter>\",\"<kilogram>\"], [\"<second>\",\"<second>\",\"<ampere>\",\"<ampere>\"]],\n\n    /* potential */\n    \"<volt>\"  :  [[\"V\",\"Volt\",\"volt\",\"volts\"], 1.0, \"potential\", [\"<meter>\",\"<meter>\",\"<kilogram>\"], [\"<second>\",\"<second>\",\"<second>\",\"<ampere>\"]],\n\n    /* resistance */\n    \"<ohm>\" :  [\n      [\"Ohm\",\"ohm\",\"\\u03A9\"/*Ω as greek letter*/,\"\\u2126\"/*Ω as ohm sign*/],\n      1.0,\n      \"resistance\",\n      [\"<meter>\",\"<meter>\",\"<kilogram>\"],[\"<second>\",\"<second>\",\"<second>\",\"<ampere>\",\"<ampere>\"]\n    ],\n    /* magnetism */\n    \"<weber>\" : [[\"Wb\",\"weber\",\"webers\"], 1.0, \"magnetism\", [\"<meter>\",\"<meter>\",\"<kilogram>\"], [\"<second>\",\"<second>\",\"<ampere>\"]],\n    \"<tesla>\"  : [[\"T\",\"tesla\",\"teslas\"], 1.0, \"magnetism\", [\"<kilogram>\"], [\"<second>\",\"<second>\",\"<ampere>\"]],\n    \"<gauss>\" : [[\"G\",\"gauss\"], 1e-4, \"magnetism\",  [\"<kilogram>\"], [\"<second>\",\"<second>\",\"<ampere>\"]],\n    \"<maxwell>\" : [[\"Mx\",\"maxwell\",\"maxwells\"], 1e-8, \"magnetism\", [\"<meter>\",\"<meter>\",\"<kilogram>\"], [\"<second>\",\"<second>\",\"<ampere>\"]],\n    \"<oersted>\"  : [[\"Oe\",\"oersted\",\"oersteds\"], 250.0 / Math.PI, \"magnetism\", [\"<ampere>\"], [\"<meter>\"]],\n\n    /* energy */\n    \"<joule>\" :  [[\"J\",\"joule\",\"Joule\",\"joules\"], 1.0, \"energy\", [\"<meter>\",\"<meter>\",\"<kilogram>\"], [\"<second>\",\"<second>\"]],\n    \"<erg>\"   :  [[\"erg\",\"ergs\"], 1e-7, \"energy\", [\"<meter>\",\"<meter>\",\"<kilogram>\"], [\"<second>\",\"<second>\"]],\n    \"<btu>\"   :  [[\"BTU\",\"btu\",\"BTUs\"], 1055.056, \"energy\", [\"<meter>\",\"<meter>\",\"<kilogram>\"], [\"<second>\",\"<second>\"]],\n    \"<calorie>\" :  [[\"cal\",\"calorie\",\"calories\"], 4.18400, \"energy\",[\"<meter>\",\"<meter>\",\"<kilogram>\"], [\"<second>\",\"<second>\"]],\n    \"<Calorie>\" :  [[\"Cal\",\"Calorie\",\"Calories\"], 4184.00, \"energy\",[\"<meter>\",\"<meter>\",\"<kilogram>\"], [\"<second>\",\"<second>\"]],\n    \"<therm-US>\" : [[\"th\",\"therm\",\"therms\",\"Therm\",\"therm-US\"], 105480400, \"energy\",[\"<meter>\",\"<meter>\",\"<kilogram>\"], [\"<second>\",\"<second>\"]],\n    \"<Wh>\" : [[\"Wh\"], 3600, \"energy\",[\"<meter>\",\"<meter>\",\"<kilogram>\"], [\"<second>\",\"<second>\"]],\n\n    /* force */\n    \"<newton>\"  : [[\"N\",\"Newton\",\"newton\"], 1.0, \"force\", [\"<kilogram>\",\"<meter>\"], [\"<second>\",\"<second>\"]],\n    \"<dyne>\"  : [[\"dyn\",\"dyne\"], 1e-5, \"force\", [\"<kilogram>\",\"<meter>\"], [\"<second>\",\"<second>\"]],\n    \"<pound-force>\"  : [[\"lbf\",\"pound-force\"], 4.448222, \"force\", [\"<kilogram>\",\"<meter>\"], [\"<second>\",\"<second>\"]],\n\n    /* frequency */\n    \"<hertz>\" : [[\"Hz\",\"hertz\",\"Hertz\"], 1.0, \"frequency\", [\"<1>\"], [\"<second>\"]],\n\n    /* angle */\n    \"<radian>\" :[[\"rad\",\"radian\",\"radians\"], 1.0, \"angle\", [\"<radian>\"]],\n    \"<degree>\" :[[\"deg\",\"degree\",\"degrees\"], Math.PI / 180.0, \"angle\", [\"<radian>\"]],\n    \"<gradian>\"   :[[\"gon\",\"grad\",\"gradian\",\"grads\"], Math.PI / 200.0, \"angle\", [\"<radian>\"]],\n    \"<steradian>\"  : [[\"sr\",\"steradian\",\"steradians\"], 1.0, \"solid_angle\", [\"<steradian>\"]],\n\n    /* rotation */\n    \"<rotation>\" : [[\"rotation\"], 2.0 * Math.PI, \"angle\", [\"<radian>\"]],\n    \"<rpm>\"   :[[\"rpm\"], 2.0 * Math.PI / 60.0, \"angular_velocity\", [\"<radian>\"], [\"<second>\"]],\n\n    /* information */\n    \"<byte>\"  :[[\"B\",\"byte\",\"bytes\"], 1.0, \"information\", [\"<byte>\"]],\n    \"<bit>\"  :[[\"b\",\"bit\",\"bits\"], 0.125, \"information\", [\"<byte>\"]],\n\n    /* information rate */\n    \"<Bps>\" : [[\"Bps\"], 1.0, \"information_rate\", [\"<byte>\"], [\"<second>\"]],\n    \"<bps>\" : [[\"bps\"], 0.125, \"information_rate\", [\"<byte>\"], [\"<second>\"]],\n\n    /* currency */\n    \"<dollar>\":[[\"USD\",\"dollar\"], 1.0, \"currency\", [\"<dollar>\"]],\n    \"<cents>\" :[[\"cents\"], 0.01, \"currency\", [\"<dollar>\"]],\n\n    /* luminosity */\n    \"<candela>\" : [[\"cd\",\"candela\"], 1.0, \"luminosity\", [\"<candela>\"]],\n    \"<lumen>\" : [[\"lm\",\"lumen\"], 1.0, \"luminous_power\", [\"<candela>\",\"<steradian>\"]],\n    \"<lux>\" :[[\"lux\"], 1.0, \"illuminance\", [\"<candela>\",\"<steradian>\"], [\"<meter>\",\"<meter>\"]],\n\n    /* power */\n    \"<watt>\"  : [[\"W\",\"watt\",\"watts\"], 1.0, \"power\", [\"<kilogram>\",\"<meter>\",\"<meter>\"], [\"<second>\",\"<second>\",\"<second>\"]],\n    \"<volt-ampere>\"  : [[\"VA\",\"volt-ampere\"], 1.0, \"power\", [\"<kilogram>\",\"<meter>\",\"<meter>\"], [\"<second>\",\"<second>\",\"<second>\"]],\n    \"<volt-ampere-reactive>\"  : [[\"var\",\"Var\",\"VAr\",\"VAR\",\"volt-ampere-reactive\"], 1.0, \"power\", [\"<kilogram>\",\"<meter>\",\"<meter>\"], [\"<second>\",\"<second>\",\"<second>\"]],\n    \"<horsepower>\"  :  [[\"hp\",\"horsepower\"], 745.699872, \"power\", [\"<kilogram>\",\"<meter>\",\"<meter>\"], [\"<second>\",\"<second>\",\"<second>\"]],\n\n    /* radiation */\n    \"<gray>\" : [[\"Gy\",\"gray\",\"grays\"], 1.0, \"radiation\", [\"<meter>\",\"<meter>\"], [\"<second>\",\"<second>\"]],\n    \"<roentgen>\" : [[\"R\",\"roentgen\"], 0.009330, \"radiation\", [\"<meter>\",\"<meter>\"], [\"<second>\",\"<second>\"]],\n    \"<sievert>\" : [[\"Sv\",\"sievert\",\"sieverts\"], 1.0, \"radiation\", [\"<meter>\",\"<meter>\"], [\"<second>\",\"<second>\"]],\n    \"<becquerel>\" : [[\"Bq\",\"becquerel\",\"becquerels\"], 1.0, \"radiation\", [\"<1>\"],[\"<second>\"]],\n    \"<curie>\" : [[\"Ci\",\"curie\",\"curies\"], 3.7e10, \"radiation\", [\"<1>\"],[\"<second>\"]],\n\n    /* rate */\n    \"<cpm>\" : [[\"cpm\"], 1.0 / 60.0, \"rate\", [\"<count>\"],[\"<second>\"]],\n    \"<dpm>\" : [[\"dpm\"], 1.0 / 60.0, \"rate\", [\"<count>\"],[\"<second>\"]],\n    \"<bpm>\" : [[\"bpm\"], 1.0 / 60.0, \"rate\", [\"<count>\"],[\"<second>\"]],\n\n    /* resolution / typography */\n    \"<dot>\" : [[\"dot\",\"dots\"], 1, \"resolution\", [\"<each>\"]],\n    \"<pixel>\" : [[\"pixel\",\"px\"], 1, \"resolution\", [\"<each>\"]],\n    \"<ppi>\" : [[\"ppi\"], 1, \"resolution\", [\"<pixel>\"], [\"<inch>\"]],\n    \"<dpi>\" : [[\"dpi\"], 1, \"typography\", [\"<dot>\"], [\"<inch>\"]],\n\n    /* other */\n    \"<cell>\" : [[\"cells\",\"cell\"], 1, \"counting\", [\"<each>\"]],\n    \"<each>\" : [[\"each\"], 1.0, \"counting\", [\"<each>\"]],\n    \"<count>\" : [[\"count\"], 1.0, \"counting\", [\"<each>\"]],\n    \"<base-pair>\"  : [[\"bp\",\"base-pair\"], 1.0, \"counting\", [\"<each>\"]],\n    \"<nucleotide>\" : [[\"nt\",\"nucleotide\"], 1.0, \"counting\", [\"<each>\"]],\n    \"<molecule>\" : [[\"molecule\",\"molecules\"], 1.0, \"counting\", [\"<1>\"]],\n    \"<dozen>\" :  [[\"doz\",\"dz\",\"dozen\"],12.0,\"prefix_only\", [\"<each>\"]],\n    \"<percent>\": [[\"%\",\"percent\"], 0.01, \"prefix_only\", [\"<1>\"]],\n    \"<ppm>\" :  [[\"ppm\"],1e-6, \"prefix_only\", [\"<1>\"]],\n    \"<ppt>\" :  [[\"ppt\"],1e-9, \"prefix_only\", [\"<1>\"]],\n    \"<gross>\" :  [[\"gr\",\"gross\"],144.0, \"prefix_only\", [\"<dozen>\",\"<dozen>\"]],\n    \"<decibel>\"  : [[\"dB\",\"decibel\",\"decibels\"], 1.0, \"logarithmic\", [\"<decibel>\"]]\n  };\n\n  var BASE_UNITS = [\"<meter>\",\"<kilogram>\",\"<second>\",\"<mole>\", \"<ampere>\",\"<radian>\",\"<kelvin>\",\"<temp-K>\",\"<byte>\",\"<dollar>\",\"<candela>\",\"<each>\",\"<steradian>\",\"<decibel>\"];\n\n  var UNITY = \"<1>\";\n  var UNITY_ARRAY = [UNITY];\n\n  // Setup\n\n  /**\n   * Asserts unit definition is valid\n   *\n   * @param {string} unitDef - Name of unit to test\n   * @param {Object} definition - Definition of unit to test\n   *\n   * @returns {void}\n   * @throws {QtyError} if unit definition is not valid\n   */\n  function validateUnitDefinition(unitDef, definition) {\n    var scalar = definition[1];\n    var numerator = definition[3] || [];\n    var denominator = definition[4] || [];\n    if (!isNumber(scalar)) {\n      throw new QtyError(unitDef + \": Invalid unit definition. \" +\n                         \"'scalar' must be a number\");\n    }\n\n    numerator.forEach(function(unit) {\n      if (UNITS[unit] === undefined) {\n        throw new QtyError(unitDef + \": Invalid unit definition. \" +\n                           \"Unit \" + unit + \" in 'numerator' is not recognized\");\n      }\n    });\n\n    denominator.forEach(function(unit) {\n      if (UNITS[unit] === undefined) {\n        throw new QtyError(unitDef + \": Invalid unit definition. \" +\n                           \"Unit \" + unit + \" in 'denominator' is not recognized\");\n      }\n    });\n  }\n\n  var PREFIX_VALUES = {};\n  var PREFIX_MAP = {};\n  var UNIT_VALUES = {};\n  var UNIT_MAP = {};\n  var OUTPUT_MAP = {};\n  for (var unitDef in UNITS) {\n    if (UNITS.hasOwnProperty(unitDef)) {\n      var definition = UNITS[unitDef];\n      if (definition[2] === \"prefix\") {\n        PREFIX_VALUES[unitDef] = definition[1];\n        for (var i = 0; i < definition[0].length; i++) {\n          PREFIX_MAP[definition[0][i]] = unitDef;\n        }\n      }\n      else {\n        validateUnitDefinition(unitDef, definition);\n        UNIT_VALUES[unitDef] = {\n          scalar: definition[1],\n          numerator: definition[3],\n          denominator: definition[4]\n        };\n        for (var j = 0; j < definition[0].length; j++) {\n          UNIT_MAP[definition[0][j]] = unitDef;\n        }\n      }\n      OUTPUT_MAP[unitDef] = definition[0][0];\n    }\n  }\n\n  /**\n   * Returns a list of available units of kind\n   *\n   * @param {string} [kind] - kind of units\n   * @returns {array} names of units\n   * @throws {QtyError} if kind is unknown\n   */\n  function getUnits(kind) {\n    var i;\n    var units = [];\n    var unitKeys = Object.keys(UNITS);\n    if (typeof kind === \"undefined\") {\n      for (i = 0; i < unitKeys.length; i++) {\n        if ([\"\", \"prefix\"].indexOf(UNITS[unitKeys[i]][2]) === -1) {\n          units.push(unitKeys[i].substr(1, unitKeys[i].length - 2));\n        }\n      }\n    }\n    else if (this.getKinds().indexOf(kind) === -1) {\n      throw new QtyError(\"Kind not recognized\");\n    }\n    else {\n      for (i = 0; i < unitKeys.length; i++) {\n        if (UNITS[unitKeys[i]][2] === kind) {\n          units.push(unitKeys[i].substr(1, unitKeys[i].length - 2));\n        }\n      }\n    }\n\n    return units.sort(function(a, b) {\n      if (a.toLowerCase() < b.toLowerCase()) {\n        return -1;\n      }\n      if (a.toLowerCase() > b.toLowerCase()) {\n        return 1;\n      }\n      return 0;\n    });\n  }\n\n  /**\n   * Returns a list of alternative names for a unit\n   *\n   * @param {string} unitName - name of unit\n   * @returns {string[]} aliases for unit\n   * @throws {QtyError} if unit is unknown\n   */\n  function getAliases(unitName) {\n    if (!UNIT_MAP[unitName]) {\n      throw new QtyError(\"Unit not recognized\");\n    }\n    return UNITS[UNIT_MAP[unitName]][0];\n  }\n\n  var SIGNATURE_VECTOR = [\"length\", \"time\", \"temperature\", \"mass\", \"current\", \"substance\", \"luminosity\", \"currency\", \"information\", \"angle\"];\n\n  /*\n  calculates the unit signature id for use in comparing compatible units and simplification\n  the signature is based on a simple classification of units and is based on the following publication\n\n  Novak, G.S., Jr. \"Conversion of units of measurement\", IEEE Transactions on Software Engineering,\n  21(8), Aug 1995, pp.651-661\n  doi://10.1109/32.403789\n  http://ieeexplore.ieee.org/Xplore/login.jsp?url=/iel1/32/9079/00403789.pdf?isnumber=9079&prod=JNL&arnumber=403789&arSt=651&ared=661&arAuthor=Novak%2C+G.S.%2C+Jr.\n  */\n  function unitSignature() {\n    if (this.signature) {\n      return this.signature;\n    }\n    var vector = unitSignatureVector.call(this);\n    for (var i = 0; i < vector.length; i++) {\n      vector[i] *= Math.pow(20, i);\n    }\n\n    return vector.reduce(\n      function(previous, current) {\n        return previous + current;\n      },\n      0\n    );\n  }\n\n  // calculates the unit signature vector used by unit_signature\n  function unitSignatureVector() {\n    if (!this.isBase()) {\n      return unitSignatureVector.call(this.toBase());\n    }\n\n    var vector = new Array(SIGNATURE_VECTOR.length);\n    for (var i = 0; i < vector.length; i++) {\n      vector[i] = 0;\n    }\n    var r, n;\n    for (var j = 0; j < this.numerator.length; j++) {\n      if ((r = UNITS[this.numerator[j]])) {\n        n = SIGNATURE_VECTOR.indexOf(r[2]);\n        if (n >= 0) {\n          vector[n] = vector[n] + 1;\n        }\n      }\n    }\n\n    for (var k = 0; k < this.denominator.length; k++) {\n      if ((r = UNITS[this.denominator[k]])) {\n        n = SIGNATURE_VECTOR.indexOf(r[2]);\n        if (n >= 0) {\n          vector[n] = vector[n] - 1;\n        }\n      }\n    }\n    return vector;\n  }\n\n  var SIGN = \"[+-]\";\n  var INTEGER = \"\\\\d+\";\n  var SIGNED_INTEGER = SIGN + \"?\" + INTEGER;\n  var FRACTION = \"\\\\.\" + INTEGER;\n  var FLOAT = \"(?:\" + INTEGER + \"(?:\" + FRACTION + \")?\" + \")\" +\n              \"|\" +\n              \"(?:\" + FRACTION + \")\";\n  var EXPONENT = \"[Ee]\" + SIGNED_INTEGER;\n  var SCI_NUMBER = \"(?:\" + FLOAT + \")(?:\" + EXPONENT + \")?\";\n  var SIGNED_NUMBER = SIGN + \"?\\\\s*\" + SCI_NUMBER;\n  var QTY_STRING = \"(\" + SIGNED_NUMBER + \")?\" + \"\\\\s*([^/]*)(?:\\/(.+))?\";\n  var QTY_STRING_REGEX = new RegExp(\"^\" + QTY_STRING + \"$\");\n\n  var POWER_OP = \"\\\\^|\\\\*{2}\";\n  // Allow unit powers representing scalar, length, area, volume; 4 is for some\n  // special case representations in SI base units.\n  var SAFE_POWER = \"[01234]\";\n  var TOP_REGEX = new RegExp (\"([^ \\\\*\\\\d]+?)(?:\" + POWER_OP + \")?(-?\" + SAFE_POWER + \"(?![a-zA-Z]))\");\n  var BOTTOM_REGEX = new RegExp(\"([^ \\\\*\\\\d]+?)(?:\" + POWER_OP + \")?(\" + SAFE_POWER + \"(?![a-zA-Z]))\");\n\n  /* parse a string into a unit object.\n   * Typical formats like :\n   * \"5.6 kg*m/s^2\"\n   * \"5.6 kg*m*s^-2\"\n   * \"5.6 kilogram*meter*second^-2\"\n   * \"2.2 kPa\"\n   * \"37 degC\"\n   * \"1\"  -- creates a unitless constant with value 1\n   * \"GPa\"  -- creates a unit with scalar 1 with units 'GPa'\n   * 6'4\"  -- recognized as 6 feet + 4 inches\n   * 8 lbs 8 oz -- recognized as 8 lbs + 8 ounces\n   */\n  function parse(val) {\n    if (!isString(val)) {\n      val = val.toString();\n    }\n    val = val.trim();\n\n    var result = QTY_STRING_REGEX.exec(val);\n    if (!result) {\n      throw new QtyError(val + \": Quantity not recognized\");\n    }\n\n    var scalarMatch = result[1];\n    if (scalarMatch) {\n      // Allow whitespaces between sign and scalar for loose parsing\n      scalarMatch = scalarMatch.replace(/\\s/g, \"\");\n      this.scalar = parseFloat(scalarMatch);\n    }\n    else {\n      this.scalar = 1;\n    }\n    var top = result[2];\n    var bottom = result[3];\n\n    var n, x, nx;\n    // TODO DRY me\n    while ((result = TOP_REGEX.exec(top))) {\n      n = parseFloat(result[2]);\n      if (isNaN(n)) {\n        // Prevents infinite loops\n        throw new QtyError(\"Unit exponent is not a number\");\n      }\n      // Disallow unrecognized unit even if exponent is 0\n      if (n === 0 && !UNIT_TEST_REGEX.test(result[1])) {\n        throw new QtyError(\"Unit not recognized\");\n      }\n      x = result[1] + \" \";\n      nx = \"\";\n      for (var i = 0; i < Math.abs(n) ; i++) {\n        nx += x;\n      }\n      if (n >= 0) {\n        top = top.replace(result[0], nx);\n      }\n      else {\n        bottom = bottom ? bottom + nx : nx;\n        top = top.replace(result[0], \"\");\n      }\n    }\n\n    while ((result = BOTTOM_REGEX.exec(bottom))) {\n      n = parseFloat(result[2]);\n      if (isNaN(n)) {\n        // Prevents infinite loops\n        throw new QtyError(\"Unit exponent is not a number\");\n      }\n      // Disallow unrecognized unit even if exponent is 0\n      if (n === 0 && !UNIT_TEST_REGEX.test(result[1])) {\n        throw new QtyError(\"Unit not recognized\");\n      }\n      x = result[1] + \" \";\n      nx = \"\";\n      for (var j = 0; j < n ; j++) {\n        nx += x;\n      }\n\n      bottom = bottom.replace(result[0], nx);\n    }\n\n    if (top) {\n      this.numerator = parseUnits(top.trim());\n    }\n    if (bottom) {\n      this.denominator = parseUnits(bottom.trim());\n    }\n  }\n\n  var PREFIX_REGEX = Object.keys(PREFIX_MAP).sort(function(a, b) {\n    return b.length - a.length;\n  }).join(\"|\");\n  var UNIT_REGEX = Object.keys(UNIT_MAP).sort(function(a, b) {\n    return b.length - a.length;\n  }).join(\"|\");\n  /*\n   * Minimal boundary regex to support units with Unicode characters\n   * \\b only works for ASCII\n   */\n  var BOUNDARY_REGEX = \"\\\\b|$\";\n  var UNIT_MATCH = \"(\" + PREFIX_REGEX + \")??(\" +\n                   UNIT_REGEX +\n                   \")(?:\" + BOUNDARY_REGEX + \")\";\n  var UNIT_TEST_REGEX = new RegExp(\"^\\\\s*(\" + UNIT_MATCH + \"[\\\\s\\\\*]*)+$\");\n  var UNIT_MATCH_REGEX = new RegExp(UNIT_MATCH, \"g\"); // g flag for multiple occurences\n  var parsedUnitsCache = {};\n  /**\n   * Parses and converts units string to normalized unit array.\n   * Result is cached to speed up next calls.\n   *\n   * @param {string} units Units string\n   * @returns {string[]} Array of normalized units\n   *\n   * @example\n   * // Returns [\"<second>\", \"<meter>\", \"<second>\"]\n   * parseUnits(\"s m s\");\n   *\n   */\n  function parseUnits(units) {\n    var cached = parsedUnitsCache[units];\n    if (cached) {\n      return cached;\n    }\n\n    var unitMatch, normalizedUnits = [];\n\n    // Scan\n    if (!UNIT_TEST_REGEX.test(units)) {\n      throw new QtyError(\"Unit not recognized\");\n    }\n\n    while ((unitMatch = UNIT_MATCH_REGEX.exec(units))) {\n      normalizedUnits.push(unitMatch.slice(1));\n    }\n\n    normalizedUnits = normalizedUnits.map(function(item) {\n      return PREFIX_MAP[item[0]] ? [PREFIX_MAP[item[0]], UNIT_MAP[item[1]]] : [UNIT_MAP[item[1]]];\n    });\n\n    // Flatten and remove null elements\n    normalizedUnits = normalizedUnits.reduce(function(a,b) {\n      return a.concat(b);\n    }, []);\n    normalizedUnits = normalizedUnits.filter(function(item) {\n      return item;\n    });\n\n    parsedUnitsCache[units] = normalizedUnits;\n\n    return normalizedUnits;\n  }\n\n  /**\n   * Parses a string as a quantity\n   * @param {string} value - quantity as text\n   * @throws if value is not a string\n   * @returns {Qty|null} Parsed quantity or null if unrecognized\n   */\n  function globalParse(value) {\n    if (!isString(value)) {\n      throw new QtyError(\"Argument should be a string\");\n    }\n\n    try {\n      return this(value);\n    }\n    catch (e) {\n      return null;\n    }\n  }\n\n  /**\n   * Tests if a value is a Qty instance\n   *\n   * @param {*} value - Value to test\n   *\n   * @returns {boolean} true if value is a Qty instance, false otherwise\n   */\n  function isQty(value) {\n    return value instanceof Qty;\n  }\n\n  function Qty(initValue, initUnits) {\n    assertValidConstructorArgs.apply(null, arguments);\n\n    if (!(isQty(this))) {\n      return new Qty(initValue, initUnits);\n    }\n\n    this.scalar = null;\n    this.baseScalar = null;\n    this.signature = null;\n    this._conversionCache = {};\n    this.numerator = UNITY_ARRAY;\n    this.denominator = UNITY_ARRAY;\n\n    if (isDefinitionObject(initValue)) {\n      this.scalar = initValue.scalar;\n      this.numerator = (initValue.numerator && initValue.numerator.length !== 0) ? initValue.numerator : UNITY_ARRAY;\n      this.denominator = (initValue.denominator && initValue.denominator.length !== 0) ? initValue.denominator : UNITY_ARRAY;\n    }\n    else if (initUnits) {\n      parse.call(this, initUnits);\n      this.scalar = initValue;\n    }\n    else {\n      parse.call(this, initValue);\n    }\n\n    // math with temperatures is very limited\n    if (this.denominator.join(\"*\").indexOf(\"temp\") >= 0) {\n      throw new QtyError(\"Cannot divide with temperatures\");\n    }\n    if (this.numerator.join(\"*\").indexOf(\"temp\") >= 0) {\n      if (this.numerator.length > 1) {\n        throw new QtyError(\"Cannot multiply by temperatures\");\n      }\n      if (!compareArray(this.denominator, UNITY_ARRAY)) {\n        throw new QtyError(\"Cannot divide with temperatures\");\n      }\n    }\n\n    this.initValue = initValue;\n    updateBaseScalar.call(this);\n\n    if (this.isTemperature() && this.baseScalar < 0) {\n      throw new QtyError(\"Temperatures must not be less than absolute zero\");\n    }\n  }\n\n  Qty.prototype = {\n    // Properly set up constructor\n    constructor: Qty,\n  };\n\n  /**\n   * Asserts constructor arguments are valid\n   *\n   * @param {*} value - Value to test\n   * @param {string} [units] - Optional units when value is passed as a number\n   *\n   * @returns {void}\n   * @throws {QtyError} if constructor arguments are invalid\n   */\n  function assertValidConstructorArgs(value, units) {\n    if (units) {\n      if (!(isNumber(value) && isString(units))) {\n        throw new QtyError(\"Only number accepted as initialization value \" +\n                           \"when units are explicitly provided\");\n      }\n    }\n    else {\n      if (!(isString(value) ||\n            isNumber(value) ||\n            isQty(value)    ||\n            isDefinitionObject(value))) {\n        throw new QtyError(\"Only string, number or quantity accepted as \" +\n                           \"single initialization value\");\n      }\n    }\n  }\n\n  /**\n   * Tests if a value is a Qty definition object\n   *\n   * @param {*} value - Value to test\n   *\n   * @returns {boolean} true if value is a definition object, false otherwise\n   */\n  function isDefinitionObject(value) {\n    return value && typeof value === \"object\" && value.hasOwnProperty(\"scalar\");\n  }\n\n  function updateBaseScalar() {\n    if (this.baseScalar) {\n      return this.baseScalar;\n    }\n    if (this.isBase()) {\n      this.baseScalar = this.scalar;\n      this.signature = unitSignature.call(this);\n    }\n    else {\n      var base = this.toBase();\n      this.baseScalar = base.scalar;\n      this.signature = base.signature;\n    }\n  }\n\n  var KINDS = {\n    \"-312078\": \"elastance\",\n    \"-312058\": \"resistance\",\n    \"-312038\": \"inductance\",\n    \"-152058\": \"potential\",\n    \"-152040\": \"magnetism\",\n    \"-152038\": \"magnetism\",\n    \"-7997\": \"specific_volume\",\n    \"-79\": \"snap\",\n    \"-59\": \"jolt\",\n    \"-39\": \"acceleration\",\n    \"-38\": \"radiation\",\n    \"-20\": \"frequency\",\n    \"-19\": \"speed\",\n    \"-18\": \"viscosity\",\n    \"-17\": \"volumetric_flow\",\n    \"-1\": \"wavenumber\",\n    \"0\": \"unitless\",\n    \"1\": \"length\",\n    \"2\": \"area\",\n    \"3\": \"volume\",\n    \"20\": \"time\",\n    \"400\": \"temperature\",\n    \"7941\": \"yank\",\n    \"7942\": \"power\",\n    \"7959\": \"pressure\",\n    \"7961\": \"force\",\n    \"7962\": \"energy\",\n    \"7979\": \"viscosity\",\n    \"7981\": \"momentum\",\n    \"7982\": \"angular_momentum\",\n    \"7997\": \"density\",\n    \"7998\": \"area_density\",\n    \"8000\": \"mass\",\n    \"152020\": \"radiation_exposure\",\n    \"159999\": \"magnetism\",\n    \"160000\": \"current\",\n    \"160020\": \"charge\",\n    \"312058\": \"conductance\",\n    \"312078\": \"capacitance\",\n    \"3199980\": \"activity\",\n    \"3199997\": \"molar_concentration\",\n    \"3200000\": \"substance\",\n    \"63999998\": \"illuminance\",\n    \"64000000\": \"luminous_power\",\n    \"1280000000\": \"currency\",\n    \"25599999980\": \"information_rate\",\n    \"25600000000\": \"information\",\n    \"511999999980\": \"angular_velocity\",\n    \"512000000000\": \"angle\"\n  };\n\n  /**\n   * Returns the list of available well-known kinds of units, e.g.\n   * \"radiation\" or \"length\".\n   *\n   * @returns {string[]} names of kinds of units\n   */\n  function getKinds() {\n    return uniq(Object.keys(KINDS).map(function(knownSignature) {\n      return KINDS[knownSignature];\n    }));\n  }\n\n  Qty.prototype.kind = function() {\n    return KINDS[this.signature.toString()];\n  };\n\n  assign(Qty.prototype, {\n    isDegrees: function() {\n      // signature may not have been calculated yet\n      return (this.signature === null || this.signature === 400) &&\n        this.numerator.length === 1 &&\n        compareArray(this.denominator, UNITY_ARRAY) &&\n        (this.numerator[0].match(/<temp-[CFRK]>/) || this.numerator[0].match(/<(kelvin|celsius|rankine|fahrenheit)>/));\n    },\n\n    isTemperature: function() {\n      return this.isDegrees() && this.numerator[0].match(/<temp-[CFRK]>/);\n    }\n  });\n\n  function subtractTemperatures(lhs,rhs) {\n    var lhsUnits = lhs.units();\n    var rhsConverted = rhs.to(lhsUnits);\n    var dstDegrees = Qty(getDegreeUnits(lhsUnits));\n    return Qty({\"scalar\": lhs.scalar - rhsConverted.scalar, \"numerator\": dstDegrees.numerator, \"denominator\": dstDegrees.denominator});\n  }\n\n  function subtractTempDegrees(temp,deg) {\n    var tempDegrees = deg.to(getDegreeUnits(temp.units()));\n    return Qty({\"scalar\": temp.scalar - tempDegrees.scalar, \"numerator\": temp.numerator, \"denominator\": temp.denominator});\n  }\n\n  function addTempDegrees(temp,deg) {\n    var tempDegrees = deg.to(getDegreeUnits(temp.units()));\n    return Qty({\"scalar\": temp.scalar + tempDegrees.scalar, \"numerator\": temp.numerator, \"denominator\": temp.denominator});\n  }\n\n  function getDegreeUnits(units) {\n    if (units === \"tempK\") {\n      return \"degK\";\n    }\n    else if (units === \"tempC\") {\n      return \"degC\";\n    }\n    else if (units === \"tempF\") {\n      return \"degF\";\n    }\n    else if (units === \"tempR\") {\n      return \"degR\";\n    }\n    else {\n      throw new QtyError(\"Unknown type for temp conversion from: \" + units);\n    }\n  }\n\n  function toDegrees(src,dst) {\n    var srcDegK = toDegK(src);\n    var dstUnits = dst.units();\n    var dstScalar;\n\n    if (dstUnits === \"degK\") {\n      dstScalar = srcDegK.scalar;\n    }\n    else if (dstUnits === \"degC\") {\n      dstScalar = srcDegK.scalar ;\n    }\n    else if (dstUnits === \"degF\") {\n      dstScalar = srcDegK.scalar * 9 / 5;\n    }\n    else if (dstUnits === \"degR\") {\n      dstScalar = srcDegK.scalar * 9 / 5;\n    }\n    else {\n      throw new QtyError(\"Unknown type for degree conversion to: \" + dstUnits);\n    }\n\n    return Qty({\"scalar\": dstScalar, \"numerator\": dst.numerator, \"denominator\": dst.denominator});\n  }\n\n  function toDegK(qty) {\n    var units = qty.units();\n    var q;\n    if (units.match(/(deg)[CFRK]/)) {\n      q = qty.baseScalar;\n    }\n    else if (units === \"tempK\") {\n      q = qty.scalar;\n    }\n    else if (units === \"tempC\") {\n      q = qty.scalar;\n    }\n    else if (units === \"tempF\") {\n      q = qty.scalar * 5 / 9;\n    }\n    else if (units === \"tempR\") {\n      q = qty.scalar * 5 / 9;\n    }\n    else {\n      throw new QtyError(\"Unknown type for temp conversion from: \" + units);\n    }\n\n    return Qty({\"scalar\": q, \"numerator\": [\"<kelvin>\"], \"denominator\": UNITY_ARRAY});\n  }\n\n  function toTemp(src,dst) {\n    var dstUnits = dst.units();\n    var dstScalar;\n\n    if (dstUnits === \"tempK\") {\n      dstScalar = src.baseScalar;\n    }\n    else if (dstUnits === \"tempC\") {\n      dstScalar = src.baseScalar - 273.15;\n    }\n    else if (dstUnits === \"tempF\") {\n      dstScalar = (src.baseScalar * 9 / 5) - 459.67;\n    }\n    else if (dstUnits === \"tempR\") {\n      dstScalar = src.baseScalar * 9 / 5;\n    }\n    else {\n      throw new QtyError(\"Unknown type for temp conversion to: \" + dstUnits);\n    }\n\n    return Qty({\"scalar\": dstScalar, \"numerator\": dst.numerator, \"denominator\": dst.denominator});\n  }\n\n  function toTempK(qty) {\n    var units = qty.units();\n    var q;\n    if (units.match(/(deg)[CFRK]/)) {\n      q = qty.baseScalar;\n    }\n    else if (units === \"tempK\") {\n      q = qty.scalar;\n    }\n    else if (units === \"tempC\") {\n      q = qty.scalar + 273.15;\n    }\n    else if (units === \"tempF\") {\n      q = (qty.scalar + 459.67) * 5 / 9;\n    }\n    else if (units === \"tempR\") {\n      q = qty.scalar * 5 / 9;\n    }\n    else {\n      throw new QtyError(\"Unknown type for temp conversion from: \" + units);\n    }\n\n    return Qty({\"scalar\": q, \"numerator\": [\"<temp-K>\"], \"denominator\": UNITY_ARRAY});\n  }\n\n  assign(Qty.prototype, {\n    /**\n     * Converts to other compatible units.\n     * Instance's converted quantities are cached for faster subsequent calls.\n     *\n     * @param {(string|Qty)} other - Target units as string or retrieved from\n     *                               other Qty instance (scalar is ignored)\n     *\n     * @returns {Qty} New converted Qty instance with target units\n     *\n     * @throws {QtyError} if target units are incompatible\n     *\n     * @example\n     * var weight = Qty(\"25 kg\");\n     * weight.to(\"lb\"); // => Qty(\"55.11556554621939 lbs\");\n     * weight.to(Qty(\"3 g\")); // => Qty(\"25000 g\"); // scalar of passed Qty is ignored\n     */\n    to: function(other) {\n      var cached, target;\n\n      if (other === undefined || other === null) {\n        return this;\n      }\n\n      if (!isString(other)) {\n        return this.to(other.units());\n      }\n\n      cached = this._conversionCache[other];\n      if (cached) {\n        return cached;\n      }\n\n      // Instantiating target to normalize units\n      target = Qty(other);\n      if (target.units() === this.units()) {\n        return this;\n      }\n\n      if (!this.isCompatible(target)) {\n        if (this.isInverse(target)) {\n          target = this.inverse().to(other);\n        }\n        else {\n          throwIncompatibleUnits(this.units(), target.units());\n        }\n      }\n      else {\n        if (target.isTemperature()) {\n          target = toTemp(this,target);\n        }\n        else if (target.isDegrees()) {\n          target = toDegrees(this,target);\n        }\n        else {\n          var q = divSafe(this.baseScalar, target.baseScalar);\n          target = Qty({\"scalar\": q, \"numerator\": target.numerator, \"denominator\": target.denominator});\n        }\n      }\n\n      this._conversionCache[other] = target;\n      return target;\n    },\n\n    // convert to base SI units\n    // results of the conversion are cached so subsequent calls to this will be fast\n    toBase: function() {\n      if (this.isBase()) {\n        return this;\n      }\n\n      if (this.isTemperature()) {\n        return toTempK(this);\n      }\n\n      var cached = baseUnitCache[this.units()];\n      if (!cached) {\n        cached = toBaseUnits(this.numerator,this.denominator);\n        baseUnitCache[this.units()] = cached;\n      }\n      return cached.mul(this.scalar);\n    },\n\n    // Converts the unit back to a float if it is unitless.  Otherwise raises an exception\n    toFloat: function() {\n      if (this.isUnitless()) {\n        return this.scalar;\n      }\n      throw new QtyError(\"Can't convert to Float unless unitless.  Use Unit#scalar\");\n    },\n\n    /**\n     * Returns the nearest multiple of quantity passed as\n     * precision\n     *\n     * @param {(Qty|string|number)} precQuantity - Quantity, string formated\n     *   quantity or number as expected precision\n     *\n     * @returns {Qty} Nearest multiple of precQuantity\n     *\n     * @example\n     * Qty('5.5 ft').toPrec('2 ft'); // returns 6 ft\n     * Qty('0.8 cu').toPrec('0.25 cu'); // returns 0.75 cu\n     * Qty('6.3782 m').toPrec('cm'); // returns 6.38 m\n     * Qty('1.146 MPa').toPrec('0.1 bar'); // returns 1.15 MPa\n     *\n     */\n    toPrec: function(precQuantity) {\n      if (isString(precQuantity)) {\n        precQuantity = Qty(precQuantity);\n      }\n      if (isNumber(precQuantity)) {\n        precQuantity = Qty(precQuantity + \" \" + this.units());\n      }\n\n      if (!this.isUnitless()) {\n        precQuantity = precQuantity.to(this.units());\n      }\n      else if (!precQuantity.isUnitless()) {\n        throwIncompatibleUnits(this.units(), precQuantity.units());\n      }\n\n      if (precQuantity.scalar === 0) {\n        throw new QtyError(\"Divide by zero\");\n      }\n\n      var precRoundedResult = mulSafe(\n        Math.round(this.scalar / precQuantity.scalar),\n        precQuantity.scalar\n      );\n\n      return Qty(precRoundedResult + this.units());\n    }\n  });\n\n  /**\n   * Configures and returns a fast function to convert\n   * Number values from units to others.\n   * Useful to efficiently convert large array of values\n   * with same units into others with iterative methods.\n   * Does not take care of rounding issues.\n   *\n   * @param {string} srcUnits Units of values to convert\n   * @param {string} dstUnits Units to convert to\n   *\n   * @returns {Function} Converting function accepting Number value\n   *   and returning converted value\n   *\n   * @throws \"Incompatible units\" if units are incompatible\n   *\n   * @example\n   * // Converting large array of numbers with the same units\n   * // into other units\n   * var converter = Qty.swiftConverter(\"m/h\", \"ft/s\");\n   * var convertedSerie = largeSerie.map(converter);\n   *\n   */\n  function swiftConverter(srcUnits, dstUnits) {\n    var srcQty = Qty(srcUnits);\n    var dstQty = Qty(dstUnits);\n\n    if (srcQty.eq(dstQty)) {\n      return identity;\n    }\n\n    var convert;\n    if (!srcQty.isTemperature()) {\n      convert = function(value) {\n        return value * srcQty.baseScalar / dstQty.baseScalar;\n      };\n    }\n    else {\n      convert = function(value) {\n        // TODO Not optimized\n        return srcQty.mul(value).to(dstQty).scalar;\n      };\n    }\n\n    return function converter(value) {\n      var i, length, result;\n      if (!Array.isArray(value)) {\n        return convert(value);\n      }\n      else {\n        length = value.length;\n        result = [];\n        for (i = 0; i < length; i++) {\n          result.push(convert(value[i]));\n        }\n        return result;\n      }\n    };\n  }\n\n  var baseUnitCache = {};\n\n  function toBaseUnits(numerator,denominator) {\n    var num = [];\n    var den = [];\n    var q = 1;\n    var unit;\n    for (var i = 0; i < numerator.length; i++) {\n      unit = numerator[i];\n      if (PREFIX_VALUES[unit]) {\n        // workaround to fix\n        // 0.1 * 0.1 => 0.010000000000000002\n        q = mulSafe(q, PREFIX_VALUES[unit]);\n      }\n      else {\n        if (UNIT_VALUES[unit]) {\n          q *= UNIT_VALUES[unit].scalar;\n\n          if (UNIT_VALUES[unit].numerator) {\n            num.push(UNIT_VALUES[unit].numerator);\n          }\n          if (UNIT_VALUES[unit].denominator) {\n            den.push(UNIT_VALUES[unit].denominator);\n          }\n        }\n      }\n    }\n    for (var j = 0; j < denominator.length; j++) {\n      unit = denominator[j];\n      if (PREFIX_VALUES[unit]) {\n        q /= PREFIX_VALUES[unit];\n      }\n      else {\n        if (UNIT_VALUES[unit]) {\n          q /= UNIT_VALUES[unit].scalar;\n\n          if (UNIT_VALUES[unit].numerator) {\n            den.push(UNIT_VALUES[unit].numerator);\n          }\n          if (UNIT_VALUES[unit].denominator) {\n            num.push(UNIT_VALUES[unit].denominator);\n          }\n        }\n      }\n    }\n\n    // Flatten\n    num = num.reduce(function(a,b) {\n      return a.concat(b);\n    }, []);\n    den = den.reduce(function(a,b) {\n      return a.concat(b);\n    }, []);\n\n    return Qty({\"scalar\": q, \"numerator\": num, \"denominator\": den});\n  }\n\n  Qty.parse = globalParse;\n\n  Qty.getUnits = getUnits;\n  Qty.getAliases = getAliases;\n\n  Qty.mulSafe = mulSafe;\n  Qty.divSafe = divSafe;\n\n  Qty.getKinds = getKinds;\n\n  Qty.swiftConverter = swiftConverter;\n\n  Qty.Error = QtyError;\n\n  assign(Qty.prototype, {\n    // Returns new instance with units of this\n    add: function(other) {\n      if (isString(other)) {\n        other = Qty(other);\n      }\n\n      if (!this.isCompatible(other)) {\n        throwIncompatibleUnits(this.units(), other.units());\n      }\n\n      if (this.isTemperature() && other.isTemperature()) {\n        throw new QtyError(\"Cannot add two temperatures\");\n      }\n      else if (this.isTemperature()) {\n        return addTempDegrees(this, other);\n      }\n      else if (other.isTemperature()) {\n        return addTempDegrees(other, this);\n      }\n\n      return Qty({\"scalar\": this.scalar + other.to(this).scalar, \"numerator\": this.numerator, \"denominator\": this.denominator});\n    },\n\n    sub: function(other) {\n      if (isString(other)) {\n        other = Qty(other);\n      }\n\n      if (!this.isCompatible(other)) {\n        throwIncompatibleUnits(this.units(), other.units());\n      }\n\n      if (this.isTemperature() && other.isTemperature()) {\n        return subtractTemperatures(this,other);\n      }\n      else if (this.isTemperature()) {\n        return subtractTempDegrees(this,other);\n      }\n      else if (other.isTemperature()) {\n        throw new QtyError(\"Cannot subtract a temperature from a differential degree unit\");\n      }\n\n      return Qty({\"scalar\": this.scalar - other.to(this).scalar, \"numerator\": this.numerator, \"denominator\": this.denominator});\n    },\n\n    mul: function(other) {\n      if (isNumber(other)) {\n        return Qty({\"scalar\": mulSafe(this.scalar, other), \"numerator\": this.numerator, \"denominator\": this.denominator});\n      }\n      else if (isString(other)) {\n        other = Qty(other);\n      }\n\n      if ((this.isTemperature() || other.isTemperature()) && !(this.isUnitless() || other.isUnitless())) {\n        throw new QtyError(\"Cannot multiply by temperatures\");\n      }\n\n      // Quantities should be multiplied with same units if compatible, with base units else\n      var op1 = this;\n      var op2 = other;\n\n      // so as not to confuse results, multiplication and division between temperature degrees will maintain original unit info in num/den\n      // multiplication and division between deg[CFRK] can never factor each other out, only themselves: \"degK*degC/degC^2\" == \"degK/degC\"\n      if (op1.isCompatible(op2) && op1.signature !== 400) {\n        op2 = op2.to(op1);\n      }\n      var numdenscale = cleanTerms(op1.numerator, op1.denominator, op2.numerator, op2.denominator);\n\n      return Qty({\"scalar\": mulSafe(op1.scalar, op2.scalar, numdenscale[2]), \"numerator\": numdenscale[0], \"denominator\": numdenscale[1]});\n    },\n\n    div: function(other) {\n      if (isNumber(other)) {\n        if (other === 0) {\n          throw new QtyError(\"Divide by zero\");\n        }\n        return Qty({\"scalar\": this.scalar / other, \"numerator\": this.numerator, \"denominator\": this.denominator});\n      }\n      else if (isString(other)) {\n        other = Qty(other);\n      }\n\n      if (other.scalar === 0) {\n        throw new QtyError(\"Divide by zero\");\n      }\n\n      if (other.isTemperature()) {\n        throw new QtyError(\"Cannot divide with temperatures\");\n      }\n      else if (this.isTemperature() && !other.isUnitless()) {\n        throw new QtyError(\"Cannot divide with temperatures\");\n      }\n\n      // Quantities should be multiplied with same units if compatible, with base units else\n      var op1 = this;\n      var op2 = other;\n\n      // so as not to confuse results, multiplication and division between temperature degrees will maintain original unit info in num/den\n      // multiplication and division between deg[CFRK] can never factor each other out, only themselves: \"degK*degC/degC^2\" == \"degK/degC\"\n      if (op1.isCompatible(op2) && op1.signature !== 400) {\n        op2 = op2.to(op1);\n      }\n      var numdenscale = cleanTerms(op1.numerator, op1.denominator, op2.denominator, op2.numerator);\n\n      return Qty({\"scalar\": mulSafe(op1.scalar, numdenscale[2]) / op2.scalar, \"numerator\": numdenscale[0], \"denominator\": numdenscale[1]});\n    },\n\n    // Returns a Qty that is the inverse of this Qty,\n    inverse: function() {\n      if (this.isTemperature()) {\n        throw new QtyError(\"Cannot divide with temperatures\");\n      }\n      if (this.scalar === 0) {\n        throw new QtyError(\"Divide by zero\");\n      }\n      return Qty({\"scalar\": 1 / this.scalar, \"numerator\": this.denominator, \"denominator\": this.numerator});\n    }\n  });\n\n  function cleanTerms(num1, den1, num2, den2) {\n    function notUnity(val) {\n      return val !== UNITY;\n    }\n\n    num1 = num1.filter(notUnity);\n    num2 = num2.filter(notUnity);\n    den1 = den1.filter(notUnity);\n    den2 = den2.filter(notUnity);\n\n    var combined = {};\n\n    function combineTerms(terms, direction) {\n      var k;\n      var prefix;\n      var prefixValue;\n      for (var i = 0; i < terms.length; i++) {\n        if (PREFIX_VALUES[terms[i]]) {\n          k = terms[i + 1];\n          prefix = terms[i];\n          prefixValue = PREFIX_VALUES[prefix];\n          i++;\n        }\n        else {\n          k = terms[i];\n          prefix = null;\n          prefixValue = 1;\n        }\n        if (k && k !== UNITY) {\n          if (combined[k]) {\n            combined[k][0] += direction;\n            var combinedPrefixValue = combined[k][2] ? PREFIX_VALUES[combined[k][2]] : 1;\n            combined[k][direction === 1 ? 3 : 4] *= divSafe(prefixValue, combinedPrefixValue);\n          }\n          else {\n            combined[k] = [direction, k, prefix, 1, 1];\n          }\n        }\n      }\n    }\n\n    combineTerms(num1, 1);\n    combineTerms(den1, -1);\n    combineTerms(num2, 1);\n    combineTerms(den2, -1);\n\n    var num = [];\n    var den = [];\n    var scale = 1;\n\n    for (var prop in combined) {\n      if (combined.hasOwnProperty(prop)) {\n        var item = combined[prop];\n        var n;\n        if (item[0] > 0) {\n          for (n = 0; n < item[0]; n++) {\n            num.push(item[2] === null ? item[1] : [item[2], item[1]]);\n          }\n        }\n        else if (item[0] < 0) {\n          for (n = 0; n < -item[0]; n++) {\n            den.push(item[2] === null ? item[1] : [item[2], item[1]]);\n          }\n        }\n        scale *= divSafe(item[3], item[4]);\n      }\n    }\n\n    if (num.length === 0) {\n      num = UNITY_ARRAY;\n    }\n    if (den.length === 0) {\n      den = UNITY_ARRAY;\n    }\n\n    // Flatten\n    num = num.reduce(function(a,b) {\n      return a.concat(b);\n    }, []);\n    den = den.reduce(function(a,b) {\n      return a.concat(b);\n    }, []);\n\n    return [num, den, scale];\n  }\n\n  assign(Qty.prototype, {\n    eq: function(other) {\n      return this.compareTo(other) === 0;\n    },\n\n    lt: function(other) {\n      return this.compareTo(other) === -1;\n    },\n\n    lte: function(other) {\n      return this.eq(other) || this.lt(other);\n    },\n\n    gt: function(other) {\n      return this.compareTo(other) === 1;\n    },\n\n    gte: function(other) {\n      return this.eq(other) || this.gt(other);\n    },\n\n    // Compare two Qty objects. Throws an exception if they are not of compatible types.\n    // Comparisons are done based on the value of the quantity in base SI units.\n    //\n    // NOTE: We cannot compare inverses as that breaks the general compareTo contract:\n    //   if a.compareTo(b) < 0 then b.compareTo(a) > 0\n    //   if a.compareTo(b) == 0 then b.compareTo(a) == 0\n    //\n    //   Since \"10S\" == \".1ohm\" (10 > .1) and \"10ohm\" == \".1S\" (10 > .1)\n    //     Qty(\"10S\").inverse().compareTo(\"10ohm\") == -1\n    //     Qty(\"10ohm\").inverse().compareTo(\"10S\") == -1\n    //\n    //   If including inverses in the sort is needed, I suggest writing: Qty.sort(qtyArray,units)\n    compareTo: function(other) {\n      if (isString(other)) {\n        return this.compareTo(Qty(other));\n      }\n      if (!this.isCompatible(other)) {\n        throwIncompatibleUnits(this.units(), other.units());\n      }\n      if (this.baseScalar < other.baseScalar) {\n        return -1;\n      }\n      else if (this.baseScalar === other.baseScalar) {\n        return 0;\n      }\n      else if (this.baseScalar > other.baseScalar) {\n        return 1;\n      }\n    },\n\n    // Return true if quantities and units match\n    // Unit(\"100 cm\").same(Unit(\"100 cm\"))  # => true\n    // Unit(\"100 cm\").same(Unit(\"1 m\"))     # => false\n    same: function(other) {\n      return (this.scalar === other.scalar) && (this.units() === other.units());\n    }\n  });\n\n  assign(Qty.prototype, {\n    // returns true if no associated units\n    // false, even if the units are \"unitless\" like 'radians, each, etc'\n    isUnitless: function() {\n      return [this.numerator, this.denominator].every(function(item) {\n        return compareArray(item, UNITY_ARRAY);\n      });\n    },\n\n    /*\n    check to see if units are compatible, but not the scalar part\n    this check is done by comparing signatures for performance reasons\n    if passed a string, it will create a unit object with the string and then do the comparison\n    this permits a syntax like:\n    unit =~ \"mm\"\n    if you want to do a regexp on the unit string do this ...\n    unit.units =~ /regexp/\n    */\n    isCompatible: function(other) {\n      if (isString(other)) {\n        return this.isCompatible(Qty(other));\n      }\n\n      if (!(isQty(other))) {\n        return false;\n      }\n\n      if (other.signature !== undefined) {\n        return this.signature === other.signature;\n      }\n      else {\n        return false;\n      }\n    },\n\n    /*\n    check to see if units are inverse of each other, but not the scalar part\n    this check is done by comparing signatures for performance reasons\n    if passed a string, it will create a unit object with the string and then do the comparison\n    this permits a syntax like:\n    unit =~ \"mm\"\n    if you want to do a regexp on the unit string do this ...\n    unit.units =~ /regexp/\n    */\n    isInverse: function(other) {\n      return this.inverse().isCompatible(other);\n    },\n\n    // Returns 'true' if the Unit is represented in base units\n    isBase: function() {\n      if (this._isBase !== undefined) {\n        return this._isBase;\n      }\n      if (this.isDegrees() && this.numerator[0].match(/<(kelvin|temp-K)>/)) {\n        this._isBase = true;\n        return this._isBase;\n      }\n\n      this.numerator.concat(this.denominator).forEach(function(item) {\n        if (item !== UNITY && BASE_UNITS.indexOf(item) === -1 ) {\n          this._isBase = false;\n        }\n      }, this);\n      if (this._isBase === false) {\n        return this._isBase;\n      }\n      this._isBase = true;\n      return this._isBase;\n    }\n  });\n\n  function NestedMap() {}\n\n  NestedMap.prototype.get = function(keys) {\n\n    // Allows to pass key1, key2, ... instead of [key1, key2, ...]\n    if (arguments.length > 1) {\n      // Slower with Firefox but faster with Chrome than\n      // Array.prototype.slice.call(arguments)\n      // See http://jsperf.com/array-apply-versus-array-prototype-slice-call\n      keys = Array.apply(null, arguments);\n    }\n\n    return keys.reduce(function(map, key, index) {\n      if (map) {\n\n        var childMap = map[key];\n\n        if (index === keys.length - 1) {\n          return childMap ? childMap.data : undefined;\n        }\n        else {\n          return childMap;\n        }\n      }\n    },\n    this);\n  };\n\n  NestedMap.prototype.set = function(keys, value) {\n\n    if (arguments.length > 2) {\n      keys = Array.prototype.slice.call(arguments, 0, -1);\n      value = arguments[arguments.length - 1];\n    }\n\n    return keys.reduce(function(map, key, index) {\n\n      var childMap = map[key];\n      if (childMap === undefined) {\n        childMap = map[key] = {};\n      }\n\n      if (index === keys.length - 1) {\n        childMap.data = value;\n        return value;\n      }\n      else {\n        return childMap;\n      }\n    }, this);\n  };\n\n  /**\n   * Default formatter\n   *\n   * @param {number} scalar - scalar value\n   * @param {string} units - units as string\n   *\n   * @returns {string} formatted result\n   */\n  function defaultFormatter(scalar, units) {\n    return (scalar + \" \" + units).trim();\n  }\n\n  /**\n   *\n   * Configurable Qty default formatter\n   *\n   * @type {function}\n   *\n   * @param {number} scalar\n   * @param {string} units\n   *\n   * @returns {string} formatted result\n   */\n  Qty.formatter = defaultFormatter;\n\n  assign(Qty.prototype, {\n\n    // returns the 'unit' part of the Unit object without the scalar\n    units: function() {\n      if (this._units !== undefined) {\n        return this._units;\n      }\n\n      var numIsUnity = compareArray(this.numerator, UNITY_ARRAY);\n      var denIsUnity = compareArray(this.denominator, UNITY_ARRAY);\n      if (numIsUnity && denIsUnity) {\n        this._units = \"\";\n        return this._units;\n      }\n\n      var numUnits = stringifyUnits(this.numerator);\n      var denUnits = stringifyUnits(this.denominator);\n      this._units = numUnits + (denIsUnity ? \"\" : (\"/\" + denUnits));\n      return this._units;\n    },\n\n    /**\n     * Stringifies the quantity\n     * Deprecation notice: only units parameter is supported.\n     *\n     * @param {(number|string|Qty)} targetUnitsOrMaxDecimalsOrPrec -\n     *                              target units if string,\n     *                              max number of decimals if number,\n     *                              passed to #toPrec before converting if Qty\n     *\n     * @param {number=} maxDecimals - Maximum number of decimals of\n     *                                formatted output\n     *\n     * @returns {string} reparseable quantity as string\n     */\n    toString: function(targetUnitsOrMaxDecimalsOrPrec, maxDecimals) {\n      var targetUnits;\n      if (isNumber(targetUnitsOrMaxDecimalsOrPrec)) {\n        targetUnits = this.units();\n        maxDecimals = targetUnitsOrMaxDecimalsOrPrec;\n      }\n      else if (isString(targetUnitsOrMaxDecimalsOrPrec)) {\n        targetUnits = targetUnitsOrMaxDecimalsOrPrec;\n      }\n      else if (isQty(targetUnitsOrMaxDecimalsOrPrec)) {\n        return this.toPrec(targetUnitsOrMaxDecimalsOrPrec).toString(maxDecimals);\n      }\n\n      var out = this.to(targetUnits);\n\n      var outScalar = maxDecimals !== undefined ? round(out.scalar, maxDecimals) : out.scalar;\n      out = (outScalar + \" \" + out.units()).trim();\n      return out;\n    },\n\n    /**\n     * Format the quantity according to optional passed target units\n     * and formatter\n     *\n     * @param {string} [targetUnits=current units] -\n     *                 optional units to convert to before formatting\n     *\n     * @param {function} [formatter=Qty.formatter] -\n     *                   delegates formatting to formatter callback.\n     *                   formatter is called back with two parameters (scalar, units)\n     *                   and should return formatted result.\n     *                   If unspecified, formatting is delegated to default formatter\n     *                   set to Qty.formatter\n     *\n     * @example\n     * var roundingAndLocalizingFormatter = function(scalar, units) {\n     *   // localize or limit scalar to n max decimals for instance\n     *   // return formatted result\n     * };\n     * var qty = Qty('1.1234 m');\n     * qty.format(); // same units, default formatter => \"1.234 m\"\n     * qty.format(\"cm\"); // converted to \"cm\", default formatter => \"123.45 cm\"\n     * qty.format(roundingAndLocalizingFormatter); // same units, custom formatter => \"1,2 m\"\n     * qty.format(\"cm\", roundingAndLocalizingFormatter); // convert to \"cm\", custom formatter => \"123,4 cm\"\n     *\n     * @returns {string} quantity as string\n     */\n    format: function(targetUnits, formatter) {\n      if (arguments.length === 1) {\n        if (typeof targetUnits === \"function\") {\n          formatter = targetUnits;\n          targetUnits = undefined;\n        }\n      }\n\n      formatter = formatter || Qty.formatter;\n      var targetQty = this.to(targetUnits);\n      return formatter.call(this, targetQty.scalar, targetQty.units());\n    }\n  });\n\n  var stringifiedUnitsCache = new NestedMap();\n  /**\n   * Returns a string representing a normalized unit array\n   *\n   * @param {string[]} units Normalized unit array\n   * @returns {string} String representing passed normalized unit array and\n   *   suitable for output\n   *\n   */\n  function stringifyUnits(units) {\n\n    var stringified = stringifiedUnitsCache.get(units);\n    if (stringified) {\n      return stringified;\n    }\n\n    var isUnity = compareArray(units, UNITY_ARRAY);\n    if (isUnity) {\n      stringified = \"1\";\n    }\n    else {\n      stringified = simplify(getOutputNames(units)).join(\"*\");\n    }\n\n    // Cache result\n    stringifiedUnitsCache.set(units, stringified);\n\n    return stringified;\n  }\n\n  function getOutputNames(units) {\n    var unitNames = [], token, tokenNext;\n    for (var i = 0; i < units.length; i++) {\n      token = units[i];\n      tokenNext = units[i + 1];\n      if (PREFIX_VALUES[token]) {\n        unitNames.push(OUTPUT_MAP[token] + OUTPUT_MAP[tokenNext]);\n        i++;\n      }\n      else {\n        unitNames.push(OUTPUT_MAP[token]);\n      }\n    }\n    return unitNames;\n  }\n\n  function simplify(units) {\n    // this turns ['s','m','s'] into ['s2','m']\n\n    var unitCounts = units.reduce(function(acc, unit) {\n      var unitCounter = acc[unit];\n      if (!unitCounter) {\n        acc.push(unitCounter = acc[unit] = [unit, 0]);\n      }\n\n      unitCounter[1]++;\n\n      return acc;\n    }, []);\n\n    return unitCounts.map(function(unitCount) {\n      return unitCount[0] + (unitCount[1] > 1 ? unitCount[1] : \"\");\n    });\n  }\n\n  Qty.version = \"1.7.6\";\n\n  return Qty;\n\n})));\n","import Qty from 'js-quantities';\r\nexport function convertUnit(array, fromUnit, toUnit) {\r\n    fromUnit = normalize(fromUnit);\r\n    toUnit = normalize(toUnit);\r\n    if (fromUnit === toUnit)\r\n        return array;\r\n    try {\r\n        const convert = Qty.swiftConverter(fromUnit, toUnit); // Configures converter\r\n        return convert(array);\r\n    }\r\n    catch (e) {\r\n        return undefined;\r\n    }\r\n}\r\nfunction normalize(unit) {\r\n    unit = unit.replace(/°C/g, 'tempC');\r\n    unit = unit.replace(/°F/g, 'tempF');\r\n    unit = unit.replace(/(^|\\W)K(\\W|$)/g, '$1tempK$2');\r\n    return unit;\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29udmVydFVuaXQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvdXRpbC9jb252ZXJ0VW5pdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEdBQUcsTUFBTSxlQUFlLENBQUM7QUFjaEMsTUFBTSxVQUFVLFdBQVcsQ0FDekIsS0FBVSxFQUNWLFFBQWdCLEVBQ2hCLE1BQWM7SUFFZCxRQUFRLEdBQUcsU0FBUyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQy9CLE1BQU0sR0FBRyxTQUFTLENBQUMsTUFBTSxDQUFDLENBQUM7SUFFM0IsSUFBSSxRQUFRLEtBQUssTUFBTTtRQUFFLE9BQU8sS0FBSyxDQUFDO0lBRXRDLElBQUk7UUFDRixNQUFNLE9BQU8sR0FBRyxHQUFHLENBQUMsY0FBYyxDQUFDLFFBQVEsRUFBRSxNQUFNLENBQUMsQ0FBQyxDQUFDLHVCQUF1QjtRQUM3RSxPQUFPLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQztLQUN2QjtJQUFDLE9BQU8sQ0FBQyxFQUFFO1FBQ1YsT0FBTyxTQUFTLENBQUM7S0FDbEI7QUFDSCxDQUFDO0FBRUQsU0FBUyxTQUFTLENBQUMsSUFBWTtJQUM3QixJQUFJLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLEVBQUUsT0FBTyxDQUFDLENBQUM7SUFDcEMsSUFBSSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxFQUFFLE9BQU8sQ0FBQyxDQUFDO0lBQ3BDLElBQUksR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLGdCQUFnQixFQUFFLFdBQVcsQ0FBQyxDQUFDO0lBQ25ELE9BQU8sSUFBSSxDQUFDO0FBQ2QsQ0FBQyJ9","const testRegExp = /^\\/((?:\\\\\\/|[^/])+)\\/([migyu]{0,5})?$/;\r\nexport function ensureRegexp(string) {\r\n    if (typeof string !== 'string')\r\n        return string;\r\n    const parts = testRegExp.exec(string);\r\n    if (parts) {\r\n        try {\r\n            return new RegExp(parts[1], parts[2]);\r\n        }\r\n        catch (err) {\r\n            return stringToRegexp(string);\r\n        }\r\n    }\r\n    else {\r\n        return stringToRegexp(string);\r\n    }\r\n}\r\nfunction stringToRegexp(string, flags = 'i') {\r\n    return new RegExp(string.replace(/[[\\]\\\\{}()+*?.$^|]/g, (match) => `\\\\${match}`), flags);\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW5zdXJlUmVnZXhwLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3V0aWwvZW5zdXJlUmVnZXhwLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE1BQU0sVUFBVSxHQUFHLHVDQUF1QyxDQUFDO0FBRTNELE1BQU0sVUFBVSxZQUFZLENBQUMsTUFBdUI7SUFDbEQsSUFBSSxPQUFPLE1BQU0sS0FBSyxRQUFRO1FBQUUsT0FBTyxNQUFNLENBQUM7SUFDOUMsTUFBTSxLQUFLLEdBQUcsVUFBVSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUN0QyxJQUFJLEtBQUssRUFBRTtRQUNULElBQUk7WUFDRixPQUFPLElBQUksTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztTQUN2QztRQUFDLE9BQU8sR0FBRyxFQUFFO1lBQ1osT0FBTyxjQUFjLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDL0I7S0FDRjtTQUFNO1FBQ0wsT0FBTyxjQUFjLENBQUMsTUFBTSxDQUFDLENBQUM7S0FDL0I7QUFDSCxDQUFDO0FBRUQsU0FBUyxjQUFjLENBQUMsTUFBYyxFQUFFLEtBQUssR0FBRyxHQUFHO0lBQ2pELE9BQU8sSUFBSSxNQUFNLENBQ2YsTUFBTSxDQUFDLE9BQU8sQ0FBQyxxQkFBcUIsRUFBRSxDQUFDLEtBQWEsRUFBRSxFQUFFLENBQUMsS0FBSyxLQUFLLEVBQUUsQ0FBQyxFQUN0RSxLQUFLLENBQ04sQ0FBQztBQUNKLENBQUMifQ==","import max from 'ml-array-max';\r\nimport min from 'ml-array-min';\r\nimport { xIsMonotone } from 'ml-spectra-processing';\r\nimport { convertUnit } from './convertUnit';\r\nexport function getConvertedVariable(variable, newUnits) {\r\n    const data = variable.units !== undefined && variable.units !== newUnits // would be nice if convertUnit would allow typedArray\r\n        ? convertUnit(Array.from(variable.data), variable.units, newUnits)\r\n        : variable.data;\r\n    return {\r\n        units: newUnits,\r\n        label: variable.label.replace(`[${variable.units || ''}]`, `[${newUnits}]`),\r\n        data: data || [],\r\n        min: data ? min(data) : undefined,\r\n        max: data ? max(data) : undefined,\r\n        isMonotone: xIsMonotone(data),\r\n    };\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0Q29udmVydGVkVmFyaWFibGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvdXRpbC9nZXRDb252ZXJ0ZWRWYXJpYWJsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEdBQUcsTUFBTSxjQUFjLENBQUM7QUFDL0IsT0FBTyxHQUFHLE1BQU0sY0FBYyxDQUFDO0FBQy9CLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUVwRCxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRTVDLE1BQU0sVUFBVSxvQkFBb0IsQ0FDbEMsUUFBMEIsRUFDMUIsUUFBZ0I7SUFFaEIsTUFBTSxJQUFJLEdBQ1IsUUFBUSxDQUFDLEtBQUssS0FBSyxTQUFTLElBQUksUUFBUSxDQUFDLEtBQUssS0FBSyxRQUFRLENBQUMsc0RBQXNEO1FBQ2hILENBQUMsQ0FBQyxXQUFXLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLEVBQUUsUUFBUSxDQUFDLEtBQUssRUFBRSxRQUFRLENBQUM7UUFDbEUsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUM7SUFDcEIsT0FBTztRQUNMLEtBQUssRUFBRSxRQUFRO1FBQ2YsS0FBSyxFQUFFLFFBQVEsQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLElBQUksUUFBUSxDQUFDLEtBQUssSUFBSSxFQUFFLEdBQUcsRUFBRSxJQUFJLFFBQVEsR0FBRyxDQUFDO1FBQzNFLElBQUksRUFBRSxJQUFJLElBQUksRUFBRTtRQUNoQixHQUFHLEVBQUUsSUFBSSxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLFNBQVM7UUFDakMsR0FBRyxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxTQUFTO1FBQ2pDLFVBQVUsRUFBRSxXQUFXLENBQUMsSUFBSSxDQUFDO0tBQzlCLENBQUM7QUFDSixDQUFDIn0=","import { convertUnit } from './convertUnit';\r\nimport { ensureRegexp } from './ensureRegexp';\r\nimport { getConvertedVariable } from './getConvertedVariable';\r\n/**\r\n * Retrieve the spectrum with only X/Y data that match all the selectors\r\n * If more than one variable match the selector the 'x' or 'y' variable will be\r\n * taken\r\n */\r\nexport function getXYSpectrum(spectra = [], selector = {}) {\r\n    if (spectra.length < 1)\r\n        return;\r\n    let { dataType, title, xUnits, yUnits, variables, xVariable = 'x', yVariable = 'y', units, labels, xLabel, yLabel, meta, index, } = selector;\r\n    if (index !== undefined) {\r\n        return spectra[index];\r\n    }\r\n    if (dataType) {\r\n        dataType = ensureRegexp(dataType);\r\n    }\r\n    if (title) {\r\n        title = ensureRegexp(title);\r\n    }\r\n    if (units && !xUnits && !yUnits)\r\n        [yUnits, xUnits] = units.split(/\\s*vs\\s*/);\r\n    if (labels && !xLabel && !yLabel) {\r\n        [yLabel, xLabel] = labels.split(/\\s*vs\\s*/);\r\n    }\r\n    if (variables) {\r\n        const parts = variables.split(/\\s*vs\\s*/);\r\n        if (parts.length === 2) {\r\n            xVariable = parts[1];\r\n            yVariable = parts[0];\r\n        }\r\n    }\r\n    if (xLabel)\r\n        xLabel = ensureRegexp(xLabel);\r\n    if (yLabel)\r\n        yLabel = ensureRegexp(yLabel);\r\n    for (let spectrum of spectra) {\r\n        let variableNames = Object.keys(spectrum.variables);\r\n        if (!(variableNames.length > 1))\r\n            continue;\r\n        // we filter on general spectrum information\r\n        if (dataType) {\r\n            if (!spectrum.dataType || !dataType.exec(spectrum.dataType)) {\r\n                continue;\r\n            }\r\n        }\r\n        if (title) {\r\n            if (!spectrum.title || !title.exec(spectrum.title)) {\r\n                continue;\r\n            }\r\n        }\r\n        if (meta && typeof meta === 'object') {\r\n            if (!spectrum.meta)\r\n                continue;\r\n            for (let key in spectrum.meta) {\r\n                if (!spectrum.meta[key])\r\n                    continue;\r\n                let value = ensureRegexp(spectrum.meta[key]);\r\n                if (!value.exec(spectrum.meta[key]))\r\n                    continue;\r\n            }\r\n        }\r\n        let x = getPossibleVariable(spectrum.variables, {\r\n            units: xUnits,\r\n            label: xLabel,\r\n            variableName: xVariable,\r\n        });\r\n        let y = getPossibleVariable(spectrum.variables, {\r\n            units: yUnits,\r\n            label: yLabel,\r\n            variableName: yVariable,\r\n        });\r\n        if (x && y) {\r\n            return {\r\n                title: spectrum.title,\r\n                dataType: spectrum.dataType,\r\n                meta: spectrum.meta,\r\n                variables: { x, y },\r\n            };\r\n        }\r\n    }\r\n    return;\r\n}\r\nfunction getPossibleVariable(variables, selector = {}) {\r\n    var _a, _b;\r\n    const { units, label, variableName } = selector;\r\n    let possible = { ...variables };\r\n    let key;\r\n    if (units !== undefined) {\r\n        for (key in possible) {\r\n            const variable = variables[key];\r\n            let converted = convertUnit(1, (variable === null || variable === void 0 ? void 0 : variable.units) || '', units);\r\n            if (converted && variable) {\r\n                possible[key] = getConvertedVariable(variable, units);\r\n            }\r\n            else {\r\n                delete possible[key];\r\n            }\r\n        }\r\n    }\r\n    if (label !== undefined) {\r\n        const regexpLabel = ensureRegexp(label);\r\n        for (key in possible) {\r\n            if (!regexpLabel.exec((_b = (_a = variables[key]) === null || _a === void 0 ? void 0 : _a.label) !== null && _b !== void 0 ? _b : '')) {\r\n                delete possible[key];\r\n            }\r\n        }\r\n    }\r\n    if (variableName !== undefined) {\r\n        if (possible[variableName])\r\n            return possible[variableName];\r\n        const upper = variableName.toUpperCase();\r\n        if (Object.prototype.hasOwnProperty.call(possible, upper)) {\r\n            return possible[upper];\r\n        }\r\n        const lower = variableName.toLowerCase();\r\n        if (Object.prototype.hasOwnProperty.call(possible, lower)) {\r\n            return possible[lower];\r\n        }\r\n    }\r\n    const possibleFiltered = Object.values(possible).filter((val) => val !== undefined);\r\n    if (possibleFiltered.length > 0) {\r\n        return possibleFiltered[0];\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0WFlTcGVjdHJ1bS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlsL2dldFhZU3BlY3RydW0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBU0EsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM1QyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDOUMsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFFOUQ7Ozs7R0FJRztBQUNILE1BQU0sVUFBVSxhQUFhLENBQzNCLFVBQTJCLEVBQUUsRUFDN0IsV0FBNkIsRUFBRTtJQUUvQixJQUFJLE9BQU8sQ0FBQyxNQUFNLEdBQUcsQ0FBQztRQUFFLE9BQU87SUFFL0IsSUFBSSxFQUNGLFFBQVEsRUFDUixLQUFLLEVBQ0wsTUFBTSxFQUNOLE1BQU0sRUFDTixTQUFTLEVBQ1QsU0FBUyxHQUFHLEdBQUcsRUFDZixTQUFTLEdBQUcsR0FBRyxFQUNmLEtBQUssRUFDTCxNQUFNLEVBQ04sTUFBTSxFQUNOLE1BQU0sRUFDTixJQUFJLEVBQ0osS0FBSyxHQUNOLEdBQUcsUUFBUSxDQUFDO0lBRWIsSUFBSSxLQUFLLEtBQUssU0FBUyxFQUFFO1FBQ3ZCLE9BQU8sT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDO0tBQ3ZCO0lBRUQsSUFBSSxRQUFRLEVBQUU7UUFDWixRQUFRLEdBQUcsWUFBWSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0tBQ25DO0lBRUQsSUFBSSxLQUFLLEVBQUU7UUFDVCxLQUFLLEdBQUcsWUFBWSxDQUFDLEtBQUssQ0FBQyxDQUFDO0tBQzdCO0lBRUQsSUFBSSxLQUFLLElBQUksQ0FBQyxNQUFNLElBQUksQ0FBQyxNQUFNO1FBQUUsQ0FBQyxNQUFNLEVBQUUsTUFBTSxDQUFDLEdBQUcsS0FBSyxDQUFDLEtBQUssQ0FBQyxVQUFVLENBQUMsQ0FBQztJQUM1RSxJQUFJLE1BQU0sSUFBSSxDQUFDLE1BQU0sSUFB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","import isAnyArray from 'is-any-array';\r\nimport max from 'ml-array-max';\r\nimport min from 'ml-array-min';\r\nimport { xIsMonotone } from 'ml-spectra-processing';\r\nimport { getNormalizedSpectrum } from './util/getNormalizedSpectrum';\r\nimport { getXYSpectrum } from './util/getXYSpectrum';\r\n/**\r\n * Class allowing to store and manipulate an analysis.\r\n * An analysis may contain one or more spectra that can be selected\r\n * based on their units\r\n */\r\nexport class Analysis {\r\n    constructor(options = {}) {\r\n        this.id = options.id || Math.random().toString(36).substring(2, 10);\r\n        this.label = options.label || this.id;\r\n        this.spectrumCallback = options.spectrumCallback;\r\n        this.spectra = [];\r\n        this.cache = {};\r\n    }\r\n    /**\r\n     * Add a spectrum in the internal spectra variable\r\n     */\r\n    pushSpectrum(variables, options = {}) {\r\n        this.spectra.push(standardizeData(variables, options, {\r\n            spectrumCallback: this.spectrumCallback,\r\n        }));\r\n        this.cache = {};\r\n    }\r\n    /**\r\n     * Retrieve a Spectrum based on x/y units\r\n     */\r\n    getXYSpectrum(selector = {}) {\r\n        let id = JSON.stringify(selector);\r\n        if (!this.cache[id]) {\r\n            this.cache[id] = getXYSpectrum(this.spectra, selector);\r\n        }\r\n        return this.cache[id];\r\n    }\r\n    /**\r\n     * Retrieve a xy object\r\n     * @param selector.units Units separated by vs like for example \"g vs °C\"\r\n     * @param selector.xUnits if undefined takes the first variable\r\n     * @param selector.yUnits if undefined takes the second variable\r\n     */\r\n    getXY(selector = {}) {\r\n        let spectrum = this.getXYSpectrum(selector);\r\n        if (!spectrum)\r\n            return undefined;\r\n        return {\r\n            x: spectrum.variables.x.data,\r\n            y: spectrum.variables.y.data,\r\n        };\r\n    }\r\n    /**\r\n     * Return the data object for specific x/y units with possibly some\r\n     * normalization options\r\n     * @param options.selector.xUnits // if undefined takes the first variable\r\n     * @param options.selector.yUnits // if undefined takes the second variable\r\n     */\r\n    getNormalizedSpectrum(options = {}) {\r\n        const { normalization, selector } = options;\r\n        const spectrum = this.getXYSpectrum(selector);\r\n        console.log(selector, spectrum);\r\n        if (!spectrum)\r\n            return undefined;\r\n        return getNormalizedSpectrum(spectrum, normalization);\r\n    }\r\n    /**\r\n     * Returns the first spectrum. This method could be improved in the future\r\n     * @returns\r\n     */\r\n    getSpectrum() {\r\n        return this.spectra[0];\r\n    }\r\n    /**\r\n     * Returns the xLabel\r\n     * @param selector.xUnits // if undefined takes the first variable\r\n     * @param selector.yUnits // if undefined takes the second variable\r\n     */\r\n    getXLabel(selector) {\r\n        var _a;\r\n        return (_a = this.getXYSpectrum(selector)) === null || _a === void 0 ? void 0 : _a.variables.x.label;\r\n    }\r\n    /**\r\n     * Returns the yLabel\r\n     * @param selector.xUnits // if undefined takes the first variable\r\n     * @param selector.yUnits // if undefined takes the second variable\r\n     */\r\n    getYLabel(selector) {\r\n        var _a;\r\n        return (_a = this.getXYSpectrum(selector)) === null || _a === void 0 ? void 0 : _a.variables.y.label;\r\n    }\r\n}\r\n/**\r\n * Internal function that ensure the order of x / y array\r\n */\r\nfunction standardizeData(variables, options, analysisOptions) {\r\n    let { meta = {}, dataType = '', title = '' } = options;\r\n    const { spectrumCallback } = analysisOptions;\r\n    if (spectrumCallback) {\r\n        spectrumCallback(variables);\r\n    }\r\n    let xVariable = variables.x;\r\n    let yVariable = variables.y;\r\n    if (!xVariable || !yVariable) {\r\n        throw Error('A spectrum must contain at least x and y variables');\r\n    }\r\n    if (!isAnyArray(xVariable.data) || !isAnyArray(yVariable.data)) {\r\n        throw Error('x and y variables must contain an array data');\r\n    }\r\n    let x = xVariable.data;\r\n    let reverse = x && x.length > 1 && x[0] > x[x.length - 1];\r\n    for (let [key, variable] of Object.entries(variables)) {\r\n        if (reverse)\r\n            variable.data = variable.data.reverse();\r\n        variable.label = variable.label || key;\r\n        if (variable.label.match(/^.*[([](?<units>.*)[)\\]].*$/)) {\r\n            const units = variable.label.replace(/^.*[([](?<units>.*)[)\\]].*$/, '$<units>');\r\n            if (!variable.units || variable.units === units) {\r\n                variable.units = units;\r\n                variable.label = variable.label.replace(/[([].*[)\\]]/, '').trim();\r\n            }\r\n        }\r\n        variable.min = min(variable.data);\r\n        variable.max = max(variable.data);\r\n        variable.isMonotone = xIsMonotone(variable.data);\r\n    }\r\n    return {\r\n        variables,\r\n        title,\r\n        dataType,\r\n        meta,\r\n    };\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQW5hbHlzaXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvQW5hbHlzaXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxVQUFVLE1BQU0sY0FBYyxDQUFDO0FBQ3RDLE9BQU8sR0FBRyxNQUFNLGNBQWMsQ0FBQztBQUMvQixPQUFPLEdBQUcsTUFBTSxjQUFjLENBQUM7QUFDL0IsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBSXBELE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBQ3JFLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQWNyRDs7OztHQUlHO0FBQ0gsTUFBTSxPQUFPLFFBQVE7SUFPbkIsWUFBbUIsVUFBMkIsRUFBRTtRQUM5QyxJQUFJLENBQUMsRUFBRSxHQUFHLE9BQU8sQ0FBQyxFQUFFLElBQUksSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO1FBQ3BFLElBQUksQ0FBQyxLQUFLLEdBQUcsT0FBTyxDQUFDLEtBQUssSUFBSSxJQUFJLENBQUMsRUFBRSxDQUFDO1FBQ3RDLElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxPQUFPLENBQUMsZ0JBQWdCLENBQUM7UUFDakQsSUFBSSxDQUFDLE9BQU8sR0FBRyxFQUFFLENBQUM7UUFDbEIsSUFBSSxDQUFDLEtBQUssR0FBRyxFQUFFLENBQUM7SUFDbEIsQ0FBQztJQUVEOztPQUVHO0lBQ0ksWUFBWSxDQUNqQixTQUE0QixFQUM1QixVQUF1QyxFQUFFO1FBRXpDLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUNmLGVBQWUsQ0FBQyxTQUFTLEVBQUUsT0FBTyxFQUFFO1lBQ2xDLGdCQUFnQixFQUFFLElBQUksQ0FBQyxnQkFBZ0I7U0FDeEMsQ0FBQyxDQUNILENBQUM7UUFDRixJQUFJLENB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","/**\n * Ensure that the data is string. If it is an ArrayBuffer it will be converted to string using TextDecoder.\n * @param blob\n * @param options\n * @returns\n */\nexport function ensureString(blob, options = {}) {\n    if (typeof blob === 'string') {\n        return blob;\n    }\n    if (ArrayBuffer.isView(blob) || blob instanceof ArrayBuffer) {\n        const { encoding = guessEncoding(blob) } = options;\n        const decoder = new TextDecoder(encoding);\n        return decoder.decode(blob);\n    }\n    throw new TypeError(`blob must be a string, ArrayBuffer or ArrayBufferView`);\n}\nfunction guessEncoding(blob) {\n    const uint8 = ArrayBuffer.isView(blob)\n        ? new Uint8Array(blob.buffer, blob.byteOffset, blob.byteLength)\n        : new Uint8Array(blob);\n    if (uint8.length >= 2) {\n        if (uint8[0] === 0xfe && uint8[1] === 0xff) {\n            return 'utf-16be';\n        }\n        if (uint8[0] === 0xff && uint8[1] === 0xfe) {\n            return 'utf-16le';\n        }\n    }\n    return 'utf-8';\n}\n//# sourceMappingURL=index.js.map","/**\n * Dynamically type a string\n * @param {string} value String to dynamically type\n * @returns {boolean|string|number}\n */\nexport function parseString(value) {\n  if (value.length === 4 || value.length === 5) {\n    let lowercase = value.toLowerCase();\n\n    if (lowercase === 'true') return true;\n    if (lowercase === 'false') return false;\n  }\n  let number = Number(value);\n  if (number === 0 && !value.includes('0')) {\n    return value;\n  }\n  if (!Number.isNaN(number)) return number;\n  return value;\n}\n","const GC_MS_FIELDS = ['TIC', '.RIC', 'SCANNUMBER'];\n\nexport function complexChromatogram(result) {\n  let spectra = result.spectra;\n  let length = spectra.length;\n  let chromatogram = {\n    times: new Array(length),\n    series: {\n      ms: {\n        dimension: 2,\n        data: new Array(length),\n      },\n    },\n  };\n\n  let existingGCMSFields = [];\n  for (let i = 0; i < GC_MS_FIELDS.length; i++) {\n    let label = convertMSFieldToLabel(GC_MS_FIELDS[i]);\n    if (spectra[0][label]) {\n      existingGCMSFields.push(label);\n      chromatogram.series[label] = {\n        dimension: 1,\n        data: new Array(length),\n      };\n    }\n  }\n\n  for (let i = 0; i < length; i++) {\n    let spectrum = spectra[i];\n    chromatogram.times[i] = spectrum.pageValue;\n    for (let j = 0; j < existingGCMSFields.length; j++) {\n      chromatogram.series[existingGCMSFields[j]].data[i] = parseFloat(\n        spectrum[existingGCMSFields[j]],\n      );\n    }\n    if (spectrum.data) {\n      chromatogram.series.ms.data[i] = [spectrum.data.x, spectrum.data.y];\n    }\n  }\n  result.chromatogram = chromatogram;\n}\n\nexport function isMSField(canonicDataLabel) {\n  return GC_MS_FIELDS.indexOf(canonicDataLabel) !== -1;\n}\n\nexport function convertMSFieldToLabel(value) {\n  return value.toLowerCase().replace(/[^a-z0-9]/g, '');\n}\n","export default function convertToFloatArray(stringArray) {\n  let floatArray = [];\n  for (let i = 0; i < stringArray.length; i++) {\n    floatArray.push(parseFloat(stringArray[i]));\n  }\n  return floatArray;\n}\n","export default function fastParseXYData(spectrum, value) {\n  // TODO need to deal with result\n  //  console.log(value);\n  // we check if deltaX is defined otherwise we calculate it\n\n  let yFactor = spectrum.yFactor;\n  let deltaX = spectrum.deltaX;\n\n  spectrum.isXYdata = true;\n  let currentData = { x: [], y: [] };\n  spectrum.data = currentData;\n\n  let currentX = spectrum.firstX;\n  let currentY = spectrum.firstY;\n\n  // we skip the first line\n  //\n  let endLine = false;\n  let ascii;\n  let i = 0;\n  for (; i < value.length; i++) {\n    ascii = value.charCodeAt(i);\n    if (ascii === 13 || ascii === 10) {\n      endLine = true;\n    } else {\n      if (endLine) break;\n    }\n  }\n\n  // we proceed taking the i after the first line\n  let newLine = true;\n  let isDifference = false;\n  let isLastDifference = false;\n  let lastDifference = 0;\n  let isDuplicate = false;\n  let inComment = false;\n  let currentValue = 0; // can be a difference or a duplicate\n  let lastValue = 0; // must be the real last value\n  let isNegative = false;\n  let inValue = false;\n  let skipFirstValue = false;\n  let decimalPosition = 0;\n  for (; i <= value.length; i++) {\n    if (i === value.length) ascii = 13;\n    else ascii = value.charCodeAt(i);\n    if (inComment) {\n      // we should ignore the text if we are after $$\n      if (ascii === 13 || ascii === 10) {\n        newLine = true;\n        inComment = false;\n      }\n    } else {\n      // when is it a new value ?\n      // when it is not a digit, . or comma\n      // it is a number that is either new or we continue\n      if (ascii <= 57 && ascii >= 48) {\n        // a number\n        inValue = true;\n        if (decimalPosition > 0) {\n          currentValue += (ascii - 48) / Math.pow(10, decimalPosition++);\n        } else {\n          currentValue *= 10;\n          currentValue += ascii - 48;\n        }\n      } else if (ascii === 44 || ascii === 46) {\n        // a \",\" or \".\"\n        inValue = true;\n        decimalPosition++;\n      } else {\n        if (inValue) {\n          // need to process the previous value\n          if (newLine) {\n            newLine = false; // we don't check the X value\n            // console.log(\"NEW LINE\",isDifference, lastDifference);\n            // if new line and lastDifference, the first value is just a check !\n            // that we don't check ...\n            if (isLastDifference) skipFirstValue = true;\n          } else {\n            // need to deal with duplicate and differences\n            if (skipFirstValue) {\n              skipFirstValue = false;\n            } else {\n              if (isDifference) {\n                lastDifference = isNegative ? 0 - currentValue : currentValue;\n                isLastDifference = true;\n                isDifference = false;\n              } else if (!isDuplicate) {\n                lastValue = isNegative ? 0 - currentValue : currentValue;\n              }\n              let duplicate = isDuplicate ? currentValue - 1 : 1;\n              for (let j = 0; j < duplicate; j++) {\n                if (isLastDifference) {\n                  currentY += lastDifference;\n                } else {\n                  currentY = lastValue;\n                }\n                currentData.x.push(currentX);\n                currentData.y.push(currentY * yFactor);\n                currentX += deltaX;\n              }\n            }\n          }\n          isNegative = false;\n          currentValue = 0;\n          decimalPosition = 0;\n          inValue = false;\n          isDuplicate = false;\n        }\n\n        // positive SQZ digits @ A B C D E F G H I (ascii 64-73)\n        if (ascii < 74 && ascii > 63) {\n          inValue = true;\n          isLastDifference = false;\n          currentValue = ascii - 64;\n        } else if (ascii > 96 && ascii < 106) {\n          // negative SQZ digits a b c d e f g h i (ascii 97-105)\n          inValue = true;\n          isLastDifference = false;\n          currentValue = ascii - 96;\n          isNegative = true;\n        } else if (ascii === 115) {\n          // DUP digits S T U V W X Y Z s (ascii 83-90, 115)\n          inValue = true;\n          isDuplicate = true;\n          currentValue = 9;\n        } else if (ascii > 82 && ascii < 91) {\n          inValue = true;\n          isDuplicate = true;\n          currentValue = ascii - 82;\n        } else if (ascii > 73 && ascii < 83) {\n          // positive DIF digits % J K L M N O P Q R (ascii 37, 74-82)\n          inValue = true;\n          isDifference = true;\n          currentValue = ascii - 73;\n        } else if (ascii > 105 && ascii < 115) {\n          // negative DIF digits j k l m n o p q r (ascii 106-114)\n          inValue = true;\n          isDifference = true;\n          currentValue = ascii - 105;\n          isNegative = true;\n        } else if (ascii === 36 && value.charCodeAt(i + 1) === 36) {\n          // $ sign, we need to check the next one\n          inValue = true;\n          inComment = true;\n        } else if (ascii === 37) {\n          // positive DIF digits % J K L M N O P Q R (ascii 37, 74-82)\n          inValue = true;\n          isDifference = true;\n          currentValue = 0;\n          isNegative = false;\n        } else if (ascii === 45) {\n          // a \"-\"\n          // check if after there is a number, decimal or comma\n          let ascii2 = value.charCodeAt(i + 1);\n          if (\n            (ascii2 >= 48 && ascii2 <= 57) ||\n            ascii2 === 44 ||\n            ascii2 === 46\n          ) {\n            inValue = true;\n            if (!newLine) isLastDifference = false;\n            isNegative = true;\n          }\n        } else if (ascii === 13 || ascii === 10) {\n          newLine = true;\n          inComment = false;\n        }\n        // and now analyse the details ... space or tabulation\n        // if \"+\" we just don't care\n      }\n    }\n  }\n}\n","const removeCommentRegExp = /\\$\\$.*/;\nconst peakTableSplitRegExp = /[,\\t ]+/;\n\nexport default function parsePeakTable(spectrum, value, result) {\n  spectrum.isPeaktable = true;\n\n  if (!spectrum.variables || Object.keys(spectrum.variables) === 2) {\n    parseXY(spectrum, value, result);\n  } else {\n    parseXYZ(spectrum, value, result);\n  }\n\n  // we will add the data in the variables\n  if (spectrum.variables) {\n    for (let key in spectrum.variables) {\n      spectrum.variables[key].data = spectrum.data[key];\n    }\n  }\n}\n\nfunction parseXY(spectrum, value, result) {\n  let currentData = { x: [], y: [] };\n  spectrum.data = currentData;\n\n  // counts for around 20% of the time\n  let lines = value.split(/,? *,?[;\\r\\n]+ */);\n\n  for (let i = 1; i < lines.length; i++) {\n    let values = lines[i]\n      .trim()\n      .replace(removeCommentRegExp, '')\n      .split(peakTableSplitRegExp);\n    if (values.length % 2 === 0) {\n      for (let j = 0; j < values.length; j = j + 2) {\n        // takes around 40% of the time to add and parse the 2 values nearly exclusively because of parseFloat\n        currentData.x.push(parseFloat(values[j]) * spectrum.xFactor);\n        currentData.y.push(parseFloat(values[j + 1]) * spectrum.yFactor);\n      }\n    } else {\n      result.logs.push(`Format error: ${values}`);\n    }\n  }\n}\n\nfunction parseXYZ(spectrum, value, result) {\n  let currentData = {};\n  let variables = Object.keys(spectrum.variables);\n  let numberOfVariables = variables.length;\n  variables.forEach((variable) => (currentData[variable] = []));\n  spectrum.data = currentData;\n\n  // counts for around 20% of the time\n  let lines = value.split(/,? *,?[;\\r\\n]+ */);\n\n  for (let i = 1; i < lines.length; i++) {\n    let values = lines[i]\n      .trim()\n      .replace(removeCommentRegExp, '')\n      .split(peakTableSplitRegExp);\n    if (values.length % numberOfVariables === 0) {\n      for (let j = 0; j < values.length; j++) {\n        // todo should try to find a xFactor (y, ...)\n        currentData[variables[j % numberOfVariables]].push(\n          parseFloat(values[j]),\n        );\n      }\n    } else {\n      result.logs.push(`Format error: ${values}`);\n    }\n  }\n}\n","export default function parseXYA(spectrum, value) {\n  let removeSymbolRegExp = /(\\(+|\\)+|<+|>+|\\s+)/g;\n\n  spectrum.isXYAdata = true;\n  let values;\n  let currentData = { x: [], y: [] };\n  spectrum.data = currentData;\n\n  let lines = value.split(/,? *,?[;\\r\\n]+ */);\n\n  for (let i = 1; i < lines.length; i++) {\n    values = lines[i].trim().replace(removeSymbolRegExp, '').split(',');\n    currentData.x.push(parseFloat(values[0]));\n    currentData.y.push(parseFloat(values[1]));\n  }\n}\n","import getMedian from 'ml-array-median';\n\nexport default function convertTo3DZ(spectra) {\n  let minZ = spectra[0].data.y[0];\n  let maxZ = minZ;\n  let ySize = spectra.length;\n  let xSize = spectra[0].data.x.length;\n\n  let z = new Array(ySize);\n  for (let i = 0; i < ySize; i++) {\n    z[i] = spectra[i].data.y;\n    for (let j = 0; j < xSize; j++) {\n      let value = z[i][j];\n      if (value < minZ) minZ = value;\n      if (value > maxZ) maxZ = value;\n    }\n  }\n\n  const firstX = spectra[0].data.x[0];\n  const lastX = spectra[0].data.x[spectra[0].data.x.length - 1]; // has to be -2 because it is a 1D array [x,y,x,y,...]\n  const firstY = spectra[0].pageValue;\n  const lastY = spectra[ySize - 1].pageValue;\n\n  // Because the min / max value are the only information about the matrix if we invert\n  // min and max we need to invert the array\n  if (firstX > lastX) {\n    for (let spectrum of z) {\n      spectrum.reverse();\n    }\n  }\n  if (firstY > lastY) {\n    z.reverse();\n  }\n\n  const medians = [];\n  for (let i = 0; i < z.length; i++) {\n    const row = Float64Array.from(z[i]);\n    for (let i = 0; i < row.length; i++) {\n      if (row[i] < 0) row[i] = -row[i];\n    }\n    medians.push(getMedian(row));\n  }\n  const median = getMedian(medians);\n\n  return {\n    z: z,\n    minX: Math.min(firstX, lastX),\n    maxX: Math.max(firstX, lastX),\n    minY: Math.min(firstY, lastY),\n    maxY: Math.max(firstY, lastY),\n    minZ: minZ,\n    maxZ: maxZ,\n    noise: median,\n  };\n}\n","export default function generateContourLines(zData, options) {\n  let noise = zData.noise;\n  let z = zData.z;\n  let povarHeight0, povarHeight1, povarHeight2, povarHeight3;\n  let isOver0, isOver1, isOver2, isOver3;\n  let nbSubSpectra = z.length;\n  let nbPovars = z[0].length;\n  let pAx, pAy, pBx, pBy;\n\n  let x0 = zData.minX;\n  let xN = zData.maxX;\n  let dx = (xN - x0) / (nbPovars - 1);\n  let y0 = zData.minY;\n  let yN = zData.maxY;\n  let dy = (yN - y0) / (nbSubSpectra - 1);\n  let minZ = zData.minZ;\n  let maxZ = zData.maxZ;\n\n  // System.out.prvarln('y0 '+y0+' yN '+yN);\n  // -------------------------\n  // Povars attribution\n  //\n  // 0----1\n  // |  / |\n  // | /  |\n  // 2----3\n  //\n  // ---------------------d------\n\n  let iter = options.nbContourLevels * 2;\n  let contourLevels = new Array(iter);\n  let lineZValue;\n  for (let level = 0; level < iter; level++) {\n    // multiply by 2 for positif and negatif\n    let contourLevel = {};\n    contourLevels[level] = contourLevel;\n    let side = level % 2;\n    let factor =\n      (maxZ - options.noiseMultiplier * noise) *\n      Math.exp((level >> 1) - options.nbContourLevels);\n    if (side === 0) {\n      lineZValue = factor + options.noiseMultiplier * noise;\n    } else {\n      lineZValue = 0 - factor - options.noiseMultiplier * noise;\n    }\n    let lines = [];\n    contourLevel.zValue = lineZValue;\n    contourLevel.lines = lines;\n\n    if (lineZValue <= minZ || lineZValue >= maxZ) continue;\n\n    for (let iSubSpectra = 0; iSubSpectra < nbSubSpectra - 1; iSubSpectra++) {\n      let subSpectra = z[iSubSpectra];\n      let subSpectraAfter = z[iSubSpectra + 1];\n      for (let povar = 0; povar < nbPovars - 1; povar++) {\n        povarHeight0 = subSpectra[povar];\n        povarHeight1 = subSpectra[povar + 1];\n        povarHeight2 = subSpectraAfter[povar];\n        povarHeight3 = subSpectraAfter[povar + 1];\n\n        isOver0 = povarHeight0 > lineZValue;\n        isOver1 = povarHeight1 > lineZValue;\n        isOver2 = povarHeight2 > lineZValue;\n        isOver3 = povarHeight3 > lineZValue;\n\n        // Example povar0 is over the plane and povar1 and\n        // povar2 are below, we find the varersections and add\n        // the segment\n        if (isOver0 !== isOver1 && isOver0 !== isOver2) {\n          pAx =\n            povar + (lineZValue - povarHeight0) / (povarHeight1 - povarHeight0);\n          pAy = iSubSpectra;\n          pBx = povar;\n          pBy =\n            iSubSpectra +\n            (lineZValue - povarHeight0) / (povarHeight2 - povarHeight0);\n          lines.push(pAx * dx + x0);\n          lines.push(pAy * dy + y0);\n          lines.push(pBx * dx + x0);\n          lines.push(pBy * dy + y0);\n        }\n        // remove push does not help !!!!\n        if (isOver3 !== isOver1 && isOver3 !== isOver2) {\n          pAx = povar + 1;\n          pAy =\n            iSubSpectra +\n            1 -\n            (lineZValue - povarHeight3) / (povarHeight1 - povarHeight3);\n          pBx =\n            povar +\n            1 -\n            (lineZValue - povarHeight3) / (povarHeight2 - povarHeight3);\n          pBy = iSubSpectra + 1;\n          lines.push(pAx * dx + x0);\n          lines.push(pAy * dy + y0);\n          lines.push(pBx * dx + x0);\n          lines.push(pBy * dy + y0);\n        }\n        // test around the diagonal\n        if (isOver1 !== isOver2) {\n          pAx =\n            (povar +\n              1 -\n              (lineZValue - povarHeight1) / (povarHeight2 - povarHeight1)) *\n              dx +\n            x0;\n          pAy =\n            (iSubSpectra +\n              (lineZValue - povarHeight1) / (povarHeight2 - povarHeight1)) *\n              dy +\n            y0;\n          if (isOver1 !== isOver0) {\n            pBx =\n              povar +\n              1 -\n              (lineZValue - povarHeight1) / (povarHeight0 - povarHeight1);\n            pBy = iSubSpectra;\n            lines.push(pAx);\n            lines.push(pAy);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n          if (isOver2 !== isOver0) {\n            pBx = povar;\n            pBy =\n              iSubSpectra +\n              1 -\n              (lineZValue - povarHeight2) / (povarHeight0 - povarHeight2);\n            lines.push(pAx);\n            lines.push(pAy);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n          if (isOver1 !== isOver3) {\n            pBx = povar + 1;\n            pBy =\n              iSubSpectra +\n              (lineZValue - povarHeight1) / (povarHeight3 - povarHeight1);\n            lines.push(pAx);\n            lines.push(pAy);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n          if (isOver2 !== isOver3) {\n            pBx =\n              povar +\n              (lineZValue - povarHeight2) / (povarHeight3 - povarHeight2);\n            pBy = iSubSpectra + 1;\n            lines.push(pAx);\n            lines.push(pAy);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n        }\n      }\n    }\n  }\n\n  return {\n    minX: zData.minX,\n    maxX: zData.maxX,\n    minY: zData.minY,\n    maxY: zData.maxY,\n    segments: contourLevels,\n  };\n}\n","import convertTo3DZ from './convertTo3DZ';\nimport generateContourLines from './generateContourLines';\n\nexport default function add2D(result, options) {\n  let zData = convertTo3DZ(result.spectra);\n  if (!options.noContour) {\n    result.contourLines = generateContourLines(zData, options);\n    delete zData.z;\n  }\n  result.minMax = zData;\n}\n","// sources:\n// https://en.wikipedia.org/wiki/Gyromagnetic_ratio\n// TODO: #13 can we have a better source and more digits ? @jwist\nexport const gyromagneticRatio = {\n    '1H': 267.52218744e6,\n    '2H': 41.065e6,\n    '3H': 285.3508e6,\n    '3He': -203.789e6,\n    '7Li': 103.962e6,\n    '13C': 67.28284e6,\n    '14N': 19.331e6,\n    '15N': -27.116e6,\n    '17O': -36.264e6,\n    '19F': 251.662e6,\n    '23Na': 70.761e6,\n    '27Al': 69.763e6,\n    '29Si': -53.19e6,\n    '31P': 108.291e6,\n    '57Fe': 8.681e6,\n    '63Cu': 71.118e6,\n    '67Zn': 16.767e6,\n    '129Xe': -73.997e6,\n};\n//# sourceMappingURL=gyromagneticRatio.js.map","import { gyromagneticRatio } from 'nmr-processing';\n\nexport default function postProcessingNMR(entriesFlat) {\n  // specific NMR functions\n\n  for (let entry of entriesFlat) {\n    let observeFrequency = 0;\n    let shiftOffsetVal = 0;\n    for (let spectrum of entry.spectra) {\n      if (entry.ntuples && entry.ntuples.symbol) {\n        if (!observeFrequency && spectrum.observeFrequency) {\n          observeFrequency = spectrum.observeFrequency;\n        }\n        if (!shiftOffsetVal && spectrum.shiftOffsetVal) {\n          shiftOffsetVal = spectrum.shiftOffsetVal;\n        }\n      } else {\n        observeFrequency = spectrum.observeFrequency;\n        shiftOffsetVal = spectrum.shiftOffsetVal;\n      }\n\n      if (observeFrequency) {\n        if (spectrum.xUnits && spectrum.xUnits.toUpperCase().includes('HZ')) {\n          spectrum.xUnits = 'PPM';\n          spectrum.xFactor = spectrum.xFactor / observeFrequency;\n          spectrum.firstX = spectrum.firstX / observeFrequency;\n          spectrum.lastX = spectrum.lastX / observeFrequency;\n          spectrum.deltaX = spectrum.deltaX / observeFrequency;\n          for (let i = 0; i < spectrum.data.x.length; i++) {\n            spectrum.data.x[i] /= observeFrequency;\n          }\n        }\n      }\n      if (shiftOffsetVal) {\n        let shift = spectrum.firstX - shiftOffsetVal;\n        spectrum.firstX = spectrum.firstX - shift;\n        spectrum.lastX = spectrum.lastX - shift;\n        for (let i = 0; i < spectrum.data.x.length; i++) {\n          spectrum.data.x[i] -= shift;\n        }\n      }\n\n      // we will check if some nucleus are missing ...\n      if (entry.ntuples && entry.ntuples.nucleus && entry.ntuples.symbol) {\n        for (let i = 0; i < entry.ntuples.nucleus.length; i++) {\n          let symbol = entry.ntuples.symbol[i];\n          let nucleus = entry.ntuples.nucleus[i];\n          if (symbol.startsWith('F') && !nucleus) {\n            if (symbol === 'F1') {\n              // if F1 is defined we will use F2\n              if (entry.tmp.$NUC2) {\n                entry.ntuples.nucleus[i] = entry.tmp.$NUC2;\n              } else {\n                let f2index = entry.ntuples.symbol.indexOf('F2');\n                if (f2index && entry.ntuples.nucleus[f2index]) {\n                  entry.ntuples.nucleus[i] = entry.ntuples.nucleus[f2index];\n                }\n              }\n            }\n            if (symbol === 'F2') entry.ntuples.nucleus[i] = entry.tmp.$NUC1;\n          }\n          if (symbol === 'F2') {\n            entry.yType = entry.ntuples.nucleus[0];\n          }\n        }\n      }\n\n      if (\n        observeFrequency &&\n        entry.ntuples &&\n        entry.ntuples.symbol &&\n        entry.ntuples.nucleus\n      ) {\n        let unit = '';\n        let pageSymbolIndex = entry.ntuples.symbol.indexOf(spectrum.pageSymbol);\n        if (entry.ntuples.units && entry.ntuples.units[pageSymbolIndex]) {\n          unit = entry.ntuples.units[pageSymbolIndex];\n        }\n        if (unit !== 'PPM') {\n          if (pageSymbolIndex !== 0) {\n            throw Error('Not sure about this ntuples format');\n          }\n\n          let ratio0 = gyromagneticRatio[entry.ntuples.nucleus[0]];\n          let ratio1 = gyromagneticRatio[entry.ntuples.nucleus[1]];\n          if (!ratio0 || !ratio1) {\n            throw Error('Problem with determination of gyromagnetic ratio');\n          }\n          let ratio = (ratio0 / ratio1) * observeFrequency;\n          spectrum.pageValue /= ratio;\n        }\n      }\n    }\n  }\n}\n","export default function profiling(result, action, options) {\n  if (result.profiling) {\n    result.profiling.push({\n      action,\n      time: Date.now() - options.start,\n    });\n  }\n}\n","export default function simpleChromatogram(result) {\n  let data = result.spectra[0].data;\n  result.chromatogram = {\n    times: data.x.slice(),\n    series: {\n      intensity: {\n        dimension: 1,\n        data: data.y.slice(),\n      },\n    },\n  };\n}\n","import add2D from './2d/add2D';\nimport { complexChromatogram } from './complexChromatogram';\nimport postProcessingNMR from './postProcessingNMR';\nimport profiling from './profiling';\nimport simpleChromatogram from './simpleChromatogram';\n\nexport default function postProcessing(entriesFlat, result, options) {\n  // converting Hz to ppm\n  postProcessingNMR(entriesFlat);\n\n  for (let entry of entriesFlat) {\n    if (Object.keys(entry.ntuples).length > 0) {\n      let newNtuples = [];\n      let keys = Object.keys(entry.ntuples);\n      for (let i = 0; i < keys.length; i++) {\n        let key = keys[i];\n        let values = entry.ntuples[key];\n        for (let j = 0; j < values.length; j++) {\n          if (!newNtuples[j]) newNtuples[j] = {};\n          newNtuples[j][key] = values[j];\n        }\n      }\n      entry.ntuples = newNtuples;\n    }\n\n    if (entry.twoD && options.wantXY) {\n      add2D(entry, options);\n\n      profiling(result, 'Finished countour plot calculation', options);\n\n      if (!options.keepSpectra) {\n        delete entry.spectra;\n      }\n    }\n\n    // maybe it is a GC (HPLC) / MS. In this case we add a new format\n    if (options.chromatogram) {\n      if (entry.spectra.length > 1) {\n        complexChromatogram(entry);\n      } else {\n        simpleChromatogram(entry);\n      }\n      profiling(result, 'Finished chromatogram calculation', options);\n    }\n\n    delete entry.tmp;\n  }\n}\n","export default function prepareNtuplesDatatable(currentEntry, spectrum, kind) {\n  let xIndex = -1;\n  let yIndex = -1;\n  let firstVariable = '';\n  let secondVariable = '';\n  if (kind.indexOf('++') > 0) {\n    firstVariable = kind.replace(/.*\\(([a-zA-Z0-9]+)\\+\\+.*/, '$1');\n    secondVariable = kind.replace(/.*\\.\\.([a-zA-Z0-9]+).*/, '$1');\n  } else {\n    kind = kind.replace(/[^a-zA-Z]/g, '');\n    firstVariable = kind.charAt(0);\n    secondVariable = kind.charAt(1);\n    spectrum.variables = {};\n    for (let symbol of kind) {\n      let lowerCaseSymbol = symbol.toLowerCase();\n      let index = currentEntry.ntuples.symbol.indexOf(symbol);\n      if (index === -1) throw Error(`Symbol undefined: ${symbol}`);\n      spectrum.variables[lowerCaseSymbol] = {};\n      for (let key in currentEntry.ntuples) {\n        if (currentEntry.ntuples[key][index]) {\n          spectrum.variables[lowerCaseSymbol][key.replace(/^var/, '')] =\n            currentEntry.ntuples[key][index];\n        }\n      }\n    }\n  }\n  xIndex = currentEntry.ntuples.symbol.indexOf(firstVariable);\n  yIndex = currentEntry.ntuples.symbol.indexOf(secondVariable);\n\n  if (xIndex === -1) xIndex = 0;\n  if (yIndex === -1) yIndex = 0;\n\n  if (currentEntry.ntuples.first) {\n    if (currentEntry.ntuples.first.length > xIndex) {\n      spectrum.firstX = currentEntry.ntuples.first[xIndex];\n    }\n    if (currentEntry.ntuples.first.length > yIndex) {\n      spectrum.firstY = currentEntry.ntuples.first[yIndex];\n    }\n  }\n  if (currentEntry.ntuples.last) {\n    if (currentEntry.ntuples.last.length > xIndex) {\n      spectrum.lastX = currentEntry.ntuples.last[xIndex];\n    }\n    if (currentEntry.ntuples.last.length > yIndex) {\n      spectrum.lastY = currentEntry.ntuples.last[yIndex];\n    }\n  }\n  if (\n    currentEntry.ntuples.vardim &&\n    currentEntry.ntuples.vardim.length > xIndex\n  ) {\n    spectrum.nbPoints = currentEntry.ntuples.vardim[xIndex];\n  }\n  if (currentEntry.ntuples.factor) {\n    if (currentEntry.ntuples.factor.length > xIndex) {\n      spectrum.xFactor = currentEntry.ntuples.factor[xIndex];\n    }\n    if (currentEntry.ntuples.factor.length > yIndex) {\n      spectrum.yFactor = currentEntry.ntuples.factor[yIndex];\n    }\n  }\n  if (currentEntry.ntuples.units) {\n    if (currentEntry.ntuples.units.length > xIndex) {\n      if (\n        currentEntry.ntuples.varname &&\n        currentEntry.ntuples.varname[xIndex]\n      ) {\n        spectrum.xUnits = `${currentEntry.ntuples.varname[xIndex]} [${currentEntry.ntuples.units[xIndex]}]`;\n      } else {\n        spectrum.xUnits = currentEntry.ntuples.units[xIndex];\n      }\n    }\n    if (currentEntry.ntuples.units.length > yIndex) {\n      if (\n        currentEntry.ntuples.varname &&\n        currentEntry.ntuples.varname[yIndex]\n      ) {\n        spectrum.yUnits = `${currentEntry.ntuples.varname[yIndex]} [${currentEntry.ntuples.units[yIndex]}]`;\n      } else {\n        spectrum.yUnits = currentEntry.ntuples.units[yIndex];\n      }\n    }\n  }\n}\n","export default function prepareSpectrum(spectrum) {\n  if (!spectrum.xFactor) spectrum.xFactor = 1;\n  if (!spectrum.yFactor) spectrum.yFactor = 1;\n}\n","import { parseString } from 'dynamic-typing';\nimport { ensureString } from 'ensure-string';\n\nimport { isMSField, convertMSFieldToLabel } from './complexChromatogram';\nimport convertToFloatArray from './convertToFloatArray';\nimport fastParseXYData from './parse/fastParseXYData';\nimport parsePeakTable from './parse/parsePeakTable';\nimport parseXYA from './parse/parseXYA';\nimport postProcessing from './postProcessing';\nimport prepareNtuplesDatatable from './prepareNtuplesDatatable';\nimport prepareSpectrum from './prepareSpectrum';\nimport profiling from './profiling';\n\n// the following RegExp can only be used for XYdata, some peakTables have values with a \"E-5\" ...\nconst ntuplesSeparatorRegExp = /[ \\t]*,[ \\t]*/;\n\nclass Spectrum {}\n\nconst defaultOptions = {\n  keepRecordsRegExp: /^$/,\n  canonicDataLabels: true,\n  canonicMetadataLabels: false,\n  dynamicTyping: true,\n  withoutXY: false,\n  chromatogram: false,\n  keepSpectra: false,\n  noContour: false,\n  nbContourLevels: 7,\n  noiseMultiplier: 5,\n  profiling: false,\n};\n\n/**\n *\n * @param {string|ArrayBuffer} jcamp\n * @param {object} [options]\n * @param {number} [options.keepRecordsRegExp=/^$/] By default we don't keep meta information\n * @param {number} [options.canonicDataLabels=true] Canonize the Labels (uppercase without symbol)\n * @param {number} [options.canonicMetadataLabels=false] Canonize the metadata Labels (uppercase without symbol)\n * @param {number} [options.dynamicTyping=false] Convert numbers to Number\n * @param {number} [options.withoutXY=false] Remove the XY data\n * @param {number} [options.chromatogram=false] Special post-processing for GC / HPLC / MS\n * @param {number} [options.keepSpectra=false] Force to keep the spectra in case of 2D\n * @param {number} [options.noContour=false] Don't calculate countour in case of 2D\n * @param {number} [options.nbContourLevels=7] Number of positive / negative contour levels to calculate\n * @param {number} [options.noiseMultiplier=5] Define for 2D the level as 5 times the median as default\n * @param {number} [options.profiling=false] Add profiling information\n */\n\nexport default function convert(jcamp, options = {}) {\n  jcamp = ensureString(jcamp);\n  options = { ...defaultOptions, ...options };\n  options.wantXY = !options.withoutXY;\n  options.start = Date.now();\n\n  let entriesFlat = [];\n\n  let result = {\n    profiling: options.profiling ? [] : false,\n    logs: [],\n    entries: [],\n  };\n\n  let tmpResult = { children: [] };\n  let currentEntry = tmpResult;\n  let parentsStack = [];\n\n  let spectrum = new Spectrum();\n\n  if (typeof jcamp !== 'string') {\n    throw new TypeError('the JCAMP should be a string');\n  }\n\n  profiling(result, 'Before split to LDRS', options);\n\n  let ldrs = jcamp.replace(/[\\r\\n]+##/g, '\\n##').split('\\n##');\n\n  profiling(result, 'Split to LDRS', options);\n\n  if (ldrs[0]) ldrs[0] = ldrs[0].replace(/^[\\r\\n ]*##/, '');\n\n  for (let ldr of ldrs) {\n    // This is a new LDR\n    let position = ldr.indexOf('=');\n    let dataLabel = position > 0 ? ldr.substring(0, position) : ldr;\n    let dataValue = position > 0 ? ldr.substring(position + 1).trim() : '';\n\n    let canonicDataLabel = dataLabel.replace(/[_ -]/g, '').toUpperCase();\n\n    if (canonicDataLabel === 'DATATABLE') {\n      let endLine = dataValue.indexOf('\\n');\n      if (endLine === -1) endLine = dataValue.indexOf('\\r');\n      if (endLine > 0) {\n        // ##DATA TABLE= (X++(I..I)), XYDATA\n        // We need to find the variables\n\n        let infos = dataValue.substring(0, endLine).split(/[ ,;\\t]+/);\n        prepareNtuplesDatatable(currentEntry, spectrum, infos[0]);\n\n        spectrum.datatable = infos[0];\n        if (infos[1] && infos[1].indexOf('PEAKS') > -1) {\n          canonicDataLabel = 'PEAKTABLE';\n        } else if (\n          infos[1] &&\n          (infos[1].indexOf('XYDATA') || infos[0].indexOf('++') > 0)\n        ) {\n          canonicDataLabel = 'XYDATA';\n          spectrum.deltaX =\n            (spectrum.lastX - spectrum.firstX) / (spectrum.nbPoints - 1);\n        }\n      }\n    }\n\n    if (canonicDataLabel === 'XYDATA') {\n      if (options.wantXY) {\n        prepareSpectrum(spectrum);\n        // well apparently we should still consider it is a PEAK TABLE if there are no '++' after\n        if (dataValue.match(/.*\\+\\+.*/)) {\n          // ex: (X++(Y..Y))\n          spectrum.deltaX =\n            (spectrum.lastX - spectrum.firstX) / (spectrum.nbPoints - 1);\n\n          fastParseXYData(spectrum, dataValue, result);\n        } else {\n          parsePeakTable(spectrum, dataValue, result);\n        }\n        currentEntry.spectra.push(spectrum);\n        spectrum = new Spectrum();\n      }\n      continue;\n    } else if (canonicDataLabel === 'PEAKTABLE') {\n      if (options.wantXY) {\n        prepareSpectrum(spectrum);\n        parsePeakTable(spectrum, dataValue, result);\n        currentEntry.spectra.push(spectrum);\n        spectrum = new Spectrum();\n      }\n      continue;\n    }\n    if (canonicDataLabel === 'PEAKASSIGNMENTS') {\n      if (options.wantXY) {\n        if (dataValue.match(/.*(XYA).*/)) {\n          // ex: (XYA)\n          parseXYA(spectrum, dataValue);\n        }\n        currentEntry.spectra.push(spectrum);\n        spectrum = new Spectrum();\n      }\n      continue;\n    }\n\n    if (canonicDataLabel === 'TITLE') {\n      let parentEntry = currentEntry;\n      if (!parentEntry.children) {\n        parentEntry.children = [];\n      }\n      currentEntry = {\n        spectra: [],\n        ntuples: {},\n        info: {},\n        meta: {},\n        tmp: {}, // tmp information we need to keep for postprocessing\n      };\n      parentEntry.children.push(currentEntry);\n      parentsStack.push(parentEntry);\n      entriesFlat.push(currentEntry);\n      currentEntry.title = dataValue;\n    } else if (canonicDataLabel === 'DATATYPE') {\n      currentEntry.dataType = dataValue;\n      if (dataValue.match(/(^nd|\\snd\\s)/i)) {\n        currentEntry.twoD = true;\n      }\n    } else if (canonicDataLabel === 'NTUPLES') {\n      if (dataValue.match(/(^nd|\\snd\\s)/i)) {\n        currentEntry.twoD = true;\n      }\n    } else if (canonicDataLabel === 'DATACLASS') {\n      currentEntry.dataClass = dataValue;\n    } else if (canonicDataLabel === 'XUNITS') {\n      spectrum.xUnits = dataValue;\n    } else if (canonicDataLabel === 'YUNITS') {\n      spectrum.yUnits = dataValue;\n    } else if (canonicDataLabel === 'FIRSTX') {\n      spectrum.firstX = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'LASTX') {\n      spectrum.lastX = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'FIRSTY') {\n      spectrum.firstY = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'LASTY') {\n      spectrum.lastY = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'NPOINTS') {\n      spectrum.nbPoints = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'XFACTOR') {\n      spectrum.xFactor = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'YFACTOR') {\n      spectrum.yFactor = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'MAXX') {\n      spectrum.maxX = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'MINX') {\n      spectrum.minX = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'MAXY') {\n      spectrum.maxY = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'MINY') {\n      spectrum.minY = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'DELTAX') {\n      spectrum.deltaX = parseFloat(dataValue);\n    } else if (\n      canonicDataLabel === '.OBSERVEFREQUENCY' ||\n      canonicDataLabel === '$SFO1'\n    ) {\n      if (!spectrum.observeFrequency) {\n        spectrum.observeFrequency = parseFloat(dataValue);\n      }\n    } else if (canonicDataLabel === '.OBSERVENUCLEUS') {\n      if (!spectrum.xType) {\n        currentEntry.xType = dataValue.replace(/[^a-zA-Z0-9]/g, '');\n      }\n    } else if (canonicDataLabel === '$OFFSET') {\n      // OFFSET for Bruker spectra\n      currentEntry.shiftOffsetNum = 0;\n      if (!spectrum.shiftOffsetVal) {\n        spectrum.shiftOffsetVal = parseFloat(dataValue);\n      }\n    } else if (canonicDataLabel === '$REFERENCEPOINT') {\n      // OFFSET for Varian spectra\n      // if we activate this part it does not work for ACD specmanager\n      //         } else if (canonicDataLabel=='.SHIFTREFERENCE') {   // OFFSET FOR Bruker Spectra\n      //                 var parts = dataValue.split(/ *, */);\n      //                 currentEntry.shiftOffsetNum = parseInt(parts[2].trim());\n      //                 spectrum.shiftOffsetVal = parseFloat(parts[3].trim());\n    } else if (canonicDataLabel === 'VARNAME') {\n      currentEntry.ntuples.varname = dataValue.split(ntuplesSeparatorRegExp);\n    } else if (canonicDataLabel === 'SYMBOL') {\n      currentEntry.ntuples.symbol = dataValue.split(ntuplesSeparatorRegExp);\n    } else if (canonicDataLabel === 'VARTYPE') {\n      currentEntry.ntuples.vartype = dataValue.split(ntuplesSeparatorRegExp);\n    } else if (canonicDataLabel === 'VARFORM') {\n      currentEntry.ntuples.varform = dataValue.split(ntuplesSeparatorRegExp);\n    } else if (canonicDataLabel === 'VARDIM') {\n      currentEntry.ntuples.vardim = convertToFloatArray(\n        dataValue.split(ntuplesSeparatorRegExp),\n      );\n    } else if (canonicDataLabel === 'UNITS') {\n      currentEntry.ntuples.units = dataValue.split(ntuplesSeparatorRegExp);\n    } else if (canonicDataLabel === 'FACTOR') {\n      currentEntry.ntuples.factor = convertToFloatArray(\n        dataValue.split(ntuplesSeparatorRegExp),\n      );\n    } else if (canonicDataLabel === 'FIRST') {\n      currentEntry.ntuples.first = convertToFloatArray(\n        dataValue.split(ntuplesSeparatorRegExp),\n      );\n    } else if (canonicDataLabel === 'LAST') {\n      currentEntry.ntuples.last = convertToFloatArray(\n        dataValue.split(ntuplesSeparatorRegExp),\n      );\n    } else if (canonicDataLabel === 'MIN') {\n      currentEntry.ntuples.min = convertToFloatArray(\n        dataValue.split(ntuplesSeparatorRegExp),\n      );\n    } else if (canonicDataLabel === 'MAX') {\n      currentEntry.ntuples.max = convertToFloatArray(\n        dataValue.split(ntuplesSeparatorRegExp),\n      );\n    } else if (canonicDataLabel === '.NUCLEUS') {\n      if (currentEntry.ntuples) {\n        currentEntry.ntuples.nucleus = dataValue.split(ntuplesSeparatorRegExp);\n      }\n    } else if (canonicDataLabel === 'PAGE') {\n      spectrum.page = dataValue.trim();\n      spectrum.pageValue = parseFloat(dataValue.replace(/^.*=/, ''));\n      spectrum.pageSymbol = spectrum.page.replace(/[=].*/, '');\n    } else if (canonicDataLabel === 'RETENTIONTIME') {\n      spectrum.pageValue = parseFloat(dataValue);\n    } else if (isMSField(canonicDataLabel)) {\n      spectrum[convertMSFieldToLabel(canonicDataLabel)] = dataValue;\n    } else if (canonicDataLabel === 'SAMPLEDESCRIPTION') {\n      spectrum.sampleDescription = dataValue;\n    } else if (canonicDataLabel.startsWith('$NUC')) {\n      if (!currentEntry.tmp[canonicDataLabel] && !dataValue.includes('off')) {\n        currentEntry.tmp[canonicDataLabel] = dataValue.replace(/[<>]/g, '');\n      }\n    } else if (canonicDataLabel === 'END') {\n      currentEntry = parentsStack.pop();\n    }\n\n    if (\n      currentEntry &&\n      currentEntry.info &&\n      currentEntry.meta &&\n      canonicDataLabel.match(options.keepRecordsRegExp)\n    ) {\n      let value = dataValue.trim();\n      let target, label;\n      if (dataLabel.startsWith('$')) {\n        label = options.canonicMetadataLabels\n          ? canonicDataLabel.substring(1)\n          : dataLabel.substring(1);\n        target = currentEntry.meta;\n      } else {\n        label = options.canonicDataLabels ? canonicDataLabel : dataLabel;\n        target = currentEntry.info;\n      }\n\n      if (options.dynamicTyping) {\n        value = parseString(value);\n      }\n      if (target[label]) {\n        if (!Array.isArray(target[label])) {\n          target[label] = [target[label]];\n        }\n        target[label].push(value);\n      } else {\n        target[label] = value;\n      }\n    }\n  }\n\n  profiling(result, 'Finished parsing', options);\n\n  postProcessing(entriesFlat, result, options);\n\n  profiling(result, 'Total time', options);\n\n  /*\n  if (result.children && result.children.length>0) {\n    result = { ...result, ...result.children[0] };\n  }\n  */\n  result.entries = tmpResult.children;\n  result.flatten = entriesFlat;\n\n  return result;\n}\n","import { convert } from 'jcampconverter';\r\nimport { Analysis } from '../Analysis';\r\n/**\r\n * Creates a new Analysis from a JCAMP string\r\n * @param {string} jcamp - String containing the JCAMP data\r\n * @param {object} [options={}]\r\n * @param {object} [options.id=Math.random()]\r\n * @param {string} [options.label=options.id] human redeable label\r\n * @param {string} [options.spectrumCallback] a callback to apply on variables when creating spectrum\r\n * @return {Analysis} - New class element with the given data\r\n */\r\nexport function fromJcamp(jcamp, options = {}) {\r\n    let analysis = new Analysis(options);\r\n    addJcamp(analysis, jcamp);\r\n    return analysis;\r\n}\r\nfunction addJcamp(analysis, jcamp) {\r\n    let converted = convert(jcamp, {\r\n        keepRecordsRegExp: /.*/,\r\n    });\r\n    for (let entry of converted.flatten) {\r\n        if (!entry.spectra || !entry.spectra[0])\r\n            continue;\r\n        let currentSpectrum = entry.spectra[0];\r\n        // we ensure variables\r\n        if (!currentSpectrum.variables) {\r\n            const variables = {};\r\n            currentSpectrum.variables = variables;\r\n            variables.x = {\r\n                label: currentSpectrum.xUnits,\r\n                symbol: 'X',\r\n                data: currentSpectrum.data.x || currentSpectrum.data.X,\r\n            };\r\n            variables.y = {\r\n                label: currentSpectrum.yUnits,\r\n                symbol: 'Y',\r\n                data: currentSpectrum.data.y || currentSpectrum.data.Y,\r\n            };\r\n        }\r\n        else {\r\n            for (let key in currentSpectrum.variables) {\r\n                const variable = currentSpectrum.variables[key];\r\n                if (variable.label)\r\n                    continue;\r\n                variable.label = variable.name || variable.symbol || key;\r\n                if (variable.units && !variable.label.includes(variable.units)) {\r\n                    variable.label += ` [${variable.units}]`;\r\n                }\r\n            }\r\n        }\r\n        analysis.pushSpectrum(currentSpectrum.variables, {\r\n            dataType: entry.dataType,\r\n            title: entry.title,\r\n            meta: entry.meta,\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZnJvbUpjYW1wLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2Zyb20vZnJvbUpjYW1wLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUV6QyxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBRXZDOzs7Ozs7OztHQVFHO0FBQ0gsTUFBTSxVQUFVLFNBQVMsQ0FBQyxLQUEyQixFQUFFLE9BQU8sR0FBRyxFQUFFO0lBQ2pFLElBQUksUUFBUSxHQUFHLElBQUksUUFBUSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQ3JDLFFBQVEsQ0FBQyxRQUFRLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFDMUIsT0FBTyxRQUFRLENBQUM7QUFDbEIsQ0FBQztBQUVELFNBQVMsUUFBUSxDQUFDLFFBQWtCLEVBQUUsS0FBMkI7SUFDL0QsSUFBSSxTQUFTLEdBQUcsT0FBTyxDQUFDLEtBQUssRUFBRTtRQUM3QixpQkFBaUIsRUFBRSxJQUFJO0tBQ3hCLENBQUMsQ0FBQztJQUVILEtBQUssSUFBSSxLQUFLLElBQUksU0FBUyxDQUFDLE9BQU8sRUFBRTtRQUNuQyxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO1lBQUUsU0FBUztRQUNsRCxJQUFJLGVBQWUsR0FBRyxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBRXZDLHNCQUFzQjtRQUN0QixJQUFJLENBQUMsZUFBZSxDQUFDLFNBQVMsRUFBRTtZQUM5QixNQUFNLFNBQVMsR0FBcUMsRUFBRSxDQUFDO1lBQ3ZELGVBQWUsQ0FBQyxTQUFTLEdBQUcsU0FBUyxDQUFDO1lBQ3RDLFNBQVMsQ0FBQyxDQUFDLEdBQUc7Z0JBQ1osS0FBSyxFQUFFLGVBQWUsQ0FBQyxNQUFNO2dCQUM3QixNQUFNLEVBQUUsR0FBRztnQkFDWCxJQUFJLEVBQUUsZUFBZSxDQUFDLElBQUksQ0FBQyxDQUFDLElBQUksZUFBZSxDQUFDLElBQUksQ0FBQyxDQUFDO2FBQ3ZELENBQUM7WUFDRixTQUFTLENBQUMsQ0FBQyxHQUFHO2dCQUNaLEtBQUssRUFBRSxlQUFlLENBQUMsTUFBTTtnQkFDN0IsTUFBTSxFQUFFLEdBQUc7Z0JBQ1gsSUFBSSxFQUFFLGVBQWUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxJQUFJLGVBQWUsQ0FBQyxJQUFJLENBQUMsQ0FBQzthQUN2RCxDQUFDO1NBQ0g7YUFBTTtZQUNMLEtBQUssSUFBSSxHQUFHLElBQUksZUFBZSxDQUFDLFNBQVMsRUFBRTtnQkFDekMsTUFBTSxRQUFRLEdBQUcsZUFBZSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsQ0FBQztnQkFDaEQsSUFBSSxRQUFRLENBQUMsS0FBSztvQkFBRSxTQUFTO2dCQUM3QixRQUFRLENBQUMsS0FBSyxHQUFHLFFBQVEsQ0FBQyxJQUFJLElBQUksUUFBUSxDQUFDLE1BQU0sSUFBSSxHQUFHLENBQUM7Z0JBQ3pELElBQUksUUFBUSxDQUFDLEtBQUssSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsRUFBRTtvQkFDOUQsUUFBUSxDQUFDLEtBQUssSUFBSSxLQUFLLFFBQVEsQ0FBQyxLQUFLLEdBQUcsQ0FBQztpQkFDMUM7YUFDRjtTQUNGO1FBRUQsUUFBUSxDQUFDLFlBQVksQ0FBQyxlQUFlLENBQUMsU0FBUyxFQUFFO1lBQy9DLFFBQVEsRUFBRSxLQUFLLENBQUMsUUFBUTtZQUN4QixLQUFLLEVBQUUsS0FBSyxDQUFDLEtBQUs7WUFDbEIsSUFBSSxFQUFFLEtBQUssQ0FBQyxJQUFJO1NBQ2pCLENBQUMsQ0FBQztLQUNKO0FBQ0gsQ0FBQyJ9","/**\n * Ensure that the data is string. If it is an ArrayBuffer it will be converted to string using TextDecoder.\n * @param {string|ArrayBuffer} blob\n * @param {object} [options={}]\n * @param {string} [options.encoding='utf8']\n * @returns {string}\n */\n\nexport function ensureString(blob, options = {}) {\n  const { encoding = 'utf8' } = options;\n  if (ArrayBuffer.isView(blob) || blob instanceof ArrayBuffer) {\n    const decoder = new TextDecoder(encoding);\n    return decoder.decode(blob);\n  }\n  return blob;\n}\n","/**\n * In place modification of the 2 arrays to make X unique and sum the Y if X has the same value\n * @param {object} [points={}] : Object of points contains property x (an array) and y (an array)\n * @return points\n */\n\nexport default function uniqueX(points = {}) {\n  const { x, y } = points;\n  if (x.length < 2) return;\n  if (x.length !== y.length) {\n    throw new Error('The X and Y arrays mush have the same length');\n  }\n\n  let current = x[0];\n  let counter = 0;\n\n  for (let i = 1; i < x.length; i++) {\n    if (current !== x[i]) {\n      counter++;\n      current = x[i];\n      x[counter] = x[i];\n      if (i !== counter) {\n        y[counter] = 0;\n      }\n    }\n    if (i !== counter) {\n      y[counter] += y[i];\n    }\n  }\n\n  x.length = counter + 1;\n  y.length = counter + 1;\n}\n","import { ensureString } from \"ensure-string\";\nimport mlArrayMax from \"ml-array-max\";\nimport uniqueXFunction from \"ml-arrayxy-uniquex\";\nimport { xIsMonotone } from \"ml-spectra-processing\";\n\n/**\n * Parse a text-file and convert it to an array of XY points\n * @param {string} text - csv or tsv strings\n * @param {object} [options={}]\n * @param {boolean} [options.rescale = false] - will set the maximum value to 1\n * @param {boolean} [options.uniqueX = false] - Make the X values unique (works only with 'xxyy' format). If the X value is repeated the sum of Y is done.\n * @param {number} [options.xColumn = 0] - A number that specifies the x column\n * @param {number} [options.yColumn = 1] - A number that specifies the y column\n * @param {boolean} [options.bestGuess=false] Will try to guess which columns are the best\n * @param {number} [options.numberColumns=Number.MAX_SAFE_INTEGER] If the file has 10 columns and you specify here 2 it will reflow the file\n * @param {number} [options.maxNumberColumns = (Math.max(xColumn, yColumn)+1)] - A number that specifies the maximum number of y columns\n * @param {number} [options.minNumberColumns = (Math.min(xColumn, yColumn)+1)] - A number that specifies the minimum number of y columns\n * @param {boolean} [options.keepInfo = false] - shoud we keep the non numeric lines. In this case the system will return an object {data, info}\n * @return {object{x:<Array<number>>,y:<Array<number>>}\n */\nexport function parseXY(text, options = {}) {\n  let {\n    rescale = false,\n    uniqueX = false,\n    xColumn = 0,\n    yColumn = 1,\n    keepInfo = false,\n    bestGuess = false,\n    numberColumns = Number.MAX_SAFE_INTEGER,\n    maxNumberColumns = Number.MAX_SAFE_INTEGER,\n    minNumberColumns = 2,\n  } = options;\n\n  text = ensureString(text);\n\n  maxNumberColumns = Math.max(maxNumberColumns, xColumn + 1, yColumn + 1);\n  minNumberColumns = Math.max(xColumn + 1, yColumn + 1, minNumberColumns);\n\n  let lines = text.split(/[\\r\\n]+/);\n\n  let matrix = [];\n  let info = [];\n  let position = 0;\n  for (let l = 0; l < lines.length; l++) {\n    let line = lines[l].trim();\n    // we will consider only lines that contains only numbers\n    if (line.match(/[0-9]+/) && line.match(/^[0-9eE,;. \\t+-]+$/)) {\n      let fields = line.split(/,[; \\t]+|[; \\t]+/);\n      if (fields.length === 1) {\n        fields = line.split(/[,; \\t]+/);\n      }\n      if (\n        fields &&\n        fields.length >= minNumberColumns && // we filter lines that have not enough or too many columns\n        fields.length <= maxNumberColumns\n      ) {\n        matrix.push(fields.map((value) => parseFloat(value.replace(\",\", \".\"))));\n        position++;\n      }\n    } else if (line) {\n      info.push({ position, value: line });\n    }\n  }\n\n  if (bestGuess) {\n    if (\n      matrix[0] &&\n      matrix[0].length === 3 &&\n      options.xColumn === undefined &&\n      options.yColumn === undefined\n    ) {\n      // is the first column a seuqnetial number ?\n      let skipFirstColumn = true;\n      for (let i = 0; i < matrix.length - 1; i++) {\n        if (Math.abs(matrix[i][0] - matrix[i + 1][0]) !== 1) {\n          skipFirstColumn = false;\n        }\n      }\n      if (skipFirstColumn) {\n        xColumn = 1;\n        yColumn = 2;\n      }\n    }\n    if (matrix[0] && matrix[0].length > 3) {\n      let xs = [];\n      for (let row of matrix) {\n        for (let i = xColumn; i < row.length; i += 2) {\n          xs.push(row[i]);\n        }\n      }\n      if (xIsMonotone(xs)) {\n        numberColumns = 2;\n      }\n    }\n  }\n\n  if (numberColumns) {\n    const newMatrix = [];\n    for (const row of matrix) {\n      for (let i = 0; i < row.length; i += numberColumns) {\n        newMatrix.push(row.slice(i, i + numberColumns));\n      }\n    }\n    matrix = newMatrix;\n  }\n  const result = {\n    x: matrix.map((row) => row[xColumn]),\n    y: matrix.map((row) => row[yColumn]),\n  };\n\n  if (uniqueX) {\n    uniqueXFunction(result);\n  }\n\n  if (rescale) {\n    let maxY = mlArrayMax(result.y);\n    for (let i = 0; i < result.y.length; i++) {\n      result.y[i] /= maxY;\n    }\n  }\n\n  if (!keepInfo) return result;\n\n  return {\n    info,\n    data: result,\n  };\n}\n","// @ts-nocheck\r\nimport { parseXY } from 'xy-parser';\r\nimport { Analysis } from '../Analysis';\r\n/**\r\n * Convert strings into JCAMP and add extra information\r\n * @param {string} data - values to add to the file, usually a csv or tsv values\r\n * @param {object} [options={}]\r\n * @param {string} [options.info={}] - metadata of the file\r\n * @param {string} [options.info.title = ''] - title of the file\r\n * @param {string} [options.info.dataType = ''] - type of data\r\n * @param {string} [options.info.xUnits = ''] - units for the x axis\r\n * @param {string} [options.info.yUnits = ''] - units for the y axis\r\n * @param {string} [options.info.xLabel = ''] - label for the x axis\r\n * @param {string} [options.info.yLabel = ''] - label for the y axis\r\n * @param {object} [options.meta = {}] - comments to add to the file\r\n * @param {object} [options.parser = {}] - 'xy-parser' options. arrayType = 'xyxy' is enforced\r\n * @return {string} JCAMP of the input\r\n */\r\nexport function fromText(data, options = {}) {\r\n    let analysis = new Analysis(options);\r\n    const { info = {}, parser = {} } = options;\r\n    parser.keepInfo = true;\r\n    let parsed = parseXY(data, parser);\r\n    const variables = {\r\n        x: {\r\n            data: parsed.data.x,\r\n            units: info.xUnits,\r\n            label: info.xLabel,\r\n        },\r\n        y: {\r\n            data: parsed.data.y,\r\n            units: info.yUnits,\r\n            label: info.yLabel,\r\n        },\r\n    };\r\n    analysis.pushSpectrum(variables, options);\r\n    return analysis;\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZnJvbVRleHQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvZnJvbS9mcm9tVGV4dC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxjQUFjO0FBRWQsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLFdBQVcsQ0FBQztBQUVwQyxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBRXZDOzs7Ozs7Ozs7Ozs7OztHQWNHO0FBRUgsTUFBTSxVQUFVLFFBQVEsQ0FBQyxJQUEwQixFQUFFLE9BQU8sR0FBRyxFQUFFO0lBQy9ELElBQUksUUFBUSxHQUFHLElBQUksUUFBUSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBRXJDLE1BQU0sRUFBRSxJQUFJLEdBQUcsRUFBRSxFQUFFLE1BQU0sR0FBRyxFQUFFLEVBQUUsR0FBRyxPQUFPLENBQUM7SUFFM0MsTUFBTSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUM7SUFDdkIsSUFBSSxNQUFNLEdBQUcsT0FBTyxDQUFDLElBQUksRUFBRSxNQUFNLENBQUMsQ0FBQztJQUNuQyxNQUFNLFNBQVMsR0FBRztRQUNoQixDQUFDLEVBQUU7WUFDRCxJQUFJLEVBQUUsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDO1lBQ25CLEtBQUssRUFBRSxJQUFJLENBQUMsTUFBTTtZQUNsQixLQUFLLEVBQUUsSUFBSSxDQUFDLE1BQU07U0FDbkI7UUFDRCxDQUFDLEVBQUU7WUFDRCxJQUFJLEVBQUUsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDO1lBQ25CLEtBQUssRUFBRSxJQUFJLENBQUMsTUFBTTtZQUNsQixLQUFLLEVBQUUsSUFBSSxDQUFDLE1BQU07U0FDbkI7S0FDRixDQUFDO0lBRUYsUUFBUSxDQUFDLFlBQVksQ0FBQyxTQUFTLEVBQUUsT0FBTyxDQUFDLENBQUM7SUFFMUMsT0FBTyxRQUFRLENBQUM7QUFDbEIsQ0FBQyJ9","import maxFct from 'ml-array-max';\nimport minFct from 'ml-array-min';\n\n/**\n * Parse from a xyxy data array\n * @param {Array<Array<number>>} variables\n * @param {object} [meta] - same metadata object format that the fromText\n * @return {string} JCAMP of the input\n */\nexport default function creatorNtuples(variables, options) {\n  const { meta = {}, info = {} } = options;\n\n  const { title = '', owner = '', origin = '', dataType = '' } = info;\n\n  const symbol = [];\n  const varName = [];\n  const varType = [];\n  const varDim = [];\n  const units = [];\n  const first = [];\n  const last = [];\n  const min = [];\n  const max = [];\n  const factor = [];\n\n  const keys = Object.keys(variables);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    let variable = variables[key];\n\n    let name = variable.label && variable.label.replace(/ *\\[.*/, '');\n    let unit = variable.label && variable.label.replace(/.*\\[(.*)\\].*/, '$1');\n\n    symbol.push(variable.symbol || key);\n    varName.push(variable.name || name || key);\n    varDim.push(variables[key].data.length);\n\n    if (variable.isDependent !== undefined) {\n      varType.push(variable.isDependent ? 'DEPENDENT' : 'INDEPENDENT');\n    } else {\n      varType.push(\n        variable.type\n          ? variable.type.toUpperCase()\n          : i === 0\n          ? 'INDEPENDENT'\n          : 'DEPENDENT',\n      );\n    }\n\n    units.push(variable.units || unit || '');\n    first.push(variables[key][0]);\n    last.push(variables[key][variables[key].length - 1]);\n    min.push(minFct(variables[key].data));\n    max.push(maxFct(variables[key].data));\n    factor.push(1);\n  }\n\n  let header = `##TITLE=${title}\n##JCAMP-DX=6.00\n##DATA TYPE=${dataType}\n##ORIGIN=${origin}\n##OWNER=${owner}\\n`;\n\n  for (const key in meta) {\n    header +=\n      typeof meta[key] === 'object'\n        ? `##$${key}=${JSON.stringify(meta[key])}\\n`\n        : `##$${key}=${meta[key]}\\n`;\n  }\n\n  header += `##NTUPLES= ${dataType}\n##VAR_NAME=  ${varName.join()}\n##SYMBOL=    ${symbol.join()}\n##VAR_TYPE=  ${varType.join()}\n##VAR_DIM=   ${varDim.join()}\n##UNITS=     ${units.join()}\n##PAGE= N=1\\n`;\n\n  header += `##DATA TABLE= (${symbol.join('')}..${symbol.join('')}), PEAKS\\n`;\n\n  for (let i = 0; i < variables[keys[0]].data.length; i++) {\n    let point = [];\n    for (let key of keys) {\n      point.push(variables[key].data[i]);\n    }\n    header += `${point.join('\\t')}\\n`;\n  }\n\n  header += '##END';\n  return header;\n}\n","export function getNumber(number, factor) {\n  if (factor !== 1) number /= factor;\n  const rounded = Math.round(number);\n  if (rounded !== number && Math.abs(rounded - number) <= Number.EPSILON) {\n    return rounded;\n  }\n  return number;\n}\n","import { getNumber } from './getNumber.js';\n\nexport function peakTableCreator(data, options = {}) {\n  const { xFactor = 1, yFactor = 1 } = options;\n  let firstX = Number.POSITIVE_INFINITY;\n  let lastX = Number.NEGATIVE_INFINITY;\n  let firstY = Number.POSITIVE_INFINITY;\n  let lastY = Number.NEGATIVE_INFINITY;\n\n  let lines = [];\n\n  for (let i = 0; i < data.x.length; i++) {\n    let x = data.x[i];\n    let y = data.y[i];\n    if (firstX > x) {\n      firstX = x;\n    }\n    if (lastX < x) {\n      lastX = x;\n    }\n    if (firstY > y) {\n      firstY = y;\n    }\n    if (lastY < y) {\n      lastY = y;\n    }\n  }\n  lines.push(`##FIRSTX=${firstX}`);\n  lines.push(`##LASTX=${lastX}`);\n  lines.push(`##FIRSTY=${firstY}`);\n  lines.push(`##LASTY=${lastY}`);\n  lines.push(`##XFACTOR=${xFactor}`);\n  lines.push(`##YFACTOR=${yFactor}`);\n  lines.push('##PEAK TABLE=(XY..XY)');\n\n  for (let i = 0; i < data.x.length; i++) {\n    lines.push(\n      `${getNumber(data.x[i], xFactor)} ${getNumber(data.y[i], yFactor)}`,\n    );\n  }\n  return lines;\n}\n","import { getNumber } from './getNumber.js';\n\nexport function xyDataCreator(data, options = {}) {\n  const { xFactor = 1, yFactor = 1 } = options;\n  let firstX = data.x[0];\n  let lastX = data.x[data.x.length - 1];\n  let firstY = data.y[0];\n  let lastY = data.y[data.y.length - 1];\n  let nbPoints = data.x.length;\n  let deltaX = (lastX - firstX) / (nbPoints - 1);\n  let lines = [];\n\n  lines.push(`##FIRSTX=${firstX}`);\n  lines.push(`##LASTX=${lastX}`);\n  lines.push(`##FIRSTY=${firstY}`);\n  lines.push(`##LASTY=${lastY}`);\n  lines.push(`##DELTAX=${deltaX}`);\n  lines.push(`##XFACTOR=${xFactor}`);\n  lines.push(`##YFACTOR=${yFactor}`);\n  lines.push(`##DELTAX=${xFactor}`);\n  lines.push('##XYDATA=(X++(Y..Y))');\n\n  let line = data.x[0];\n  for (let i = 0; i < data.x.length; i++) {\n    line += ` ${getNumber(data.y[i], yFactor)}`;\n    if (line.length > 70) {\n      lines.push(line);\n      if (i < data.x.length - 1) {\n        line = getNumber(data.x[0] + i * deltaX, xFactor);\n      } else {\n        line = '';\n      }\n    }\n  }\n  if (line) lines.push(line);\n  return lines;\n}\n","import { peakTableCreator } from './utils/peakTableCreator';\nimport { xyDataCreator } from './utils/xyDataCreator';\n/**\n * Create a jcamp\n * @param {object} data object of array\n * @param {object} [options={}] metadata object\n * @param {string} [options.info={}] metadata of the file\n * @param {string} [options.info.title=''] title of the file\n * @param {string} [options.info.owner=''] owner of the file\n * @param {string} [options.info.origin=''] origin of the file\n * @param {string} [options.info.dataType=''] type of data\n * @param {string} [options.info.xUnits=''] units for the x axis for variables===undefined\n * @param {string} [options.info.yUnits=''] units for the y axis for variables===undefined\n * @param {number} [options.info.xFactor=1] factor to multiply X values\n * @param {number} [options.info.yFactor=1] factor to multiply Y values\n * @param {object} [options.meta={}] comments to add to the file\n * @param {boolean} [options.xydata=false] Use XYDATA format. Will use first / last X and equidistant Xs values if true\n * @return {string} JCAMP of the input\n */\nexport function fromJSON(data, options = {}) {\n  const { meta = {}, info = {}, xydata = false } = options;\n\n  const {\n    title = '',\n    owner = '',\n    origin = '',\n    dataType = '',\n    xUnits = '',\n    yUnits = '',\n    xFactor = 1,\n    yFactor = 1,\n  } = info;\n\n  data = { x: data.x, y: data.y };\n\n  let header = `##TITLE=${title}\n##JCAMP-DX=4.24\n##DATA TYPE=${dataType}\n##ORIGIN=${origin}\n##OWNER=${owner}\n##XUNITS=${xUnits}\n##YUNITS=${yUnits}\\n`;\n\n  for (const key in meta) {\n    header +=\n      key.toLowerCase() === 'cheminfo'\n        ? `##$${key}=${JSON.stringify(meta[key])}\\n`\n        : `##$${key}=${meta[key]}\\n`;\n  }\n\n  // we leave the header and utf8 fonts ${header.replace(/[^\\t\\r\\n\\x20-\\x7F]/g, '')\n\n  return `${header}##NPOINTS=${data.x.length}\n${(xydata\n  ? xyDataCreator(data, { xFactor, yFactor })\n  : peakTableCreator(data, { xFactor, yFactor })\n).join('\\n')}\n##END`;\n}\n","import creatorNtuples from './creatorNtuples';\nimport { fromJSON } from './fromJSON';\n\n/**\n * Create a jcamp from variables\n * @param {Array<Variable} [variables={}] - object of variables\n * @param {string} [options.info={}] - metadata of the file\n * @param {string} [options.info.title = ''] - title of the file\n * @param {string} [options.info.owner = ''] - owner of the file\n * @param {string} [options.info.origin = ''] - origin of the file\n * @param {string} [options.info.dataType = ''] - type of data\n * @param {object} [options.meta = {}] - comments to add to the file\n * @param {object} [options.forceNtuples = false] - force the ntuples format even if there is only x and y variables\n */\nexport function fromVariables(variables = {}, options = {}) {\n  const { info, meta, forceNtuples } = options;\n\n  let jcampOptions = {\n    info,\n    meta,\n  };\n\n  let keys = Object.keys(variables).map((key) => key.toLowerCase());\n  if (\n    keys.length === 2 &&\n    keys.includes('x') &&\n    keys.includes('y') &&\n    !forceNtuples\n  ) {\n    let x = variables.x;\n    let xLabel = x.label || x.name || 'x';\n\n    jcampOptions.info.xUnits = xLabel.includes(variables.x.units)\n      ? xLabel\n      : `${xLabel} [${variables.x.units}]`;\n\n    let y = variables.y;\n    let yLabel = y.label || y.name || 'y';\n\n    jcampOptions.info.yUnits = yLabel.includes(variables.y.units)\n      ? yLabel\n      : `${yLabel} [${variables.y.units}]`;\n    return fromJSON({ x: variables.x.data, y: variables.y.data }, jcampOptions);\n  } else {\n    return creatorNtuples(variables, options);\n  }\n}\n","import { fromVariables } from 'convert-to-jcamp';\r\nexport function toJcamps(analysis, options = {}) {\r\n    let jcamps = [];\r\n    for (let spectrum of analysis.spectra) {\r\n        jcamps.push(getJcamp(spectrum, options));\r\n    }\r\n    return jcamps;\r\n}\r\nfunction getJcamp(spectrum, options) {\r\n    const { info = {}, meta = {} } = options;\r\n    let jcampOptions = {\r\n        options: {},\r\n        info: {\r\n            title: spectrum.title,\r\n            dataType: spectrum.dataType,\r\n            ...info,\r\n        },\r\n        meta: { ...spectrum.meta, ...meta },\r\n    };\r\n    return fromVariables(spectrum.variables, jcampOptions);\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9KY2FtcHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvdG8vdG9KY2FtcHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBUWpELE1BQU0sVUFBVSxRQUFRLENBQUMsUUFBa0IsRUFBRSxVQUEyQixFQUFFO0lBQ3hFLElBQUksTUFBTSxHQUFHLEVBQUUsQ0FBQztJQUNoQixLQUFLLElBQUksUUFBUSxJQUFJLFFBQVEsQ0FBQyxPQUFPLEVBQUU7UUFDckMsTUFBTSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsUUFBUSxFQUFFLE9BQU8sQ0FBQyxDQUFDLENBQUM7S0FDMUM7SUFDRCxPQUFPLE1BQU0sQ0FBQztBQUNoQixDQUFDO0FBRUQsU0FBUyxRQUFRLENBQUMsUUFBa0IsRUFBRSxPQUF3QjtJQUM1RCxNQUFNLEVBQUUsSUFBSSxHQUFHLEVBQUUsRUFBRSxJQUFJLEdBQUcsRUFBRSxFQUFFLEdBQUcsT0FBTyxDQUFDO0lBRXpDLElBQUksWUFBWSxHQUFHO1FBQ2pCLE9BQU8sRUFBRSxFQUFFO1FBQ1gsSUFBSSxFQUFFO1lBQ0osS0FBSyxFQUFFLFFBQVEsQ0FBQyxLQUFLO1lBQ3JCLFFBQVEsRUFBRSxRQUFRLENBQUMsUUFBUTtZQUMzQixHQUFHLElBQUk7U0FDUjtRQUNELElBQUksRUFBRSxFQUFFLEdBQUcsUUFBUSxDQUFDLElBQUksRUFBRSxHQUFHLElBQUksRUFBRTtLQUNwQyxDQUFDO0lBRUYsT0FBTyxhQUFhLENBQUMsUUFBUSxDQUFDLFNBQVMsRUFBRSxZQUFZLENBQUMsQ0FBQztBQUN6RCxDQUFDIn0=","import { toJcamps } from './toJcamps';\r\nexport function toJcamp(analysis, options = {}) {\r\n    return toJcamps(analysis, options).join('\\n');\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9KY2FtcC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy90by90b0pjYW1wLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFNdEMsTUFBTSxVQUFVLE9BQU8sQ0FBQyxRQUFrQixFQUFFLFVBQTJCLEVBQUU7SUFDdkUsT0FBTyxRQUFRLENBQUMsUUFBUSxFQUFFLE9BQU8sQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUNoRCxDQUFDIn0=","export function toText(analysis, options = {}) {\r\n    // Export all the data to Csv\r\n    if (!options.selector) {\r\n        return exportText(analysis.spectra, options);\r\n    }\r\n    // Export selected variables\r\n    const spectra = analysis.getXYSpectrum(options.selector);\r\n    return exportText(spectra ? [spectra] : [], options);\r\n}\r\nfunction exportText(spectrums, options) {\r\n    const { endOfLine = '\\n', fieldSeparator = ',' } = options;\r\n    let result = new Array(spectrums.length);\r\n    for (let index = 0; index < spectrums.length; index++) {\r\n        const variables = Object.values(spectrums[index].variables);\r\n        const labels = variables.map((v) => v.label);\r\n        const maxNumberData = Math.max(...variables.map((v) => v.data.length));\r\n        let lines = [labels.join(fieldSeparator)];\r\n        for (let lineIndex = 0; lineIndex < maxNumberData; lineIndex++) {\r\n            lines.push(variables\r\n                .map(({ data }) => data[lineIndex] === undefined ? '' : data[lineIndex])\r\n                .join(fieldSeparator));\r\n        }\r\n        result[index] = lines.join(endOfLine);\r\n    }\r\n    return result;\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9UZXh0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3RvL3RvVGV4dC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFXQSxNQUFNLFVBQVUsTUFBTSxDQUFDLFFBQWtCLEVBQUUsVUFBeUIsRUFBRTtJQUNwRSw2QkFBNkI7SUFDN0IsSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLEVBQUU7UUFDckIsT0FBTyxVQUFVLENBQUMsUUFBUSxDQUFDLE9BQU8sRUFBRSxPQUFPLENBQUMsQ0FBQztLQUM5QztJQUVELDRCQUE0QjtJQUM1QixNQUFNLE9BQU8sR0FBRyxRQUFRLENBQUMsYUFBYSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUN6RCxPQUFPLFVBQVUsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxPQUFPLENBQUMsQ0FBQztBQUN2RCxDQUFDO0FBRUQsU0FBUyxVQUFVLENBQUMsU0FBcUIsRUFBRSxPQUFzQjtJQUMvRCxNQUFNLEVBQUUsU0FBUyxHQUFHLElBQUksRUFBRSxjQUFjLEdBQUcsR0FBRyxFQUFFLEdBQUcsT0FBTyxDQUFDO0lBQzNELElBQUksTUFBTSxHQUFhLElBQUksS0FBSyxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUNuRCxLQUFLLElBQUksS0FBSyxHQUFHLENBQUMsRUFBRSxLQUFLLEdBQUcsU0FBUyxDQUFDLE1BQU0sRUFBRSxLQUFLLEVBQUUsRUFBRTtRQUNyRCxNQUFNLFNBQVMsR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQztRQUU1RCxNQUFNLE1BQU0sR0FBRyxTQUFTLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDN0MsTUFBTSxhQUFhLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxHQUFHLFNBQVMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztRQUV2RSxJQUFJLEtBQUssR0FBRyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDLENBQUMsQ0FBQztRQUMxQyxLQUFLLElBQUksU0FBUyxHQUFHLENBQUMsRUFBRSxTQUFTLEdBQUcsYUFBYSxFQUFFLFNBQVMsRUFBRSxFQUFFO1lBQzlELEtBQUssQ0FBQyxJQUFJLENBQ1IsU0FBUztpQkFDTixHQUFHLENBQUMsQ0FBQyxFQUFFLElBQUksRUFBRSxFQUFFLEVBQUUsQ0FDaEIsSUFBSSxDQUFDLFNBQVMsQ0FBQyxLQUFLLFNBQVMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQ3JEO2lCQUNBLElBQUksQ0FBQyxjQUFjLENBQUMsQ0FDeEIsQ0FBQztTQUNIO1FBRUQsTUFBTSxDQUFDLEtBQUssQ0FBQyxHQUFHLEtBQUssQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7S0FDdkM7SUFDRCxPQUFPLE1BQU0sQ0FBQztBQUNoQixDQUFDIn0=","import max from 'ml-array-max';\r\nimport { optimize as optimizePeak } from 'ml-spectra-fitting';\r\nimport { xFindClosestIndex } from 'ml-spectra-processing';\r\n/** Based on a x value we will return a peak\r\n * if you set optimize=True the returned positions will be\r\n * the closest actual datapoints to the fitted peak location.\r\n * the x/y of the fitted peak will be in xOptimized and yOptimized\r\n */\r\nexport function peakPicking(spectrum, \r\n/** value to search (on x axis) */\r\ntarget, options = {}) {\r\n    var _a, _b, _c;\r\n    const { xVariable = 'x', yVariable = 'y', optimize = false, expectedWidth = 1, max: isMax = true, shapeOptions = {}, } = options;\r\n    const x = (_a = spectrum.variables[xVariable]) === null || _a === void 0 ? void 0 : _a.data;\r\n    let y;\r\n    if (!isMax) {\r\n        y = (_b = spectrum.variables[yVariable]) === null || _b === void 0 ? void 0 : _b.data.slice(); // do deep copy as we maybe need to flip sign\r\n    }\r\n    else {\r\n        y = (_c = spectrum.variables[yVariable]) === null || _c === void 0 ? void 0 : _c.data;\r\n    }\r\n    if (!x || !y)\r\n        return;\r\n    let targetIndex;\r\n    targetIndex = xFindClosestIndex(x, target);\r\n    let optimizedPeak;\r\n    let optimizedIndex;\r\n    const result = {};\r\n    if (optimize) {\r\n        if (isMax === false) {\r\n            let maximumY = max(y);\r\n            for (let i = 0; i < y.length; i++) {\r\n                y[i] *= -1;\r\n                y[i] += maximumY; // This makes it somewhat more robust\r\n            }\r\n        }\r\n        optimizedPeak = optimizePeak({ x, y }, [{ x: x[targetIndex], y: y[targetIndex], width: expectedWidth }], shapeOptions);\r\n        optimizedIndex = xFindClosestIndex(x, optimizedPeak.peaks[0].x);\r\n        for (let [key, variable] of Object.entries(spectrum.variables)) {\r\n            result[key] = variable.data[optimizedIndex];\r\n        }\r\n        result.optimized = optimizedPeak.peaks[0];\r\n    }\r\n    else {\r\n        for (let [key, variable] of Object.entries(spectrum.variables)) {\r\n            result[key] = variable.data[targetIndex];\r\n        }\r\n    }\r\n    return result;\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGVha1BpY2tpbmcuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvdXRpbC9wZWFrUGlja2luZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEdBQUcsTUFBTSxjQUFjLENBQUM7QUFDL0IsT0FBTyxFQUFFLFFBQVEsSUFBSSxZQUFZLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUM5RCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUkxRDs7OztHQUlHO0FBQ0gsTUFBTSxVQUFVLFdBQVcsQ0FDekIsUUFBa0I7QUFDbEIsa0NBQWtDO0FBQ2xDLE1BQWMsRUFDZCxVQUE4QixFQUFFOztJQUVoQyxNQUFNLEVBQ0osU0FBUyxHQUFHLEdBQUcsRUFDZixTQUFTLEdBQUcsR0FBRyxFQUNmLFFBQVEsR0FBRyxLQUFLLEVBQ2hCLGFBQWEsR0FBRyxDQUFDLEVBQ2pCLEdBQUcsRUFBRSxLQUFLLEdBQUcsSUFBSSxFQUNqQixZQUFZLEdBQUcsRUFBRSxHQUNsQixHQUFHLE9BQU8sQ0FBQztJQUVaLE1BQU0sQ0FBQyxHQUFHLE1BQUEsUUFBUSxDQUFDLFNBQVMsQ0FBQyxTQUFTLENBQUMsMENBQUUsSUFBSSxDQUFDO0lBQzlDLElBQUksQ0FBQyxDQUFDO0lBQ04sSUFBSSxDQUFDLEtBQUssRUFBRTtRQUNWLENBQUMsR0FBRyxNQUFBLFFBQVEsQ0FBQyxTQUFTLENBQUMsU0FBUyxDQUFDLDBDQUFFLElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQyxDQUFDLDZDQUE2QztLQUMvRjtTQUFNO1FBQ0wsQ0FBQyxHQUFHLE1BQUEsUUFBUSxDQUFDLFNBQVMsQ0FBQyxTQUFTLENBQUMsMENBQUUsSUFBSSxDQUFDO0tBQ3pDO0lBRUQsSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUM7UUFBRSxPQUFPO0lBQ3JCLElBQUksV0FBVyxDQUFDO0lBQ2hCLFdBQVcsR0FBRyxpQkFBaUIsQ0FBQyxDQUFDLEVBQUUsTUFBTSxDQUFDLENBQUM7SUFDM0MsSUFBSSxhQUFhLENBQUM7SUFDbEIsSUFBSSxjQUFjLENBQUM7SUFDbkIsTUFBTSxNQUFNLEdBQTJCLEVBQUUsQ0FBQztJQUMxQyxJQUFJLFFBQVEsRUFBRTtRQUNaLElBQUksS0FBSyxLQUFLLEtBQUssRUFBRTtZQUNuQixJQUFJLFFBQVEsR0FBRyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDdEIsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUU7Z0JBQ2pDLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztnQkFDWCxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksUUFBUSxDQUFDLENBQUMscUNBQXFDO2FBQ3hEO1NBQ0Y7UUFFRCxhQUFhLEdBQUcsWUFBWSxDQUMxQixFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFDUixDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxXQUFXLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxFQUFFLEtBQUssRUFBRSxhQUFhLEVBQUUsQ0FBQyxFQUNoRSxZQUFZLENBQ2IsQ0FBQztRQUVGLGNBQWMsR0FBRyxpQkFBaUIsQ0FBQyxDQUFDLEVBQUUsYUFBYSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUVoRSxLQUFLLElBQUksQ0FBQyxHQUFHLEVBQUUsUUFBUSxDQUFDLElBQUksTUFBTSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLEVBQUU7WUFDOUQsTUFBTSxDQUFDLEdBQUcsQ0FBQyxHQUFHLFFBQVEsQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDLENBQUM7U0FDN0M7UUFDRCxNQUFNLENBQUMsU0FBUyxHQUFHLGFBQWEsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7S0FDM0M7U0FBTTtRQUNMLEtBQUssSUFBSSxDQUFDLEdBQUcsRUFBRSxRQUFRLENBQUMsSUFBSSxNQUFNLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUMsRUFBRTtZQUM5RCxNQUFNLENBQUMsR0FBRyxDQUFDLEdBQUcsUUFBUSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztTQUMxQztLQUNGO0lBRUQsT0FBTyxNQUFNLENBQUM7QUFDaEIsQ0FBQyJ9","import { gsd } from 'ml-gsd';\r\nimport { xyMaxClosestYPoint, xyMinClosestYPoint } from 'ml-spectra-processing';\r\nimport { getNormalizedSpectrum } from './getNormalizedSpectrum';\r\n/** Based on a x value we will return a peak*/\r\nexport function autoPeakPicking(spectrum, options = {}) {\r\n    var _a, _b;\r\n    const { xVariable = 'x', yVariable = 'y', normalizationOptions, minPeakWidth, } = options;\r\n    let x = (_a = spectrum.variables[xVariable]) === null || _a === void 0 ? void 0 : _a.data;\r\n    let y = (_b = spectrum.variables[yVariable]) === null || _b === void 0 ? void 0 : _b.data;\r\n    if (!x || !y)\r\n        return [];\r\n    if (normalizationOptions) {\r\n        const tempSpectrum = {\r\n            variables: {\r\n                x: { data: x, label: '' },\r\n                y: { data: y, label: '' },\r\n            },\r\n        };\r\n        const normalizedSpectrum = getNormalizedSpectrum(tempSpectrum, normalizationOptions);\r\n        x = normalizedSpectrum.variables.x.data;\r\n        y = normalizedSpectrum.variables.y.data;\r\n    }\r\n    if (!x || !y)\r\n        return;\r\n    let { from, to } = options;\r\n    let peaks = gsd({ x, y }, options);\r\n    if (normalizationOptions) {\r\n        // we need to recalculate the real count\r\n        const xyClosestYPoint = options.maxCriteria === undefined || options.maxCriteria\r\n            ? xyMaxClosestYPoint\r\n            : xyMinClosestYPoint;\r\n        for (let peak of peaks) {\r\n            const closest = xyClosestYPoint({ x: spectrum.variables.x.data, y: spectrum.variables.y.data }, { target: peak.x });\r\n            peak.x = closest.x;\r\n            peak.y = closest.y;\r\n        }\r\n    }\r\n    if (from !== undefined) {\r\n        peaks = peaks.filter((peak) => peak.x >= from);\r\n    }\r\n    if (to !== undefined) {\r\n        peaks = peaks.filter((peak) => peak.x <= to);\r\n    }\r\n    if (minPeakWidth) {\r\n        peaks = peaks.filter((peak) => peak.width >= minPeakWidth);\r\n    }\r\n    return peaks.map((peak) => {\r\n        const result = {};\r\n        for (const [key, variable] of Object.entries(spectrum.variables)) {\r\n            result[key] = variable.data[peak.index];\r\n        }\r\n        result.width = peak.width;\r\n        return result;\r\n    });\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXV0b1BlYWtQaWNraW5nLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3V0aWwvYXV0b1BlYWtQaWNraW5nLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBRSxHQUFHLEVBQUUsTUFBTSxRQUFRLENBQUM7QUFDN0IsT0FBTyxFQUFFLGtCQUFrQixFQUFFLGtCQUFrQixFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFJL0UsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFFaEUsOENBQThDO0FBQzlDLE1BQU0sVUFBVSxlQUFlLENBQzdCLFFBQWtCLEVBQ2xCLFVBQWtDLEVBQUU7O0lBRXBDLE1BQU0sRUFDSixTQUFTLEdBQUcsR0FBRyxFQUNmLFNBQVMsR0FBRyxHQUFHLEVBQ2Ysb0JBQW9CLEVBQ3BCLFlBQVksR0FDYixHQUFHLE9BQU8sQ0FBQztJQUVaLElBQUksQ0FBQyxHQUFHLE1BQUEsUUFBUSxDQUFDLFNBQVMsQ0FBQyxTQUFTLENBQUMsMENBQUUsSUFBSSxDQUFDO0lBQzVDLElBQUksQ0FBQyxHQUFHLE1BQUEsUUFBUSxDQUFDLFNBQVMsQ0FBQyxTQUFTLENBQUMsMENBQUUsSUFBSSxDQUFDO0lBRTVDLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQUUsT0FBTyxFQUFFLENBQUM7SUFFeEIsSUFBSSxvQkFBb0IsRUFBRTtRQUN4QixNQUFNLFlBQVksR0FBYTtZQUM3QixTQUFTLEVBQUU7Z0JBQ1QsQ0FBQyxFQUFFLEVBQUUsSUFBSSxFQUFFLENBQUMsRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFO2dCQUN6QixDQUFDLEVBQUUsRUFBRSxJQUFJLEVBQUUsQ0FBQyxFQUFFLEtBQUssRUFBRSxFQUFFLEVBQUU7YUFDMUI7U0FDRixDQUFDO1FBQ0YsTUFBTSxrQkFBa0IsR0FBRyxxQkFBcUIsQ0FDOUMsWUFBWSxFQUNaLG9CQUFvQixDQUNyQixDQUFDO1FBQ0YsQ0FBQyxH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","function getData(x, y) {\r\n    let data = new Array(x.length);\r\n    for (let i = 0; i < x.length; i++) {\r\n        data[i] = { x: x[i], y: y[i] };\r\n    }\r\n    return data;\r\n}\r\n/**\r\n * Generate a jsgraph chart format from an array of Analysis\r\n */\r\nexport function getReactPlotJSON(analyses, query, options = {}) {\r\n    const { enforceGrowing = false, xAxis: xAxisOptions = {}, yAxis: yAxisOptions = { labelSpace: 40 }, content: seriesOptions = { displayMarker: true }, dimensions = { width: 550, height: 500 }, ...otherOptions } = options;\r\n    let content = [];\r\n    let meta = [];\r\n    let xAxis = null;\r\n    let yAxis = null;\r\n    for (const analysis of analyses) {\r\n        let spectra = enforceGrowing\r\n            ? analysis.getNormalizedSpectrum({\r\n                selector: query,\r\n                normalization: {\r\n                    filters: [{ name: 'ensureGrowing' }],\r\n                    keepYUnits: true,\r\n                },\r\n            })\r\n            : analysis.getXYSpectrum(query);\r\n        if (!spectra)\r\n            continue;\r\n        if (spectra.meta) {\r\n            meta.push(spectra.meta);\r\n        }\r\n        xAxis = {\r\n            id: 'x',\r\n            label: spectra.variables.x.label +\r\n                (spectra.variables.x.units ? ` [${spectra.variables.x.units}]` : ''),\r\n            ...xAxisOptions,\r\n            position: 'bottom',\r\n            type: 'main',\r\n        };\r\n        yAxis = {\r\n            id: 'y',\r\n            label: spectra.variables.y.label +\r\n                (spectra.variables.y.units ? ` [${spectra.variables.y.units}]` : ''),\r\n            ...yAxisOptions,\r\n            position: 'left',\r\n            type: 'main',\r\n        };\r\n        const data = getData(spectra.variables.x.data, spectra.variables.y.data);\r\n        const serie = {\r\n            type: 'line',\r\n            label: spectra.title,\r\n            data,\r\n            ...seriesOptions,\r\n        };\r\n        content.push(serie);\r\n    }\r\n    if (xAxis === null || yAxis === null) {\r\n        throw new Error('The axes were not defined');\r\n    }\r\n    return {\r\n        content,\r\n        axes: [xAxis, yAxis],\r\n        dimensions,\r\n        meta,\r\n        ...otherOptions,\r\n    };\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0UmVhY3RQbG90SlNPTi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9yZWFjdFBsb3QvZ2V0UmVhY3RQbG90SlNPTi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFxQkEsU0FBUyxPQUFPLENBQUMsQ0FBYSxFQUFFLENBQWE7SUFDM0MsSUFBSSxJQUFJLEdBQWEsSUFBSSxLQUFLLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQ3pDLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxDQUFDLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFO1FBQ2pDLElBQUksQ0FBQyxDQUFDLENBQUMsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO0tBQ2hDO0lBQ0QsT0FBTyxJQUFJLENBQUM7QUFDZCxDQUFDO0FBRUQ7O0dBRUc7QUFDSCxNQUFNLFVBQVUsZ0JBQWdCLENBQzlCLFFBQW9CLEVBQ3BCLEtBQXVCLEVBQ3ZCLFVBQTRCLEVBQUU7SUFFOUIsTUFBTSxFQUNKLGNBQWMsR0FBRyxLQUFLLEVBQ3RCLEtBQUssRUFBRSxZQUFZLEdBQUcsRUFBRSxFQUN4QixLQUFLLEVBQUUsWUFBWSxHQUFHLEVBQUUsVUFBVSxFQUFFLEVBQUUsRUFBRSxFQUN4QyxPQUFPLEVBQUUsYUFBYSxHQUFHLEVBQUUsYUFBYSxFQUFFLElBQUksRUFBRSxFQUNoRCxVQUFVLEdBQUcsRUFBRSxLQUFLLEVBQUUsR0FBRyxFQUFFLE1BQU0sRUFBRSxHQUFHLEVBQUUsRUFDeEMsR0FBRyxZQUFZLEVBQ2hCLEdBQUcsT0FBTyxDQUFDO0lBQ1osSUFBSSxPQUFPLEdBQThCLEVBQUUsQ0FBQztJQUM1QyxJQUFJLElBQUksR0FBNkIsRUFBRSxDQUFDO0lBRXhDLElBQUksS0FBSyxHQUFnQixJQUFJLENBQUM7SUFDOUIsSUFBSSxLQUFLLEdBQWdCLElBQUksQ0FBQztJQUU5QixLQUFLLE1BQU0sUUFBUSxJQUFJLFFBQVEsRUFBRTtRQUMvQixJQUFJLE9BQU8sR0FBRyxjQUFjO1lBQzFCLENBQUMsQ0FBQyxRQUFRLENBQUMscUJBQXFCLENBQUM7Z0JBQzdCLFFBQVEsRUFBRSxLQUFLO2dCQUNmLGFBQWEsRUFBRTtvQkFDYixPQUFPLEVBQUUsQ0FBQyxFQUFFLElBQUksRUFBRSxlQUFlLEVBQUUsQ0FBQztvQkFDcEMsVUFBVSxFQUFFLElBQUk7aUJBQ2pCO2FBQ0YsQ0FBQztZQUNKLENBQUMsQ0FBQyxRQUFRLENBQUMsYUFBYSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ2xDLElBQUksQ0FBQyxPQUFPO1lBQUUsU0FBUztRQUV2QixJQUFJLE9BQU8sQ0FBQyxJQUFJLEVBQUU7WUFDaEIsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7U0FDekI7UUFFRCxLQUFLLEdBQUc7WUFDTixFQUFFLEVBQUUsR0FBRztZQUNQLEtBQUssRUFDSCxPQUFPLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxLQUFLO2dCQUN6QixDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsS0FBSyxPQUFPLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO1lBQ3RFLEdBQUcsWUFBWTtZQUNmLFFBQVEsRUFBRSxRQUFRO1lBQ2xCLElBQUksRUFBRSxNQUFNO1NBQ2IsQ0FBQztRQUNGLEtBQUssR0FBRztZQUNOLEVBQUUsRUFBRSxHQUFHO1lBQ1AsS0FBSyxFQUNILE9BQU8sQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLEtBQUs7Z0JBQ3pCLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxLQUFLLE9BQU8sQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUM7WUFDdEUsR0FBRyxZQUFZO1lBQ2YsUUFBUSxFQUFFLE1BQU07WUFDaEIsSUFBSSxFQUFFLE1BQU07U0FDYixDQUFDO1FBRUYsTUFBTSxJQUFJLEdBQUcsT0FBTyxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLElBQUksRUFBRSxPQUFPLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUN6RSxNQUFNLEtBQUssR0FBbUI7WUFDNUIsSUFBSSxFQUFFLE1BQU07WUFDWixLQUFLLEVBQUUsT0FBTyxDQUFDLEtBQUs7WUFDcEIsSUFBSTtZQUNKLEdBQUcsYUFBYTtTQUNqQixDQUFDO1FBQ0YsT0FBTyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztLQUNyQjtJQUVELElBQUksS0FBSyxLQUFLLElBQUksSUFBSSxLQUFLLEtBQUssSUFBSSxFQUFFO1FBQ3BDLE1BQU0sSUFBSSxLQUFLLENBQUMsMkJBQTJCLENBQUMsQ0FBQztLQUM5QztJQUVELE9BQU87UUFDTCxPQUFPO1FBQ1AsSUFBSSxFQUFFLENBQUMsS0FBSyxFQUFFLEtBQUssQ0FBQztRQUNwQixVQUFVO1FBQ1YsSUFBSTtRQUNKLEdBQUcsWUFBWTtLQUNoQixDQUFDO0FBQ0osQ0FBQyJ9","import { getJSGraph } from './jsgraph/getJSGraph';\r\nimport { getNormalizationAnnotations } from './jsgraph/getNormalizationAnnotations';\r\nexport * from './AnalysesManager';\r\nexport * from './Analysis';\r\nexport * from './from/fromJcamp';\r\nexport * from './from/fromText';\r\nexport * from './to/toJcamp';\r\nexport * from './to/toJcamps';\r\nexport * from './to/toText';\r\nexport * from './util/getNormalizedSpectrum';\r\nexport * from './util/peakPicking';\r\nexport * from './util/autoPeakPicking';\r\nexport * from './types/types';\r\nexport * from './types/AutoPeakPickingOptions';\r\nexport * from './types/NormalizedFilters';\r\nexport * from './types/NormalizedSpectrumOptions';\r\nexport * from './types/PlotObject';\r\nexport * from './types/SGOptions';\r\nexport * from './types/ShapeOptions';\r\nexport * from './types/SpectrumSelector';\r\nexport { getReactPlotJSON } from './reactPlot/getReactPlotJSON';\r\nexport const JSGraph = {\r\n    getJSGraph,\r\n    getNormalizationAnnotations,\r\n};\r\nexport { default as savitzkyGolay } from 'ml-savitzky-golay';\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ2xELE9BQU8sRUFBRSwyQkFBMkIsRUFBRSxNQUFNLHVDQUF1QyxDQUFDO0FBRXBGLGNBQWMsbUJBQW1CLENBQUM7QUFDbEMsY0FBYyxZQUFZLENBQUM7QUFDM0IsY0FBYyxrQkFBa0IsQ0FBQztBQUNqQyxjQUFjLGlCQUFpQixDQUFDO0FBQ2hDLGNBQWMsY0FBYyxDQUFDO0FBQzdCLGNBQWMsZUFBZSxDQUFDO0FBQzlCLGNBQWMsYUFBYSxDQUFDO0FBQzVCLGNBQWMsOEJBQThCLENBQUM7QUFFN0MsY0FBYyxvQkFBb0IsQ0FBQztBQUNuQyxjQUFjLHdCQUF3QixDQUFDO0FBRXZDLGNBQWMsZUFBZSxDQUFDO0FBQzlCLGNBQWMsZ0NBQWdDLENBQUM7QUFDL0MsY0FBYywyQkFBMkIsQ0FBQztBQUMxQyxjQUFjLG1DQUFtQyxDQUFDO0FBRWxELGNBQWMsb0JBQW9CLENBQUM7QUFDbkMsY0FBYyxtQkFBbUIsQ0FBQztBQUNsQyxjQUFjLHNCQUFzQixDQUFDO0FBQ3JDLGNBQWMsMEJBQTBCLENBQUM7QUFFekMsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFFaEUsTUFBTSxDQUFDLE1BQU0sT0FBTyxHQUFHO0lBQ3JCLFVBQVU7SUFDViwyQkFBMkI7Q0FDNUIsQ0FBQztBQUVGLE9BQU8sRUFBRSxPQUFPLElBQUksYUFBYSxFQUFFLE1BQU0sbUJBQW1CLENBQUMifQ=="],"names":["toString","Object","prototype","isAnyArray","object","call","endsWith","a","d","e","f","length","g","h","i","j","c","b","_ref","module","exports","window","median","input","isArray","TypeError","quickSelectMedian","slice","xAdd","array1","array2","isConstant","constant","Error","Number","array3","Array","xMultiply","Float64Array","xDivide","xFindClosestIndex","array","target","low","high","middle","Math","abs","_typeof","obj","Symbol","iterator","constructor","sequentialFill","arguments","undefined","options","_options","_options$from","from","_options$to","to","_options$size","size","step","floor","push","_i","xIsMonotone","sum","sumValue","mean","min","_options$fromIndex","fromIndex","_options$toIndex","toIndex","isInteger","minValue","max","maxValue","xSubtract","xyCheck","data","x","y","xyEnsureGrowingX","prevX","Infinity","ansX","ansY","index","xyFilterXPositive","newX","newY","xyMaxClosestYPoint","targetIndex","previousIndex","MIN_SAFE_INTEGER","currentIndex","xyMaxY","xyMinClosestYPoint","minY","GAUSSIAN_EXP_FACTOR","ROOT_PI_OVER_LN2","ROOT_THREE","ROOT_2LN2","ROOT_2LN2_MINUS_ONE","erfinv","Gaussian","widthToFWHM","fwhmToWidth","fct","getArea","getFactor","getData","Lorentzian","PseudoVoigt","lorentzian","gaussian","getFactorLorentzian","getFactorGaussian","SavitzkyGolay","ys","xs","windowSize","derivative","polynomial","RangeError","console","warn","half","np","ans","weights","fullWeights","hs","constantH","pow","wg1","wg2","d1","d2","l","getHs","wg","center","count","GramPoly","m","k","s","Grampoly","GenFact","gf","Weight","t","n","gsd","noiseLevel","sgOptions","shape","smoothY","heightFactor","broadRatio","maxCriteria","minMaxRatio","derivativeThreshold","realTopDetection","yIn","equalSpaced","isEqualSpaced","getNoiseLevel","yData","dY","ddY","SG","xData","dX","maxDdy","maxY","lastMax","lastMin","minddY","intervalL","intervalR","broadMask","widthProcessor","kind","getShape1D","signals","lastK","possible","frequency","distanceJ","minDistance","gettingCloser","MAX_VALUE","width","soft","left","right","yLeft","yRight","height","determineRealTop","base","sort","tmp","maxDx","minDx","MAX_SAFE_INTEGER","stddev","averageDeviations","peakList","alpha","beta","gamma","p","currentPoint","log10","isEnumerable","propertyIsEnumerable","getSymbols","getOwnPropertySymbols","assignSymbols","args","isObject","arg","names","key","val","require$$0","isValidKey","assign","assignDeepModule","isPrimitive","keys","LN2","sqrt","PI","ln1MinusXSqrd","log","lnEtcBy2Plus2","firstSqrt","secondSqrt","fwhm","sd","factor","ceil","area","setFWHM","setHeight","exp","squareFWHM","tan","mu","setMu","sumOfGaussianLorentzians","nL","result","sumOfGaussians","sumOfLorentzians","checkInput","peaks","optimization","toLowerCase","replace","paramsFunc","defaultParameters","init","peak","gradientDifference","getMaxValue","parameters","assignDeep","par","value","checkOptions","parameterizedFunction","timeout","minValues","maxValues","initialValues","damping","dampingStepUp","dampingStepDown","maxIterations","errorTolerance","centralDifference","improvementThreshold","fill","nbPoints","parLen","filler","checkTimeout","endTime","Date","now","weightSquare","errorCalculation","error","func","rescale","output","currentMin","currentMax","_options$min","autoMinMax","_options$max","indent","repeat","indentData","inspectMatrix","inspectMatrixWithOptions","matrix","maxRows","maxColumns","maxNumSize","name","inspectData","rows","columns","maxI","maxJ","line","formatNumber","get","join","num","numStr","String","padEnd","precise","toPrecision","exponential","toExponential","eIndex","indexOf","installMathOperations","AbstractMatrix","Matrix","add","addS","addM","set","checkMatrix","newMatrix","sub","subS","subM","subtract","subtractS","subtractM","mul","mulS","mulM","multiply","multiplyS","multiplyM","div","divS","divM","divide","divideS","divideM","mod","modS","modM","modulus","modulusS","modulusM","and","andS","andM","or","orS","orM","xor","xorS","xorM","leftShift","leftShiftS","leftShiftM","signPropagatingRightShift","signPropagatingRightShiftS","signPropagatingRightShiftM","rightShift","rightShiftS","rightShiftM","zeroFillRightShift","zeroFillRightShiftS","zeroFillRightShiftM","not","acos","acosh","asin","asinh","atan","atanh","cbrt","clz32","cos","cosh","expm1","fround","log1p","log2","round","sign","sin","sinh","tanh","trunc","arg0","powS","powM","checkRowIndex","outer","checkColumnIndex","checkRowVector","vector","to1DArray","checkColumnVector","checkIndices","rowIndices","columnIndices","row","checkRowIndices","column","checkColumnIndices","rowOut","some","r","columnOut","checkRange","startRow","endRow","startColumn","endColumn","checkNumber","newArray","checkNonEmpty","isEmpty","sumByRow","sumByColumn","sumAll","v","productByRow","productByColumn","productAll","varianceByRow","unbiased","cols","variance","sum1","sum2","varianceByColumn","varianceAll","centerByRow","centerByColumn","centerAll","getScaleByRow","scale","scaleByRow","getScaleByColumn","scaleByColumn","getScaleAll","divider","scaleAll","from1DArray","newRows","newColumns","newData","rowVector","columnVector","zeros","ones","rand","random","randInt","interval","eye","diag","matrix1","matrix2","isMatrix","klass","apply","callback","to2DArray","copy","toJSON","isRowVector","isColumnVector","isVector","isSquare","isSymmetric","isEchelonForm","previousColumn","checked","isReducedEchelonForm","echelonForm","clone","iMax","swapRows","reducedEchelonForm","maxRow","pivot","setSubMatrix","neg","getRow","getRowVector","setRow","row1","row2","temp","getColumn","getColumnVector","setColumn","swapColumns","column1","column2","addRowVector","subRowVector","mulRowVector","divRowVector","addColumnVector","subColumnVector","mulColumnVector","divColumnVector","mulRow","mulColumn","NaN","maxIndex","idx","minIndex","maxRowIndex","minRow","minRowIndex","maxColumn","maxColumnIndex","minColumn","minColumnIndex","norm","type","cumulativeSum","dot","vector2","vector1","mmul","other","Bcolj","strassen2x2","a11","b11","a12","b12","a21","b21","a22","b22","m1","m2","m3","m4","m5","m6","m7","c00","c01","c10","c11","strassen3x3","a00","a01","a02","a10","a20","b00","b01","b02","b10","b20","m8","m9","m10","m11","m12","m13","m14","m15","m16","m17","m18","m19","m20","m21","m22","m23","c02","c12","c20","c21","c22","mmulStrassen","r1","c1","r2","c2","embed","mat","resultat","blockMult","halfRows","parseInt","halfCols","subMatrix","scaleRows","isFinite","scaleColumns","flipRows","first","last","flipColumns","kroneckerProduct","q","kroneckerSum","AxI","IxB","transpose","sortRows","compareFunction","compareNumbers","sortColumns","subMatrixRow","indices","subMatrixColumn","selection","rowIndex","columnIndex","trace","by","product","standardDeviation","for","randomInt","diagonal","identity","negate","tensorProduct","nRows","nColumns","arrayData","removeRow","splice","addRow","removeColumn","newRow","addColumn","BaseView","MatrixTransposeView","WrapperMatrix2D","LuDecomposition","lu","pivotVector","pivotSign","LUcolj","kmax","LU","isSingular","col","solve","X","determinant","lowerTriangularMatrix","upperTriangularMatrix","pivotPermutationVector","hypotenuse","QrDecomposition","qr","rdiag","nrm","QR","Rdiag","isFullRank","orthogonalMatrix","SingularValueDecomposition","computeLeftSingularVectors","computeRightSingularVectors","autoTranspose","wantu","Boolean","wantv","swapped","aux","nu","ni","U","V","work","si","nct","nrt","mrc","pp","eps","EPSILON","kase","MIN_VALUE","isNaN","ks","cs","sn","sp","spm1","epm1","sk","ek","shift","Y","threshold","scols","Ls","rightSingularVectors","VL","vrows","urows","VLU","solveForDiagonal","inverse","vcols","ucols","condition","norm2","rank","tol","ii","leftSingularVectors","diagonalMatrix","useSVD","leftHandSide","rightHandSide","gradientFunction","evaluatedData","params","paramFunction","nbParams","param","delta","auxParams","funcParam","point","funcParam2","matrixFunction","gradientFunc","residualError","inverseMatrix","jacobianWeigthResidualError","perturbations","levenbergMarquardt","converged","iteration","previousError","improvementMetric","parameterValues","parameterError","iterations","LEVENBERG_MARQUARDT","selectMethod","optimizationOptions","getKind","algorithm","LM","lmOptions","optimize","nbShapes","parameterKey","pMin","pMax","pInit","gradientDifferenceValue","pFit","ldlSymbolic","Ap","Ai","Lp","Parent","Lnz","Flag","kk","p2","ldlNumeric","Ax","Li","Lx","D","Pattern","yi","lKi","len","top","ldlLsolve","ldlDsolve","ldlLTsolve","ldlPerm","B","P","ldlPermt","prepare","M","Pinv","Mt","ar","ac","LNZ","coloffset","adr","bp1","cuthillMckee_1","cuthillMckee","compareNum","list","adj","visited","toVisit","eol","ptr","nbhd","u","getClosestNumber","goal","closest","reduce","prev","curr","getCloseIndex","updateSystem","newVector","w","next","getDeltaMatrix","lambda","lowerTriangularNonZeros","permutationEncodedArray","airPLS","factorCriterion","controlPoints","baseLineZones","forEach","arr","range","indexFrom","indexTo","baseline","sumNegDifferences","stopCriterion","cho","Cholesky","difference","map","calculateError","maxNegativeDiff","diff","corrected","airPLSBaseline","numberPoints","regressionOptions","airpls","correctedSpectrum","maybeToPrecision","digits","checkArraySize","BaseRegression","new","predict","_predict","train","toLaTeX","score","y2","xSum","ySum","chi2","rmsd","xSquared","ySquared","xY","PolynomialRegression","degree","powers","coefficients","checkArrayLength","regress","precision","_toFormula","isLaTeX","sup","closeSup","times","fn","str","charAt","load","json","pr","F","FT","A","baselineCorrectionRegression","Regression","tolerance","fitting","oldFitting","regression","iterativePolynomialBaseline","baselineCorrection","xCheck","xPadding","fromEnd","toEnd","xRolling","padding","subArray","buffer","xRollingAverage","xRollingMedian","rollingAverageBaseline","defaults","actualOptions","rollingBall","spectrum","maxima","minima","windowM","windowS","windowLeft","windowRight","rollingBallBaseline","rollingMedianBaseline","_options$algorithm","_options$sumValue","_options$maxValue","absoluteSumValue","absoluteSum","currentMaxValue","sumFactor","_i2","concat","normalize","zones","NEGATIVE_INFINITY","POSITIVE_INFINITY","JSON","parse","stringify","zone","filter","currentZone","invert","exclusions","exclusion","nextExclusion","zonesWithPoints","numberOfPoints","totalSize","previous","current","unitsPerPoint","currentTotal","equallySpacedSlot","xLength","halfStep","lastStep","start","previousX","previousY","nextX","nextY","frontOutsideSpectra","backOutsideSpectra","currentValue","currentPoints","main","integral","x0","x1","slope","intercept","equallySpacedSmooth","initialOriginalStep","lastOriginalStep","sumAtMin","sumAtMax","getSlope","y0","y1","equallySpaced","arrayXY","reverse","variant","xResult","yResult","zoneResult","processZone","getZones","currentFrom","filterX","points","currentZoneIndex","position","defaultOptions","arrayCase","cond","matrixCase","padArray","src","values","minMax","arithmeticMean","geometricMean","logMean","lnsum","grandMean","means","samples","truncatedMean","percent","alreadySorted","harmonicMean","contraHarmonicMean","theMean","theVariance","standardError","robustMeanAndStdev","stdev","quartiles","quart","q1","q2","q3","pooledStandardDeviation","pooledVariance","vari","mode","itemCount","itemArray","covariance","mean1","mean2","cov","skewness","s2","s3","dev","kurtosis","s4","entropy","weightedMean","weightedStandardDeviation","weightedVariance","z","inPlace","standardize","standardDev","normed","global","factory","this","isString","isFiniteImpl","isNumber","uniq","strings","seen","item","hasOwnProperty","compareArray","properties","mulSafe","decimals","getFractional","divSafe","den","invDen","QtyError","err","create","message","stack","throwIncompatibleUnits","UNITS","BASE_UNITS","UNITY","UNITY_ARRAY","validateUnitDefinition","unitDef","definition","scalar","numerator","denominator","unit","PREFIX_VALUES","PREFIX_MAP","UNIT_VALUES","UNIT_MAP","OUTPUT_MAP","getUnits","units","unitKeys","substr","getKinds","getAliases","unitName","SIGNATURE_VECTOR","unitSignature","signature","unitSignatureVector","isBase","toBase","SIGN","INTEGER","SIGNED_INTEGER","FRACTION","FLOAT","EXPONENT","SCI_NUMBER","SIGNED_NUMBER","QTY_STRING","QTY_STRING_REGEX","RegExp","POWER_OP","SAFE_POWER","TOP_REGEX","BOTTOM_REGEX","trim","exec","scalarMatch","parseFloat","bottom","nx","UNIT_TEST_REGEX","test","parseUnits","PREFIX_REGEX","UNIT_REGEX","BOUNDARY_REGEX","UNIT_MATCH","UNIT_MATCH_REGEX","parsedUnitsCache","cached","unitMatch","normalizedUnits","globalParse","isQty","Qty","initValue","initUnits","assertValidConstructorArgs","baseScalar","_conversionCache","isDefinitionObject","updateBaseScalar","isTemperature","KINDS","knownSignature","isDegrees","match","subtractTemperatures","lhs","rhs","lhsUnits","rhsConverted","dstDegrees","getDegreeUnits","subtractTempDegrees","deg","tempDegrees","addTempDegrees","toDegrees","dst","srcDegK","toDegK","dstUnits","dstScalar","qty","toTemp","toTempK","isCompatible","isInverse","baseUnitCache","toBaseUnits","toFloat","isUnitless","toPrec","precQuantity","precRoundedResult","swiftConverter","srcUnits","srcQty","dstQty","eq","convert","converter","op1","op2","numdenscale","cleanTerms","num1","den1","num2","den2","notUnity","combined","combineTerms","terms","direction","prefix","prefixValue","combinedPrefixValue","prop","compareTo","lt","lte","gt","gte","same","every","_isBase","NestedMap","childMap","defaultFormatter","formatter","_units","numIsUnity","denIsUnity","numUnits","stringifyUnits","denUnits","targetUnitsOrMaxDecimalsOrPrec","maxDecimals","targetUnits","out","outScalar","format","targetQty","stringifiedUnitsCache","stringified","isUnity","simplify","getOutputNames","unitNames","token","tokenNext","unitCounts","acc","unitCounter","unitCount","version","ensureString","parseString","lowercase","number","includes","GC_MS_FIELDS","complexChromatogram","spectra","chromatogram","series","ms","dimension","existingGCMSFields","label","convertMSFieldToLabel","pageValue","isMSField","canonicDataLabel","convertToFloatArray","stringArray","floatArray","fastParseXYData","yFactor","deltaX","isXYdata","currentData","currentX","firstX","currentY","firstY","endLine","ascii","charCodeAt","newLine","isDifference","isLastDifference","lastDifference","isDuplicate","inComment","lastValue","isNegative","inValue","skipFirstValue","decimalPosition","duplicate","ascii2","removeCommentRegExp","peakTableSplitRegExp","parsePeakTable","isPeaktable","variables","parseXY","parseXYZ","lines","split","xFactor","logs","numberOfVariables","variable","parseXYA","removeSymbolRegExp","isXYAdata","convertTo3DZ","minZ","maxZ","ySize","xSize","lastX","lastY","medians","getMedian","minX","maxX","noise","generateContourLines","zData","povarHeight0","povarHeight1","povarHeight2","povarHeight3","isOver0","isOver1","isOver2","isOver3","nbSubSpectra","nbPovars","pAx","pAy","pBx","pBy","xN","dx","yN","dy","iter","nbContourLevels","contourLevels","lineZValue","level","contourLevel","side","noiseMultiplier","zValue","iSubSpectra","subSpectra","subSpectraAfter","povar","segments","add2D","noContour","contourLines","postProcessingNMR","entriesFlat","entry","observeFrequency","shiftOffsetVal","ntuples","symbol","xUnits","toUpperCase","nucleus","startsWith","$NUC2","f2index","$NUC1","yType","pageSymbolIndex","pageSymbol","ratio0","gyromagneticRatio","ratio1","ratio","profiling","action","time","simpleChromatogram","intensity","postProcessing","newNtuples","twoD","wantXY","keepSpectra","prepareNtuplesDatatable","currentEntry","xIndex","yIndex","firstVariable","secondVariable","lowerCaseSymbol","vardim","varname","yUnits","prepareSpectrum","ntuplesSeparatorRegExp","Spectrum","keepRecordsRegExp","canonicDataLabels","canonicMetadataLabels","dynamicTyping","withoutXY","jcamp","entries","tmpResult","children","parentsStack","ldrs","ldr","dataLabel","substring","dataValue","infos","datatable","parentEntry","info","meta","title","dataType","dataClass","xType","shiftOffsetNum","vartype","varform","page","sampleDescription","pop","flatten","blob","encoding","ArrayBuffer","isView","decoder","TextDecoder","decode","uniqueX","counter","text","xColumn","yColumn","keepInfo","bestGuess","numberColumns","maxNumberColumns","minNumberColumns","fields","skipFirstColumn","uniqueXFunction","mlArrayMax","creatorNtuples","owner","origin","varName","varType","varDim","isDependent","minFct","maxFct","header","getNumber","rounded","peakTableCreator","xyDataCreator","fromJSON","xydata","fromVariables","forceNtuples","jcampOptions","xLabel","yLabel","optimizePeak"],"mappings":"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"}